{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TaskboardComponent_div_28_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction TaskboardComponent_div_28_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_28_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.toggleEditMode(task_r1));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_28_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_28_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.saveTask(task_r1));\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_28_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_28_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.cancelEdit(task_r1));\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16)(4, \"p\", 17);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 17);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 17);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, TaskboardComponent_div_28_div_10_Template, 1, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 19);\n    i0.ɵɵtemplate(12, TaskboardComponent_div_28_button_12_Template, 2, 0, \"button\", 20);\n    i0.ɵɵtemplate(13, TaskboardComponent_div_28_button_13_Template, 2, 0, \"button\", 20);\n    i0.ɵɵtemplate(14, TaskboardComponent_div_28_button_14_Template, 2, 0, \"button\", 20);\n    i0.ɵɵelementStart(15, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_28_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.deleteTask(task_r1._id));\n    });\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.Title, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.Description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", task_r1.DueDate, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Priority: \", task_r1.Priority, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode);\n  }\n}\nexport class TaskboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.newTask = {}; // New task data object\n    this.showAddForm = false; // Flag to toggle add task form\n    this.searchKeyword = ''; // Add this line\n    this.selectedPriority = 'all'; // Add this line\n  }\n\n  ngOnInit() {\n    this.getTask();\n  }\n  getTask() {\n    this.dataService.getTaskData().subscribe(res => {\n      this.data = res;\n    });\n  }\n  toggleEditMode(task) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n  toggleAddForm() {\n    this.showAddForm = !this.showAddForm;\n  }\n  addTask() {\n    this.dataService.addTask(this.newTask).subscribe(() => {\n      console.log('Task added successfully');\n      this.getTask();\n      this.newTask = {}; // Clear new task data\n      this.showAddForm = false; // Hide add task form\n    }, error => {\n      console.error('Error adding task:', error);\n    });\n  }\n  saveTask(task) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(() => {\n      console.log('Task updated successfully');\n      task.Title = task.updatedTitle;\n      task.Description = task.updatedDescription;\n      task.DueDate = task.updatedDueDate;\n      task.Priority = task.updatedPriority;\n      task.editMode = false;\n    }, error => {\n      console.error('Error updating task:', error);\n    });\n  }\n  deleteTask(taskId) {\n    if (confirm('Are you sure you want to delete this task?')) {\n      this.dataService.deleteTask(taskId).subscribe(() => {\n        console.log('Task deleted successfully');\n        this.getTask();\n      }, error => {\n        console.error('Error deleting task:', error);\n      });\n    }\n  }\n  filterTasks() {\n    if (!this.data) {\n      return [];\n    }\n    if (this.selectedPriority === 'all') {\n      return this.data.filter(task => task.Title.includes(this.searchKeyword));\n    } else {\n      return this.data.filter(task => task.Title.includes(this.searchKeyword) && task.Priority === this.selectedPriority);\n    }\n  }\n}\n_class = TaskboardComponent;\n_class.ɵfac = function TaskboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskserviceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskboard\"]],\n  decls: 29,\n  vars: 7,\n  consts: [[1, \"add-task-form\"], [\"placeholder\", \"Title\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"placeholder\", \"Due Date\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"low\"], [\"value\", \"moderate\"], [\"value\", \"high\"], [3, \"click\"], [1, \"filter-form\"], [\"type\", \"text\", \"placeholder\", \"Search tasks...\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"all\"], [1, \"card-container\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"card-text\"], [4, \"ngIf\"], [1, \"card-footer\"], [3, \"click\", 4, \"ngIf\"]],\n  template: function TaskboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 0)(2, \"h3\");\n      i0.ɵɵtext(3, \"Add New Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.newTask.Title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"textarea\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_textarea_ngModelChange_5_listener($event) {\n        return ctx.newTask.Description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.newTask.DueDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_select_ngModelChange_7_listener($event) {\n        return ctx.newTask.Priority = $event;\n      });\n      i0.ɵɵelementStart(8, \"option\", 5);\n      i0.ɵɵtext(9, \"Low\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"option\", 6);\n      i0.ɵɵtext(11, \"Moderate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"option\", 7);\n      i0.ɵɵtext(13, \"High\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function TaskboardComponent_Template_button_click_14_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵtext(15, \"Add\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.searchKeyword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_select_ngModelChange_18_listener($event) {\n        return ctx.selectedPriority = $event;\n      });\n      i0.ɵɵelementStart(19, \"option\", 11);\n      i0.ɵɵtext(20, \"All Priorities\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 5);\n      i0.ɵɵtext(22, \"Low\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 6);\n      i0.ɵɵtext(24, \"Moderate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 7);\n      i0.ɵɵtext(26, \"High\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"div\", 12);\n      i0.ɵɵtemplate(28, TaskboardComponent_div_28_Template, 17, 8, \"div\", 13);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.Title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.Description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.DueDate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.Priority);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchKeyword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPriority);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filterTasks());\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".card-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 20px;\\n  }\\n  \\n  .card[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    padding: 10px;\\n    width: 300px;\\n    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\\n    background-color: white;\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-content[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    margin-right: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child {\\n    margin-right: 0;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLFNBQVM7RUFDWDs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLFlBQVk7SUFDWiwwQ0FBMEM7SUFDMUMsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgZ2FwOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1oZWFkZXIge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtY29udGVudCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1hY3Rpb25zIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtYWN0aW9ucyBidXR0b246bGFzdC1jaGlsZCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","TaskboardComponent_div_28_button_12_Template_button_click_0_listener","ɵɵrestoreView","_r8","task_r1","ɵɵnextContext","$implicit","ctx_r6","ɵɵresetView","toggleEditMode","ɵɵtext","ɵɵelementEnd","TaskboardComponent_div_28_button_13_Template_button_click_0_listener","_r11","ctx_r9","saveTask","TaskboardComponent_div_28_button_14_Template_button_click_0_listener","_r14","ctx_r12","cancelEdit","ɵɵtemplate","TaskboardComponent_div_28_div_10_Template","TaskboardComponent_div_28_button_12_Template","TaskboardComponent_div_28_button_13_Template","TaskboardComponent_div_28_button_14_Template","TaskboardComponent_div_28_Template_button_click_15_listener","restoredCtx","_r16","ctx_r15","deleteTask","_id","ɵɵadvance","ɵɵtextInterpolate1","Title","ɵɵtextInterpolate","Description","DueDate","Priority","ɵɵproperty","editMode","TaskboardComponent","constructor","dataService","newTask","showAddForm","searchKeyword","selectedPriority","ngOnInit","getTask","getTaskData","subscribe","res","data","task","updatedTitle","updatedDescription","updatedDueDate","updatedPriority","toggleAddForm","addTask","console","log","error","updateTask","taskId","confirm","filterTasks","filter","includes","ɵɵdirectiveInject","i1","TaskserviceService","selectors","decls","vars","consts","template","TaskboardComponent_Template","rf","ctx","TaskboardComponent_Template_input_ngModelChange_4_listener","$event","TaskboardComponent_Template_textarea_ngModelChange_5_listener","TaskboardComponent_Template_input_ngModelChange_6_listener","TaskboardComponent_Template_select_ngModelChange_7_listener","TaskboardComponent_Template_button_click_14_listener","TaskboardComponent_Template_input_ngModelChange_17_listener","TaskboardComponent_Template_select_ngModelChange_18_listener","TaskboardComponent_div_28_Template"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.ts","F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.css']\n})\nexport class TaskboardComponent implements OnInit {\n  data: any;\n  newTask: any = {}; // New task data object\n  showAddForm: boolean = false; // Flag to toggle add task form\n  searchKeyword: string = ''; // Add this line\n  selectedPriority: string = 'all'; // Add this line\n\n\n  constructor(private dataService: TaskserviceService) {}\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  getTask() {\n    this.dataService.getTaskData().subscribe((res) => {\n      this.data = res;\n    });\n  }\n\n  toggleEditMode(task: any) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n\n  toggleAddForm() {\n    this.showAddForm = !this.showAddForm;\n  }\n\n  addTask() {\n    this.dataService.addTask(this.newTask).subscribe(\n      () => {\n        console.log('Task added successfully');\n        this.getTask();\n        this.newTask = {}; // Clear new task data\n        this.showAddForm = false; // Hide add task form\n      },\n      (error) => {\n        console.error('Error adding task:', error);\n      }\n    );\n  }\n\n  saveTask(task: any) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(\n      () => {\n        console.log('Task updated successfully');\n        task.Title = task.updatedTitle;\n        task.Description = task.updatedDescription;\n        task.DueDate = task.updatedDueDate;\n        task.Priority = task.updatedPriority;\n        task.editMode = false;\n      },\n      (error) => {\n        console.error('Error updating task:', error);\n      }\n    );\n  }\n\n  deleteTask(taskId: string) {\n    if (confirm('Are you sure you want to delete this task?')) {\n      this.dataService.deleteTask(taskId).subscribe(\n        () => {\n          console.log('Task deleted successfully');\n          this.getTask();\n        },\n        (error) => {\n          console.error('Error deleting task:', error);\n        }\n      );\n    }\n  }\n  filterTasks() {\n    if (!this.data) {\n      return [];\n    }\n\n    if (this.selectedPriority === 'all') {\n      return this.data.filter((task: any) => task.Title.includes(this.searchKeyword));\n    } else {\n      return this.data.filter((task: any) =>\n        task.Title.includes(this.searchKeyword) && task.Priority === this.selectedPriority\n      );\n    }\n  }\n}\n\n\n","<div class=\"add-task-form\">\n    <div class=\"add-task-form\">\n        <h3>Add New Task</h3>\n        <input [(ngModel)]=\"newTask.Title\" placeholder=\"Title\">\n        <textarea [(ngModel)]=\"newTask.Description\" placeholder=\"Description\"></textarea>\n        <input [(ngModel)]=\"newTask.DueDate\" type=\"date\" placeholder=\"Due Date\">\n        <select [(ngModel)]=\"newTask.Priority\">\n          <option value=\"low\">Low</option>\n          <option value=\"moderate\">Moderate</option>\n          <option value=\"high\">High</option>\n        </select>\n        <button (click)=\"addTask()\">Add</button>\n      </div>\n      \n  </div>\n  \n  <div class=\"filter-form\">\n    <input type=\"text\" [(ngModel)]=\"searchKeyword\" placeholder=\"Search tasks...\">\n    <select [(ngModel)]=\"selectedPriority\">\n      <option value=\"all\">All Priorities</option>\n      <option value=\"low\">Low</option>\n      <option value=\"moderate\">Moderate</option>\n      <option value=\"high\">High</option>\n    </select>\n  </div>\n  \n  <div class=\"card-container\">\n    <div class=\"card\" *ngFor=\"let task of filterTasks()\">\n      <div class=\"card-header\">\n        {{ task.Title }}\n      </div>\n      <div class=\"card-body\">\n        <p class=\"card-text\">{{ task.Description }}</p>\n        <p class=\"card-text\">Due Date: {{ task.DueDate }}</p>\n        <p class=\"card-text\">Priority: {{ task.Priority }}</p>\n        <div *ngIf=\"task.editMode\">\n          <!-- Edit form inputs here -->\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <button *ngIf=\"!task.editMode\" (click)=\"toggleEditMode(task)\">Edit</button>\n        <button *ngIf=\"task.editMode\" (click)=\"saveTask(task)\">Save</button>\n        <button *ngIf=\"task.editMode\" (click)=\"cancelEdit(task)\">Cancel</button>\n        <button (click)=\"deleteTask(task._id)\">Delete</button>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}