{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TaskboardComponent_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r1.Title);\n  }\n}\nfunction TaskboardComponent_div_16_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_16_ng_template_3_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.updatedTitle = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.updatedTitle);\n  }\n}\nfunction TaskboardComponent_div_16_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r1.Description);\n  }\n}\nfunction TaskboardComponent_div_16_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_16_ng_template_7_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.updatedDescription = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.updatedDescription);\n  }\n}\nfunction TaskboardComponent_div_16_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", task_r1.DueDate, \"\");\n  }\n}\nfunction TaskboardComponent_div_16_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_16_ng_template_10_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.updatedDueDate = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.updatedDueDate);\n  }\n}\nfunction TaskboardComponent_div_16_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Priority: \", task_r1.Priority, \"\");\n  }\n}\nfunction TaskboardComponent_div_16_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_16_ng_template_13_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.updatedPriority = $event);\n    });\n    i0.ɵɵelementStart(1, \"option\", 5);\n    i0.ɵɵtext(2, \"Low\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"option\", 6);\n    i0.ɵɵtext(4, \"Moderate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"option\", 7);\n    i0.ɵɵtext(6, \"High\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.updatedPriority);\n  }\n}\nfunction TaskboardComponent_div_16_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_16_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.toggleEditMode(task_r1));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_16_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_16_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.saveTask(task_r1));\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_16_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_16_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.toggleEditMode(task_r1));\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ɵɵtemplate(2, TaskboardComponent_div_16_div_2_Template, 2, 1, \"div\", 13);\n    i0.ɵɵtemplate(3, TaskboardComponent_div_16_ng_template_3_Template, 1, 1, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 15);\n    i0.ɵɵtemplate(6, TaskboardComponent_div_16_div_6_Template, 2, 1, \"div\", 13);\n    i0.ɵɵtemplate(7, TaskboardComponent_div_16_ng_template_7_Template, 1, 1, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(9, TaskboardComponent_div_16_div_9_Template, 3, 1, \"div\", 13);\n    i0.ɵɵtemplate(10, TaskboardComponent_div_16_ng_template_10_Template, 1, 1, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(12, TaskboardComponent_div_16_div_12_Template, 3, 1, \"div\", 13);\n    i0.ɵɵtemplate(13, TaskboardComponent_div_16_ng_template_13_Template, 7, 1, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 19);\n    i0.ɵɵtemplate(16, TaskboardComponent_div_16_button_16_Template, 2, 0, \"button\", 20);\n    i0.ɵɵtemplate(17, TaskboardComponent_div_16_button_17_Template, 2, 0, \"button\", 20);\n    i0.ɵɵtemplate(18, TaskboardComponent_div_16_button_18_Template, 2, 0, \"button\", 20);\n    i0.ɵɵelementStart(19, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_16_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r47);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.deleteTask(task_r1._id));\n    });\n    i0.ɵɵtext(20, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const _r3 = i0.ɵɵreference(4);\n    const _r6 = i0.ɵɵreference(8);\n    const _r9 = i0.ɵɵreference(11);\n    const _r12 = i0.ɵɵreference(14);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r9);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r12);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode);\n  }\n}\nexport class TaskboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.newTask = {}; // Initialize an empty new task object\n  }\n\n  ngOnInit() {\n    this.getTask();\n  }\n  getTask() {\n    this.dataService.getTaskData().subscribe(res => {\n      this.data = res;\n    });\n  }\n  toggleEditMode(task) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n  selectPriority(task, priority) {\n    task.updatedPriority = priority;\n  }\n  saveTask(task) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(() => {\n      console.log('Task updated successfully');\n      task.Title = task.updatedTitle;\n      task.Description = task.updatedDescription;\n      task.DueDate = task.updatedDueDate;\n      task.Priority = task.updatedPriority;\n      task.editMode = false;\n    }, error => {\n      console.error('Error updating task:', error);\n    });\n  }\n  cancelEdit(task) {\n    task.editMode = false;\n    // Reset the priority back to its original value\n    task.updatedPriority = task.Priority;\n  }\n  addTask() {\n    this.dataService.addTask(this.newTask).subscribe(response => {\n      console.log('Task added successfully');\n      this.data.push(response); // Add the new task to the data array\n      this.newTask = {}; // Reset the new task object\n    }, error => {\n      console.error('Error adding task:', error);\n    });\n  }\n  deleteTask(taskId) {\n    this.dataService.deleteTask(taskId).subscribe(() => {\n      console.log('Task deleted successfully');\n      this.data = this.data.filter(task => task._id !== taskId);\n    }, error => {\n      console.error('Error deleting task:', error);\n    });\n  }\n}\n_class = TaskboardComponent;\n_class.ɵfac = function TaskboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskserviceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskboard\"]],\n  decls: 17,\n  vars: 5,\n  consts: [[1, \"add-task-form\"], [\"placeholder\", \"Title\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"placeholder\", \"Due Date\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"low\"], [\"value\", \"moderate\"], [\"value\", \"high\"], [3, \"click\"], [1, \"card-container\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"card-header\"], [4, \"ngIf\", \"ngIfElse\"], [\"editModeTitle\", \"\"], [1, \"card-body\"], [\"editModeDescription\", \"\"], [\"editModeDueDate\", \"\"], [\"editModePriority\", \"\"], [1, \"card-footer\"], [3, \"click\", 4, \"ngIf\"], [1, \"card-text\"], [\"type\", \"date\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function TaskboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Add New Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.newTask.Title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"textarea\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_textarea_ngModelChange_4_listener($event) {\n        return ctx.newTask.Description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.newTask.DueDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_select_ngModelChange_6_listener($event) {\n        return ctx.newTask.Priority = $event;\n      });\n      i0.ɵɵelementStart(7, \"option\", 5);\n      i0.ɵɵtext(8, \"Low\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"option\", 6);\n      i0.ɵɵtext(10, \"Moderate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 7);\n      i0.ɵɵtext(12, \"High\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function TaskboardComponent_Template_button_click_13_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵtext(14, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 9);\n      i0.ɵɵtemplate(16, TaskboardComponent_div_16_Template, 21, 11, \"div\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.Title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.Description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.DueDate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.Priority);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".card-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 20px;\\n  }\\n  \\n  .card[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    padding: 10px;\\n    width: 300px;\\n    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\\n    background-color: white;\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-content[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    margin-right: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child {\\n    margin-right: 0;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLFNBQVM7RUFDWDs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLFlBQVk7SUFDWiwwQ0FBMEM7SUFDMUMsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgZ2FwOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1oZWFkZXIge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtY29udGVudCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1hY3Rpb25zIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtYWN0aW9ucyBidXR0b246bGFzdC1jaGlsZCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","task_r1","Title","ɵɵlistener","TaskboardComponent_div_16_ng_template_3_Template_input_ngModelChange_0_listener","$event","ɵɵrestoreView","_r20","ɵɵnextContext","$implicit","ɵɵresetView","updatedTitle","ɵɵproperty","Description","TaskboardComponent_div_16_ng_template_7_Template_input_ngModelChange_0_listener","_r25","updatedDescription","ɵɵtextInterpolate1","DueDate","TaskboardComponent_div_16_ng_template_10_Template_input_ngModelChange_0_listener","_r30","updatedDueDate","Priority","TaskboardComponent_div_16_ng_template_13_Template_select_ngModelChange_0_listener","_r35","updatedPriority","TaskboardComponent_div_16_button_16_Template_button_click_0_listener","_r39","ctx_r37","toggleEditMode","TaskboardComponent_div_16_button_17_Template_button_click_0_listener","_r42","ctx_r40","saveTask","TaskboardComponent_div_16_button_18_Template_button_click_0_listener","_r45","ctx_r43","ɵɵtemplate","TaskboardComponent_div_16_div_2_Template","TaskboardComponent_div_16_ng_template_3_Template","ɵɵtemplateRefExtractor","TaskboardComponent_div_16_div_6_Template","TaskboardComponent_div_16_ng_template_7_Template","TaskboardComponent_div_16_div_9_Template","TaskboardComponent_div_16_ng_template_10_Template","TaskboardComponent_div_16_div_12_Template","TaskboardComponent_div_16_ng_template_13_Template","TaskboardComponent_div_16_button_16_Template","TaskboardComponent_div_16_button_17_Template","TaskboardComponent_div_16_button_18_Template","TaskboardComponent_div_16_Template_button_click_19_listener","restoredCtx","_r47","ctx_r46","deleteTask","_id","editMode","_r3","_r6","_r9","_r12","TaskboardComponent","constructor","dataService","newTask","ngOnInit","getTask","getTaskData","subscribe","res","data","task","selectPriority","priority","updateTask","console","log","error","cancelEdit","addTask","response","push","taskId","filter","ɵɵdirectiveInject","i1","TaskserviceService","selectors","decls","vars","consts","template","TaskboardComponent_Template","rf","ctx","TaskboardComponent_Template_input_ngModelChange_3_listener","TaskboardComponent_Template_textarea_ngModelChange_4_listener","TaskboardComponent_Template_input_ngModelChange_5_listener","TaskboardComponent_Template_select_ngModelChange_6_listener","TaskboardComponent_Template_button_click_13_listener","TaskboardComponent_div_16_Template"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.ts","F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.css']\n})\nexport class TaskboardComponent implements OnInit {\n  data: any;\n  newTask: any = {}; // Initialize an empty new task object\n\n  constructor(private dataService: TaskserviceService) {}\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  getTask() {\n    this.dataService.getTaskData().subscribe((res) => {\n      this.data = res;\n    });\n  }\n\n  toggleEditMode(task: any) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n\n  selectPriority(task: any, priority: string) {\n    task.updatedPriority = priority;\n  }\n\n  saveTask(task: any) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(\n      () => {\n        console.log('Task updated successfully');\n        task.Title = task.updatedTitle;\n        task.Description = task.updatedDescription;\n        task.DueDate = task.updatedDueDate;\n        task.Priority = task.updatedPriority;\n        task.editMode = false;\n      },\n      (error) => {\n        console.error('Error updating task:', error);\n      }\n    );\n  }\n\n  cancelEdit(task: any) {\n    task.editMode = false;\n    // Reset the priority back to its original value\n    task.updatedPriority = task.Priority;\n  }\n\n  addTask() {\n    this.dataService.addTask(this.newTask).subscribe(\n      (response) => {\n        console.log('Task added successfully');\n        this.data.push(response); // Add the new task to the data array\n        this.newTask = {}; // Reset the new task object\n      },\n      (error) => {\n        console.error('Error adding task:', error);\n      }\n    );\n  }\n\n  deleteTask(taskId: string) {\n    this.dataService.deleteTask(taskId).subscribe(\n      () => {\n        console.log('Task deleted successfully');\n        this.data = this.data.filter((task: any) => task._id !== taskId);\n      },\n      (error) => {\n        console.error('Error deleting task:', error);\n      }\n    );\n  }\n}\n","<div class=\"add-task-form\">\n    <h3>Add New Task</h3>\n    <input [(ngModel)]=\"newTask.Title\" placeholder=\"Title\">\n    <textarea [(ngModel)]=\"newTask.Description\" placeholder=\"Description\"></textarea>\n    <input [(ngModel)]=\"newTask.DueDate\" type=\"date\" placeholder=\"Due Date\">\n    <select [(ngModel)]=\"newTask.Priority\">\n      <option value=\"low\">Low</option>\n      <option value=\"moderate\">Moderate</option>\n      <option value=\"high\">High</option>\n    </select>\n    <button (click)=\"addTask()\">Add</button>\n  </div>\n  <div class=\"card-container\">\n    <div class=\"card\" *ngFor=\"let task of data\">\n      <div class=\"card-header\">\n        <div *ngIf=\"!task.editMode; else editModeTitle\">{{ task.Title }}</div>\n        <ng-template #editModeTitle>\n          <input [(ngModel)]=\"task.updatedTitle\" placeholder=\"Title\">\n        </ng-template>\n      </div>\n      <div class=\"card-body\">\n        <div *ngIf=\"!task.editMode; else editModeDescription\">{{ task.Description }}</div>\n        <ng-template #editModeDescription>\n          <input [(ngModel)]=\"task.updatedDescription\" placeholder=\"Description\">\n        </ng-template>\n        <div *ngIf=\"!task.editMode; else editModeDueDate\">\n          <p class=\"card-text\">Due Date: {{ task.DueDate }}</p>\n        </div>\n        <ng-template #editModeDueDate>\n          <input [(ngModel)]=\"task.updatedDueDate\" type=\"date\">\n        </ng-template>\n        <div *ngIf=\"!task.editMode; else editModePriority\">\n          <p class=\"card-text\">Priority: {{ task.Priority }}</p>\n        </div>\n        <ng-template #editModePriority>\n          <select [(ngModel)]=\"task.updatedPriority\">\n            <option value=\"low\">Low</option>\n            <option value=\"moderate\">Moderate</option>\n            <option value=\"high\">High</option>\n          </select>\n        </ng-template>\n      </div>\n      <div class=\"card-footer\">\n        <button *ngIf=\"!task.editMode\" (click)=\"toggleEditMode(task)\">Edit</button>\n        <button *ngIf=\"task.editMode\" (click)=\"saveTask(task)\">Save</button>\n        <button *ngIf=\"task.editMode\" (click)=\"toggleEditMode(task)\">Cancel</button>\n        <button (click)=\"deleteTask(task._id)\">Delete</button>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}