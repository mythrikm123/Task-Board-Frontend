{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(router, taskService) {\n    this.router = router;\n    this.taskService = taskService;\n    this.email = '';\n    this.password = '';\n    this.formSubmitted = false;\n    this.errorMessage = '';\n    this.showPassword = false;\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  login() {\n    this.formSubmitted = true;\n    if (this.email && this.password) {\n      const loginData = {\n        email: this.email,\n        password: this.password\n      };\n      this.taskService.loginData(loginData).subscribe(data => {\n        alert('Login Successful');\n        this.router.navigate(['task']); // Redirect to tasks page on successful login\n      }, error => {\n        if (error.status === 401) {\n          alert('Invalid email or password');\n          this.errorMessage = 'Invalid email or password';\n        } else {\n          this.errorMessage = 'An error occurred during login';\n        }\n      });\n    } else {\n      alert(\"Please enter an email and password.\");\n      this.errorMessage = 'Please enter an email and password.';\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","router","taskService","email","password","formSubmitted","errorMessage","showPassword","togglePasswordVisibility","login","loginData","subscribe","data","alert","navigate","error","status","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  formSubmitted = false;\n  errorMessage = '';\n\n  showPassword: boolean = false;\n  constructor(private router: Router, private taskService: TaskserviceService) {}\n\n  togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n  }\n  login() {\n    this.formSubmitted = true;\n    if (this.email && this.password) {\n      const loginData = { email: this.email, password: this.password };\n      this.taskService.loginData(loginData).subscribe(\n        (data) => {\n          alert('Login Successful');\n          this.router.navigate(['task']); // Redirect to tasks page on successful login\n        },\n        (error) => {\n          if (error.status === 401) {\n            alert('Invalid email or password')\n            this.errorMessage = 'Invalid email or password';\n          } else {\n            this.errorMessage = 'An error occurred during login';\n          }\n        }\n      );\n    } else {\n      alert(\"Please enter an email and password.\")\n      this.errorMessage = 'Please enter an email and password.';\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YAAoBC,MAAc,EAAUC,WAA+B;IAAvD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IANvD,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,aAAa,GAAG,KAAK;IACrB,KAAAC,YAAY,GAAG,EAAE;IAEjB,KAAAC,YAAY,GAAY,KAAK;EACiD;EAE9EC,wBAAwBA,CAAA;IACpB,IAAI,CAACD,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EAC1C;EACAE,KAAKA,CAAA;IACH,IAAI,CAACJ,aAAa,GAAG,IAAI;IACzB,IAAI,IAAI,CAACF,KAAK,IAAI,IAAI,CAACC,QAAQ,EAAE;MAC/B,MAAMM,SAAS,GAAG;QAAEP,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEC,QAAQ,EAAE,IAAI,CAACA;MAAQ,CAAE;MAChE,IAAI,CAACF,WAAW,CAACQ,SAAS,CAACA,SAAS,CAAC,CAACC,SAAS,CAC5CC,IAAI,IAAI;QACPC,KAAK,CAAC,kBAAkB,CAAC;QACzB,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,EACAC,KAAK,IAAI;QACR,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;UACxBH,KAAK,CAAC,2BAA2B,CAAC;UAClC,IAAI,CAACP,YAAY,GAAG,2BAA2B;SAChD,MAAM;UACL,IAAI,CAACA,YAAY,GAAG,gCAAgC;;MAExD,CAAC,CACF;KACF,MAAM;MACLO,KAAK,CAAC,qCAAqC,CAAC;MAC5C,IAAI,CAACP,YAAY,GAAG,qCAAqC;;EAE7D;CACD;AAnCYP,cAAc,GAAAkB,UAAA,EAL1BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWrB,cAAc,CAmC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}