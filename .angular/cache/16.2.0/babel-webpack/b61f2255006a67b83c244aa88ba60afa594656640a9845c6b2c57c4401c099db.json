{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TaskboardComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 23);\n  }\n  if (rf & 2) {\n    const task_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r3.highlightSearch(task_r2.Title), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction TaskboardComponent_div_13_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction TaskboardComponent_div_13_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 23);\n  }\n  if (rf & 2) {\n    const task_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r6.highlightSearch(task_r2.Description), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction TaskboardComponent_div_13_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_13_ng_template_7_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const task_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r2.updatedDescription = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r2.updatedDescription);\n  }\n}\nfunction TaskboardComponent_div_13_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", task_r2.DueDate, \"\");\n  }\n}\nfunction TaskboardComponent_div_13_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_13_ng_template_10_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const task_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r2.updatedDueDate = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r2.updatedDueDate);\n  }\n}\nfunction TaskboardComponent_div_13_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Priority: \", task_r2.Priority, \"\");\n  }\n}\nfunction TaskboardComponent_div_13_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_13_ng_template_13_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const task_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r2.updatedPriority = $event);\n    });\n    i0.ɵɵelementStart(1, \"option\", 5);\n    i0.ɵɵtext(2, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"option\", 6);\n    i0.ɵɵtext(4, \"Completed\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r2.updatedPriority);\n  }\n}\nfunction TaskboardComponent_div_13_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_13_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const task_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.toggleEditMode(task_r2));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_13_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_13_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const task_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.saveTask(task_r2));\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_13_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_13_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const task_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.toggleEditMode(task_r2));\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ɵɵtemplate(2, TaskboardComponent_div_13_div_2_Template, 1, 1, \"div\", 13);\n    i0.ɵɵtemplate(3, TaskboardComponent_div_13_ng_template_3_Template, 1, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 15);\n    i0.ɵɵtemplate(6, TaskboardComponent_div_13_div_6_Template, 1, 1, \"div\", 13);\n    i0.ɵɵtemplate(7, TaskboardComponent_div_13_ng_template_7_Template, 1, 1, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(9, TaskboardComponent_div_13_div_9_Template, 3, 1, \"div\", 17);\n    i0.ɵɵtemplate(10, TaskboardComponent_div_13_ng_template_10_Template, 1, 1, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(12, TaskboardComponent_div_13_div_12_Template, 3, 1, \"div\", 17);\n    i0.ɵɵtemplate(13, TaskboardComponent_div_13_ng_template_13_Template, 5, 1, \"ng-template\", null, 19, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 20);\n    i0.ɵɵtemplate(16, TaskboardComponent_div_13_button_16_Template, 2, 0, \"button\", 21);\n    i0.ɵɵtemplate(17, TaskboardComponent_div_13_button_17_Template, 2, 0, \"button\", 21);\n    i0.ɵɵtemplate(18, TaskboardComponent_div_13_button_18_Template, 2, 0, \"button\", 21);\n    i0.ɵɵelementStart(19, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_13_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r44);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.deleteTask(task_r2._id));\n    });\n    i0.ɵɵtext(20, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    const _r4 = i0.ɵɵreference(4);\n    const _r7 = i0.ɵɵreference(8);\n    const _r10 = i0.ɵɵreference(11);\n    const _r13 = i0.ɵɵreference(14);\n    i0.ɵɵproperty(\"ngClass\", task_r2.Priority);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r2.editMode)(\"ngIfElse\", _r4);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r2.editMode)(\"ngIfElse\", _r7);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !task_r2.editMode)(\"ngIfElse\", _r10);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !task_r2.editMode)(\"ngIfElse\", _r13);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r2.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r2.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r2.editMode);\n  }\n}\nfunction TaskboardComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"input\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_14_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.newTask.Title = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"textarea\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_14_Template_textarea_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.newTask.Description = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_14_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.newTask.DueDate = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_14_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.newTask.Priority = $event);\n    });\n    i0.ɵɵelementStart(5, \"option\", 5);\n    i0.ɵɵtext(6, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 6);\n    i0.ɵɵtext(8, \"Completed\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_14_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.addTask());\n    });\n    i0.ɵɵtext(10, \"Add\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newTask.Title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newTask.Description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newTask.DueDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newTask.Priority);\n  }\n}\nexport class TaskboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.newTask = {}; // New task data object\n    this.showAddForm = false; // Flag to toggle add task form\n    this.searchKeyword = ''; // Add this line\n    this.filteredTasks = [];\n    this.selectedPriority = 'all';\n  }\n  ngOnInit() {\n    this.getTask();\n  }\n  getTask() {\n    this.dataService.getTaskData().subscribe(res => {\n      this.data = res;\n      this.filteredTasks = this.data; // Initialize filteredTasks with all tasks initially\n    });\n  }\n\n  toggleEditMode(task) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n  toggleAddForm() {\n    this.showAddForm = !this.showAddForm;\n  }\n  addTask() {\n    this.dataService.addTask(this.newTask).subscribe(() => {\n      console.log('Task added successfully');\n      this.getTask();\n      this.newTask = {}; // Clear new task data\n      this.showAddForm = false; // Hide add task form\n    }, error => {\n      console.error('Error adding task:', error);\n    });\n  }\n  saveTask(task) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(() => {\n      console.log('Task updated successfully');\n      task.Title = task.updatedTitle;\n      task.Description = task.updatedDescription;\n      task.DueDate = task.updatedDueDate;\n      task.Priority = task.updatedPriority;\n      task.editMode = false;\n    }, error => {\n      console.error('Error updating task:', error);\n    });\n  }\n  deleteTask(taskId) {\n    if (confirm('Are you sure you want to delete this task?')) {\n      this.dataService.deleteTask(taskId).subscribe(() => {\n        console.log('Task deleted successfully');\n        this.getTask();\n      }, error => {\n        console.error('Error deleting task:', error);\n      });\n    }\n  }\n  onSearchChange() {\n    if (this.searchKeyword || this.selectedPriority !== 'all') {\n      this.filteredTasks = this.data.filter(task => {\n        const keywordMatch = !this.searchKeyword || task.Title.toLowerCase().includes(this.searchKeyword.toLowerCase()) || task.Description.toLowerCase().includes(this.searchKeyword.toLowerCase());\n        const priorityMatch = this.selectedPriority === 'all' || task.Priority.toLowerCase() === this.selectedPriority.toLowerCase();\n        return keywordMatch && priorityMatch;\n      });\n    } else {\n      this.filteredTasks = this.data;\n    }\n  }\n  highlightSearch(text) {\n    if (this.searchKeyword && text) {\n      const searchRegExp = new RegExp(this.searchKeyword, 'gi');\n      return text.replace(searchRegExp, match => `<span class=\"highlight\">${match}</span>`);\n    }\n    return text;\n  }\n}\n_class = TaskboardComponent;\n_class.ɵfac = function TaskboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskserviceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskboard\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[1, \"fullcontainer\"], [1, \"search\"], [\"type\", \"text\", \"placeholder\", \"Search tasks...\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"all\"], [\"value\", \"pending\"], [\"value\", \"completed\"], [\"id\", \"add-task\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card-container\"], [\"class\", \"card\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"add-task-form\", 4, \"ngIf\"], [1, \"card\", 3, \"ngClass\"], [1, \"card-header\"], [3, \"innerHTML\", 4, \"ngIf\", \"ngIfElse\"], [\"editModeTitle\", \"\"], [1, \"card-content\"], [\"editModeDescription\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"editModeDueDate\", \"\"], [\"editModePriority\", \"\"], [1, \"card-footer\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"], [3, \"innerHTML\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [1, \"card-text\"], [\"type\", \"date\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [1, \"add-task-form\"], [\"placeholder\", \"Title\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"placeholder\", \"Due Date\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function TaskboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.searchKeyword = $event;\n      })(\"input\", function TaskboardComponent_Template_input_input_2_listener() {\n        return ctx.onSearchChange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_select_ngModelChange_3_listener($event) {\n        return ctx.selectedPriority = $event;\n      })(\"change\", function TaskboardComponent_Template_select_change_3_listener() {\n        return ctx.onSearchChange();\n      });\n      i0.ɵɵelementStart(4, \"option\", 4);\n      i0.ɵɵtext(5, \"Select Priority\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"option\", 5);\n      i0.ɵɵtext(7, \"Pending\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"option\", 6);\n      i0.ɵɵtext(9, \"Completed\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function TaskboardComponent_Template_button_click_10_listener() {\n        return ctx.toggleAddForm();\n      });\n      i0.ɵɵtext(11, \"Add Task\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 8);\n      i0.ɵɵtemplate(13, TaskboardComponent_div_13_Template, 21, 12, \"div\", 9);\n      i0.ɵɵtemplate(14, TaskboardComponent_div_14_Template, 11, 4, \"div\", 10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchKeyword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPriority);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredTasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAddForm);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".fullcontainer[_ngcontent-%COMP%] {\\n    background-color: #f5f1f1e5;\\n    height: 100vh;\\n  }\\n  \\n  .search[_ngcontent-%COMP%]{\\n    height: 50px;\\n  }\\n  .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n    height: 50px;\\n    \\n\\n    width: 900px;\\n    border-radius: 5px;\\n    border: 1px solid rgb(225, 221, 221);\\n    \\n\\n  }\\n  .search[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{\\n    border-radius: 5px;\\n    height: 50px;\\n    width: 300px;\\n  }\\n .card-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: 20px;\\n  gap: 20px;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  padding: 10px;\\n  width: 300px;\\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\\n  background-color: white;\\n  margin-top: 20px;\\n}\\n\\n.card.pending[_ngcontent-%COMP%] {\\n  background-color: #FFCC80; \\n\\n  color: #E65100; \\n\\n}\\n\\n.card.completed[_ngcontent-%COMP%] {\\n  background-color: #C8E6C9; \\n\\n  color: #2E7D32; \\n\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n  margin-bottom: 10px;\\n}\\n\\n.card-content[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n\\n.card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin-right: 5px;\\n  cursor: pointer;\\n}\\n\\n.card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child {\\n  margin-right: 0;\\n}\\n\\n\\n\\n.highlight[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n}\\n#add-task[_ngcontent-%COMP%]{\\n    float: right;\\n    height: 50px;\\n}\\n.add-task-form[_ngcontent-%COMP%] {\\n    background-color: #f0f0f0;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    padding: 10px;\\n    margin-top: 20px;\\n    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\\n    width: 250px;\\n  }\\n  \\n  .add-task-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .add-task-form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%], .add-task-form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 8px;\\n    margin-bottom: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 3px;\\n  }\\n  \\n  .add-task-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n    color: white;\\n    border: none;\\n    border-radius: 3px;\\n    padding: 8px 16px;\\n    cursor: pointer;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7SUFDM0IsYUFBYTtFQUNmOztFQUVBO0lBQ0UsWUFBWTtFQUNkO0VBQ0E7SUFDRSxZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsb0NBQW9DO0lBQ3BDLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixZQUFZO0VBQ2Q7Q0FDRDtFQUNDLGFBQWE7RUFDYixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFNBQVM7QUFDWDs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWiwwQ0FBMEM7RUFDMUMsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHlCQUF5QixFQUFFLGlCQUFpQjtFQUM1QyxjQUFjLEVBQUUsa0JBQWtCO0FBQ3BDOztBQUVBO0VBQ0UseUJBQXlCLEVBQUUsZ0JBQWdCO0VBQzNDLGNBQWMsRUFBRSxpQkFBaUI7QUFDbkM7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBLDhDQUE4QztBQUM5QztFQUNFLHdCQUF3QjtBQUMxQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEI7QUFDQTtJQUNJLHlCQUF5QjtJQUN6QixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsMENBQTBDO0lBQzFDLFlBQVk7RUFDZDs7RUFFQTs7O0lBR0UsV0FBVztJQUNYLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsY29udGFpbmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWYxZjFlNTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgfVxyXG4gIFxyXG4gIC5zZWFyY2h7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgfVxyXG4gIC5zZWFyY2ggaW5wdXR7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAvKiBtYXJnaW4tbGVmdDogMjBweDsgKi9cclxuICAgIHdpZHRoOiA5MDBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMjUsIDIyMSwgMjIxKTtcclxuICAgIC8qIG1hcmdpbi10b3A6IDIwcHg7ICovXHJcbiAgfVxyXG4gIC5zZWFyY2ggc2VsZWN0e1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gIH1cclxuIC5jYXJkLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxuICBnYXA6IDIwcHg7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIHdpZHRoOiAzMDBweDtcclxuICBib3gtc2hhZG93OiAwcHggMnB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLmNhcmQucGVuZGluZyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGQ0M4MDsgLyogTGlnaHQgT3JhbmdlICovXHJcbiAgY29sb3I6ICNFNjUxMDA7IC8qIERhcmtlciBPcmFuZ2UgKi9cclxufVxyXG5cclxuLmNhcmQuY29tcGxldGVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzhFNkM5OyAvKiBMaWdodCBHcmVlbiAqL1xyXG4gIGNvbG9yOiAjMkU3RDMyOyAvKiBEYXJrZXIgR3JlZW4gKi9cclxufVxyXG5cclxuLmNhcmQtaGVhZGVyIHtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmNhcmQtY29udGVudCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmNhcmQtYWN0aW9ucyBidXR0b24ge1xyXG4gIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmNhcmQtYWN0aW9ucyBidXR0b246bGFzdC1jaGlsZCB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAwO1xyXG59XHJcblxyXG4vKiBBZGQgc3R5bGVzIGZvciBoaWdobGlnaHRlZCBzZWFyY2ggcmVzdWx0cyAqL1xyXG4uaGlnaGxpZ2h0IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XHJcbn1cclxuI2FkZC10YXNre1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG59XHJcbi5hZGQtdGFzay1mb3JtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMnB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICB3aWR0aDogMjUwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5hZGQtdGFzay1mb3JtIGlucHV0LFxyXG4gIC5hZGQtdGFzay1mb3JtIHRleHRhcmVhLFxyXG4gIC5hZGQtdGFzay1mb3JtIHNlbGVjdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIH1cclxuICBcclxuICAuYWRkLXRhc2stZm9ybSBidXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgIHBhZGRpbmc6IDhweCAxNnB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r3","highlightSearch","task_r2","Title","ɵɵsanitizeHtml","ctx_r6","Description","ɵɵelementStart","ɵɵlistener","TaskboardComponent_div_13_ng_template_7_Template_input_ngModelChange_0_listener","$event","ɵɵrestoreView","_r22","ɵɵnextContext","$implicit","ɵɵresetView","updatedDescription","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","DueDate","TaskboardComponent_div_13_ng_template_10_Template_input_ngModelChange_0_listener","_r27","updatedDueDate","Priority","TaskboardComponent_div_13_ng_template_13_Template_select_ngModelChange_0_listener","_r32","updatedPriority","TaskboardComponent_div_13_button_16_Template_button_click_0_listener","_r36","ctx_r34","toggleEditMode","TaskboardComponent_div_13_button_17_Template_button_click_0_listener","_r39","ctx_r37","saveTask","TaskboardComponent_div_13_button_18_Template_button_click_0_listener","_r42","ctx_r40","ɵɵtemplate","TaskboardComponent_div_13_div_2_Template","TaskboardComponent_div_13_ng_template_3_Template","ɵɵtemplateRefExtractor","TaskboardComponent_div_13_div_6_Template","TaskboardComponent_div_13_ng_template_7_Template","TaskboardComponent_div_13_div_9_Template","TaskboardComponent_div_13_ng_template_10_Template","TaskboardComponent_div_13_div_12_Template","TaskboardComponent_div_13_ng_template_13_Template","TaskboardComponent_div_13_button_16_Template","TaskboardComponent_div_13_button_17_Template","TaskboardComponent_div_13_button_18_Template","TaskboardComponent_div_13_Template_button_click_19_listener","restoredCtx","_r44","ctx_r43","deleteTask","_id","editMode","_r4","_r7","_r10","_r13","TaskboardComponent_div_14_Template_input_ngModelChange_1_listener","_r46","ctx_r45","newTask","TaskboardComponent_div_14_Template_textarea_ngModelChange_2_listener","ctx_r47","TaskboardComponent_div_14_Template_input_ngModelChange_3_listener","ctx_r48","TaskboardComponent_div_14_Template_select_ngModelChange_4_listener","ctx_r49","TaskboardComponent_div_14_Template_button_click_9_listener","ctx_r50","addTask","ctx_r1","TaskboardComponent","constructor","dataService","showAddForm","searchKeyword","filteredTasks","selectedPriority","ngOnInit","getTask","getTaskData","subscribe","res","data","task","updatedTitle","toggleAddForm","console","log","error","updateTask","taskId","confirm","onSearchChange","filter","keywordMatch","toLowerCase","includes","priorityMatch","text","searchRegExp","RegExp","replace","match","ɵɵdirectiveInject","i1","TaskserviceService","selectors","decls","vars","consts","template","TaskboardComponent_Template","rf","ctx","TaskboardComponent_Template_input_ngModelChange_2_listener","TaskboardComponent_Template_input_input_2_listener","TaskboardComponent_Template_select_ngModelChange_3_listener","TaskboardComponent_Template_select_change_3_listener","TaskboardComponent_Template_button_click_10_listener","TaskboardComponent_div_13_Template","TaskboardComponent_div_14_Template"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.ts","F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.css']\n})\nexport class TaskboardComponent implements OnInit {\n  data: any;\n  newTask: any = {}; // New task data object\n  showAddForm: boolean = false; // Flag to toggle add task form\n  searchKeyword: string = ''; // Add this line\n  filteredTasks: any[] = [];\n  selectedPriority: string = 'all';\n\n  constructor(private dataService: TaskserviceService) {}\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  getTask() {\n    this.dataService.getTaskData().subscribe((res) => {\n      this.data = res;\n      this.filteredTasks = this.data; // Initialize filteredTasks with all tasks initially\n    });\n  }\n\n  toggleEditMode(task: any) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n\n  toggleAddForm() {\n    this.showAddForm = !this.showAddForm;\n  }\n\n  addTask() {\n    this.dataService.addTask(this.newTask).subscribe(\n      () => {\n        console.log('Task added successfully');\n        this.getTask();\n        this.newTask = {}; // Clear new task data\n        this.showAddForm = false; // Hide add task form\n      },\n      (error) => {\n        console.error('Error adding task:', error);\n      }\n    );\n  }\n\n  saveTask(task: any) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(\n      () => {\n        console.log('Task updated successfully');\n        task.Title = task.updatedTitle;\n        task.Description = task.updatedDescription;\n        task.DueDate = task.updatedDueDate;\n        task.Priority = task.updatedPriority;\n        task.editMode = false;\n      },\n      (error) => {\n        console.error('Error updating task:', error);\n      }\n    );\n  }\n\n  deleteTask(taskId: string) {\n    if (confirm('Are you sure you want to delete this task?')) {\n      this.dataService.deleteTask(taskId).subscribe(\n        () => {\n          console.log('Task deleted successfully');\n          this.getTask();\n        },\n        (error) => {\n          console.error('Error deleting task:', error);\n        }\n      );\n    }\n  }\n  onSearchChange() {\n    if (this.searchKeyword || this.selectedPriority !== 'all') {\n      this.filteredTasks = this.data.filter((task: Task) => {\n        const keywordMatch =\n          !this.searchKeyword ||\n          task.Title.toLowerCase().includes(this.searchKeyword.toLowerCase()) ||\n          task.Description.toLowerCase().includes(this.searchKeyword.toLowerCase());\n\n        const priorityMatch =\n          this.selectedPriority === 'all' ||\n          task.Priority.toLowerCase() === this.selectedPriority.toLowerCase();\n\n        return keywordMatch && priorityMatch;\n      });\n    } else {\n      this.filteredTasks = this.data;\n    }\n  }\n\n  highlightSearch(text: string): string {\n    if (this.searchKeyword && text) {\n      const searchRegExp = new RegExp(this.searchKeyword, 'gi');\n      return text.replace(searchRegExp, match => `<span class=\"highlight\">${match}</span>`);\n    }\n    return text;\n  }\n  \n  \n}\n// task.interface.ts\n\nexport interface Task {\n  _id: string;\n  Title: string;\n  Description: string;\n  DueDate: string;\n  Priority: string;\n  // Add other properties as needed\n}\n","<div class=\"fullcontainer\">\n   <div class=\"search\">\n    <input type=\"text\" [(ngModel)]=\"searchKeyword\" placeholder=\"Search tasks...\" (input)=\"onSearchChange()\">\n    <select [(ngModel)]=\"selectedPriority\" (change)=\"onSearchChange()\">\n      <option value=\"all\">Select Priority</option>\n      <option value=\"pending\">Pending</option>\n      <option value=\"completed\">Completed</option>\n    </select>\n        <button (click)=\"toggleAddForm()\" class=\"btn btn-primary\" id=\"add-task\">Add Task</button>\n        </div>\n        \n   \n  \n  \n  \n  \n  \n  <div class=\"card-container\">\n    <div class=\"card\" *ngFor=\"let task of filteredTasks\" [ngClass]=\"task.Priority\">\n      <div class=\"card-header\">\n        <div *ngIf=\"!task.editMode; else editModeTitle\" [innerHTML]=\"highlightSearch(task.Title)\"></div>\n        <ng-template #editModeTitle>\n          <span></span>\n        </ng-template>\n      </div>\n      <div class=\"card-content\">\n        <div *ngIf=\"!task.editMode; else editModeDescription\" [innerHTML]=\"highlightSearch(task.Description)\"></div>\n        <ng-template #editModeDescription>\n          <input [(ngModel)]=\"task.updatedDescription\" placeholder=\"Description\">\n        </ng-template>\n        <div *ngIf=\"!task.editMode; else editModeDueDate\">\n          <p class=\"card-text\">Due Date: {{ task.DueDate }}</p>\n        </div>\n        <ng-template #editModeDueDate>\n          <input [(ngModel)]=\"task.updatedDueDate\" type=\"date\">\n        </ng-template>\n        <div *ngIf=\"!task.editMode; else editModePriority\">\n          <p class=\"card-text\">Priority: {{ task.Priority }}</p>\n        </div>\n        <ng-template #editModePriority>\n          <select [(ngModel)]=\"task.updatedPriority\">\n            <option value=\"pending\">Pending</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n\n          \n        </ng-template>\n      </div>\n      <div class=\"card-footer\">\n        <button *ngIf=\"!task.editMode\" (click)=\"toggleEditMode(task)\">Edit</button>\n        <button *ngIf=\"task.editMode\" (click)=\"saveTask(task)\">Save</button>\n        <button *ngIf=\"task.editMode\" (click)=\"toggleEditMode(task)\">Cancel</button>\n        <button (click)=\"deleteTask(task._id)\">Delete</button>\n      </div>\n      \n    </div>\n    <div class=\"add-task-form\" *ngIf=\"showAddForm\">\n        <input [(ngModel)]=\"newTask.Title\" placeholder=\"Title\">\n        <textarea [(ngModel)]=\"newTask.Description\" placeholder=\"Description\"></textarea>\n        <input [(ngModel)]=\"newTask.DueDate\" type=\"date\" placeholder=\"Due Date\">\n        <select [(ngModel)]=\"newTask.Priority\">\n          <option value=\"pending\">Pending</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <button (click)=\"addTask()\">Add</button>\n      </div>\n  </div>\n\n</div>"],"mappings":";;;;;;;ICoBQA,EAAA,CAAAC,SAAA,cAAgG;;;;;IAAhDD,EAAA,CAAAE,UAAA,cAAAC,MAAA,CAAAC,eAAA,CAAAC,OAAA,CAAAC,KAAA,GAAAN,EAAA,CAAAO,cAAA,CAAyC;;;;;IAEvFP,EAAA,CAAAC,SAAA,WAAa;;;;;IAIfD,EAAA,CAAAC,SAAA,cAA4G;;;;;IAAtDD,EAAA,CAAAE,UAAA,cAAAM,MAAA,CAAAJ,eAAA,CAAAC,OAAA,CAAAI,WAAA,GAAAT,EAAA,CAAAO,cAAA,CAA+C;;;;;;IAEnGP,EAAA,CAAAU,cAAA,gBAAuE;IAAhEV,EAAA,CAAAW,UAAA,2BAAAC,gFAAAC,MAAA;MAAAb,EAAA,CAAAc,aAAA,CAAAC,IAAA;MAAA,MAAAV,OAAA,GAAAL,EAAA,CAAAgB,aAAA,GAAAC,SAAA;MAAA,OAAajB,EAAA,CAAAkB,WAAA,CAAAb,OAAA,CAAAc,kBAAA,GAAAN,MAAA,CAA+B;IAAA,EAAP;IAA5Cb,EAAA,CAAAoB,YAAA,EAAuE;;;;IAAhEpB,EAAA,CAAAE,UAAA,YAAAG,OAAA,CAAAc,kBAAA,CAAqC;;;;;IAE9CnB,EAAA,CAAAU,cAAA,UAAkD;IAC3BV,EAAA,CAAAqB,MAAA,GAA4B;IAAArB,EAAA,CAAAoB,YAAA,EAAI;;;;IAAhCpB,EAAA,CAAAsB,SAAA,GAA4B;IAA5BtB,EAAA,CAAAuB,kBAAA,eAAAlB,OAAA,CAAAmB,OAAA,KAA4B;;;;;;IAGjDxB,EAAA,CAAAU,cAAA,gBAAqD;IAA9CV,EAAA,CAAAW,UAAA,2BAAAc,iFAAAZ,MAAA;MAAAb,EAAA,CAAAc,aAAA,CAAAY,IAAA;MAAA,MAAArB,OAAA,GAAAL,EAAA,CAAAgB,aAAA,GAAAC,SAAA;MAAA,OAAajB,EAAA,CAAAkB,WAAA,CAAAb,OAAA,CAAAsB,cAAA,GAAAd,MAAA,CAA2B;IAAA,EAAP;IAAxCb,EAAA,CAAAoB,YAAA,EAAqD;;;;IAA9CpB,EAAA,CAAAE,UAAA,YAAAG,OAAA,CAAAsB,cAAA,CAAiC;;;;;IAE1C3B,EAAA,CAAAU,cAAA,UAAmD;IAC5BV,EAAA,CAAAqB,MAAA,GAA6B;IAAArB,EAAA,CAAAoB,YAAA,EAAI;;;;IAAjCpB,EAAA,CAAAsB,SAAA,GAA6B;IAA7BtB,EAAA,CAAAuB,kBAAA,eAAAlB,OAAA,CAAAuB,QAAA,KAA6B;;;;;;IAGlD5B,EAAA,CAAAU,cAAA,iBAA2C;IAAnCV,EAAA,CAAAW,UAAA,2BAAAkB,kFAAAhB,MAAA;MAAAb,EAAA,CAAAc,aAAA,CAAAgB,IAAA;MAAA,MAAAzB,OAAA,GAAAL,EAAA,CAAAgB,aAAA,GAAAC,SAAA;MAAA,OAAajB,EAAA,CAAAkB,WAAA,CAAAb,OAAA,CAAA0B,eAAA,GAAAlB,MAAA,CAC1B;IAAA,EAD+C;IACxCb,EAAA,CAAAU,cAAA,gBAAwB;IAAAV,EAAA,CAAAqB,MAAA,cAAO;IAAArB,EAAA,CAAAoB,YAAA,EAAS;IACxCpB,EAAA,CAAAU,cAAA,gBAA0B;IAAAV,EAAA,CAAAqB,MAAA,gBAAS;IAAArB,EAAA,CAAAoB,YAAA,EAAS;;;;IAFtCpB,EAAA,CAAAE,UAAA,YAAAG,OAAA,CAAA0B,eAAA,CAAkC;;;;;;IAS5C/B,EAAA,CAAAU,cAAA,iBAA8D;IAA/BV,EAAA,CAAAW,UAAA,mBAAAqB,qEAAA;MAAAhC,EAAA,CAAAc,aAAA,CAAAmB,IAAA;MAAA,MAAA5B,OAAA,GAAAL,EAAA,CAAAgB,aAAA,GAAAC,SAAA;MAAA,MAAAiB,OAAA,GAAAlC,EAAA,CAAAgB,aAAA;MAAA,OAAShB,EAAA,CAAAkB,WAAA,CAAAgB,OAAA,CAAAC,cAAA,CAAA9B,OAAA,CAAoB;IAAA,EAAC;IAACL,EAAA,CAAAqB,MAAA,WAAI;IAAArB,EAAA,CAAAoB,YAAA,EAAS;;;;;;IAC3EpB,EAAA,CAAAU,cAAA,iBAAuD;IAAzBV,EAAA,CAAAW,UAAA,mBAAAyB,qEAAA;MAAApC,EAAA,CAAAc,aAAA,CAAAuB,IAAA;MAAA,MAAAhC,OAAA,GAAAL,EAAA,CAAAgB,aAAA,GAAAC,SAAA;MAAA,MAAAqB,OAAA,GAAAtC,EAAA,CAAAgB,aAAA;MAAA,OAAShB,EAAA,CAAAkB,WAAA,CAAAoB,OAAA,CAAAC,QAAA,CAAAlC,OAAA,CAAc;IAAA,EAAC;IAACL,EAAA,CAAAqB,MAAA,WAAI;IAAArB,EAAA,CAAAoB,YAAA,EAAS;;;;;;IACpEpB,EAAA,CAAAU,cAAA,iBAA6D;IAA/BV,EAAA,CAAAW,UAAA,mBAAA6B,qEAAA;MAAAxC,EAAA,CAAAc,aAAA,CAAA2B,IAAA;MAAA,MAAApC,OAAA,GAAAL,EAAA,CAAAgB,aAAA,GAAAC,SAAA;MAAA,MAAAyB,OAAA,GAAA1C,EAAA,CAAAgB,aAAA;MAAA,OAAShB,EAAA,CAAAkB,WAAA,CAAAwB,OAAA,CAAAP,cAAA,CAAA9B,OAAA,CAAoB;IAAA,EAAC;IAACL,EAAA,CAAAqB,MAAA,aAAM;IAAArB,EAAA,CAAAoB,YAAA,EAAS;;;;;;IAjChFpB,EAAA,CAAAU,cAAA,cAA+E;IAE3EV,EAAA,CAAA2C,UAAA,IAAAC,wCAAA,kBAAgG;IAChG5C,EAAA,CAAA2C,UAAA,IAAAE,gDAAA,iCAAA7C,EAAA,CAAA8C,sBAAA,CAEc;IAChB9C,EAAA,CAAAoB,YAAA,EAAM;IACNpB,EAAA,CAAAU,cAAA,cAA0B;IACxBV,EAAA,CAAA2C,UAAA,IAAAI,wCAAA,kBAA4G;IAC5G/C,EAAA,CAAA2C,UAAA,IAAAK,gDAAA,iCAAAhD,EAAA,CAAA8C,sBAAA,CAEc;IACd9C,EAAA,CAAA2C,UAAA,IAAAM,wCAAA,kBAEM;IACNjD,EAAA,CAAA2C,UAAA,KAAAO,iDAAA,iCAAAlD,EAAA,CAAA8C,sBAAA,CAEc;IACd9C,EAAA,CAAA2C,UAAA,KAAAQ,yCAAA,kBAEM;IACNnD,EAAA,CAAA2C,UAAA,KAAAS,iDAAA,iCAAApD,EAAA,CAAA8C,sBAAA,CAOc;IAChB9C,EAAA,CAAAoB,YAAA,EAAM;IACNpB,EAAA,CAAAU,cAAA,eAAyB;IACvBV,EAAA,CAAA2C,UAAA,KAAAU,4CAAA,qBAA2E;IAC3ErD,EAAA,CAAA2C,UAAA,KAAAW,4CAAA,qBAAoE;IACpEtD,EAAA,CAAA2C,UAAA,KAAAY,4CAAA,qBAA4E;IAC5EvD,EAAA,CAAAU,cAAA,kBAAuC;IAA/BV,EAAA,CAAAW,UAAA,mBAAA6C,4DAAA;MAAA,MAAAC,WAAA,GAAAzD,EAAA,CAAAc,aAAA,CAAA4C,IAAA;MAAA,MAAArD,OAAA,GAAAoD,WAAA,CAAAxC,SAAA;MAAA,MAAA0C,OAAA,GAAA3D,EAAA,CAAAgB,aAAA;MAAA,OAAShB,EAAA,CAAAkB,WAAA,CAAAyC,OAAA,CAAAC,UAAA,CAAAvD,OAAA,CAAAwD,GAAA,CAAoB;IAAA,EAAC;IAAC7D,EAAA,CAAAqB,MAAA,cAAM;IAAArB,EAAA,CAAAoB,YAAA,EAAS;;;;;;;;IAlCLpB,EAAA,CAAAE,UAAA,YAAAG,OAAA,CAAAuB,QAAA,CAAyB;IAEpE5B,EAAA,CAAAsB,SAAA,GAAsB;IAAtBtB,EAAA,CAAAE,UAAA,UAAAG,OAAA,CAAAyD,QAAA,CAAsB,aAAAC,GAAA;IAMtB/D,EAAA,CAAAsB,SAAA,GAAsB;IAAtBtB,EAAA,CAAAE,UAAA,UAAAG,OAAA,CAAAyD,QAAA,CAAsB,aAAAE,GAAA;IAItBhE,EAAA,CAAAsB,SAAA,GAAsB;IAAtBtB,EAAA,CAAAE,UAAA,UAAAG,OAAA,CAAAyD,QAAA,CAAsB,aAAAG,IAAA;IAMtBjE,EAAA,CAAAsB,SAAA,GAAsB;IAAtBtB,EAAA,CAAAE,UAAA,UAAAG,OAAA,CAAAyD,QAAA,CAAsB,aAAAI,IAAA;IAanBlE,EAAA,CAAAsB,SAAA,GAAoB;IAApBtB,EAAA,CAAAE,UAAA,UAAAG,OAAA,CAAAyD,QAAA,CAAoB;IACpB9D,EAAA,CAAAsB,SAAA,GAAmB;IAAnBtB,EAAA,CAAAE,UAAA,SAAAG,OAAA,CAAAyD,QAAA,CAAmB;IACnB9D,EAAA,CAAAsB,SAAA,GAAmB;IAAnBtB,EAAA,CAAAE,UAAA,SAAAG,OAAA,CAAAyD,QAAA,CAAmB;;;;;;IAKhC9D,EAAA,CAAAU,cAAA,cAA+C;IACpCV,EAAA,CAAAW,UAAA,2BAAAwD,kEAAAtD,MAAA;MAAAb,EAAA,CAAAc,aAAA,CAAAsD,IAAA;MAAA,MAAAC,OAAA,GAAArE,EAAA,CAAAgB,aAAA;MAAA,OAAahB,EAAA,CAAAkB,WAAA,CAAAmD,OAAA,CAAAC,OAAA,CAAAhE,KAAA,GAAAO,MAAA,CAAqB;IAAA,EAAP;IAAlCb,EAAA,CAAAoB,YAAA,EAAuD;IACvDpB,EAAA,CAAAU,cAAA,mBAAsE;IAA5DV,EAAA,CAAAW,UAAA,2BAAA4D,qEAAA1D,MAAA;MAAAb,EAAA,CAAAc,aAAA,CAAAsD,IAAA;MAAA,MAAAI,OAAA,GAAAxE,EAAA,CAAAgB,aAAA;MAAA,OAAahB,EAAA,CAAAkB,WAAA,CAAAsD,OAAA,CAAAF,OAAA,CAAA7D,WAAA,GAAAI,MAAA,CAA2B;IAAA,EAAP;IAA2Bb,EAAA,CAAAoB,YAAA,EAAW;IACjFpB,EAAA,CAAAU,cAAA,gBAAwE;IAAjEV,EAAA,CAAAW,UAAA,2BAAA8D,kEAAA5D,MAAA;MAAAb,EAAA,CAAAc,aAAA,CAAAsD,IAAA;MAAA,MAAAM,OAAA,GAAA1E,EAAA,CAAAgB,aAAA;MAAA,OAAahB,EAAA,CAAAkB,WAAA,CAAAwD,OAAA,CAAAJ,OAAA,CAAA9C,OAAA,GAAAX,MAAA,CAAuB;IAAA,EAAP;IAApCb,EAAA,CAAAoB,YAAA,EAAwE;IACxEpB,EAAA,CAAAU,cAAA,iBAAuC;IAA/BV,EAAA,CAAAW,UAAA,2BAAAgE,mEAAA9D,MAAA;MAAAb,EAAA,CAAAc,aAAA,CAAAsD,IAAA;MAAA,MAAAQ,OAAA,GAAA5E,EAAA,CAAAgB,aAAA;MAAA,OAAahB,EAAA,CAAAkB,WAAA,CAAA0D,OAAA,CAAAN,OAAA,CAAA1C,QAAA,GAAAf,MAAA,CACxB;IAAA,EADyC;IACpCb,EAAA,CAAAU,cAAA,gBAAwB;IAAAV,EAAA,CAAAqB,MAAA,cAAO;IAAArB,EAAA,CAAAoB,YAAA,EAAS;IACxCpB,EAAA,CAAAU,cAAA,gBAA0B;IAAAV,EAAA,CAAAqB,MAAA,gBAAS;IAAArB,EAAA,CAAAoB,YAAA,EAAS;IAE9CpB,EAAA,CAAAU,cAAA,iBAA4B;IAApBV,EAAA,CAAAW,UAAA,mBAAAkE,2DAAA;MAAA7E,EAAA,CAAAc,aAAA,CAAAsD,IAAA;MAAA,MAAAU,OAAA,GAAA9E,EAAA,CAAAgB,aAAA;MAAA,OAAShB,EAAA,CAAAkB,WAAA,CAAA4D,OAAA,CAAAC,OAAA,EAAS;IAAA,EAAC;IAAC/E,EAAA,CAAAqB,MAAA,WAAG;IAAArB,EAAA,CAAAoB,YAAA,EAAS;;;;IAPjCpB,EAAA,CAAAsB,SAAA,GAA2B;IAA3BtB,EAAA,CAAAE,UAAA,YAAA8E,MAAA,CAAAV,OAAA,CAAAhE,KAAA,CAA2B;IACxBN,EAAA,CAAAsB,SAAA,GAAiC;IAAjCtB,EAAA,CAAAE,UAAA,YAAA8E,MAAA,CAAAV,OAAA,CAAA7D,WAAA,CAAiC;IACpCT,EAAA,CAAAsB,SAAA,GAA6B;IAA7BtB,EAAA,CAAAE,UAAA,YAAA8E,MAAA,CAAAV,OAAA,CAAA9C,OAAA,CAA6B;IAC5BxB,EAAA,CAAAsB,SAAA,GAA8B;IAA9BtB,EAAA,CAAAE,UAAA,YAAA8E,MAAA,CAAAV,OAAA,CAAA1C,QAAA,CAA8B;;;ADpD9C,OAAM,MAAOqD,kBAAkB;EAQ7BC,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;IAN/B,KAAAb,OAAO,GAAQ,EAAE,CAAC,CAAC;IACnB,KAAAc,WAAW,GAAY,KAAK,CAAC,CAAC;IAC9B,KAAAC,aAAa,GAAW,EAAE,CAAC,CAAC;IAC5B,KAAAC,aAAa,GAAU,EAAE;IACzB,KAAAC,gBAAgB,GAAW,KAAK;EAEsB;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAOA,CAAA;IACL,IAAI,CAACN,WAAW,CAACO,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC/C,IAAI,CAACC,IAAI,GAAGD,GAAG;MACf,IAAI,CAACN,aAAa,GAAG,IAAI,CAACO,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA1D,cAAcA,CAAC2D,IAAS;IACtBA,IAAI,CAAChC,QAAQ,GAAG,CAACgC,IAAI,CAAChC,QAAQ;IAC9B,IAAIgC,IAAI,CAAChC,QAAQ,EAAE;MACjBgC,IAAI,CAACC,YAAY,GAAGD,IAAI,CAACxF,KAAK;MAC9BwF,IAAI,CAAC3E,kBAAkB,GAAG2E,IAAI,CAACrF,WAAW;MAC1CqF,IAAI,CAACnE,cAAc,GAAGmE,IAAI,CAACtE,OAAO;MAClCsE,IAAI,CAAC/D,eAAe,GAAG+D,IAAI,CAAClE,QAAQ;;EAExC;EAEAoE,aAAaA,CAAA;IACX,IAAI,CAACZ,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;EAEAL,OAAOA,CAAA;IACL,IAAI,CAACI,WAAW,CAACJ,OAAO,CAAC,IAAI,CAACT,OAAO,CAAC,CAACqB,SAAS,CAC9C,MAAK;MACHM,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC,IAAI,CAACT,OAAO,EAAE;MACd,IAAI,CAACnB,OAAO,GAAG,EAAE,CAAC,CAAC;MACnB,IAAI,CAACc,WAAW,GAAG,KAAK,CAAC,CAAC;IAC5B,CAAC,EACAe,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CACF;EACH;EAEA5D,QAAQA,CAACuD,IAAS;IAChB;IACA,IAAI,CAACX,WAAW,CAACiB,UAAU,CAACN,IAAI,CAACjC,GAAG,EAAE;MACpCvD,KAAK,EAAEwF,IAAI,CAACC,YAAY;MACxBtF,WAAW,EAAEqF,IAAI,CAAC3E,kBAAkB;MACpCK,OAAO,EAAEsE,IAAI,CAACnE,cAAc;MAC5BC,QAAQ,EAAEkE,IAAI,CAAC/D;KAChB,CAAC,CAAC4D,SAAS,CACV,MAAK;MACHM,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCJ,IAAI,CAACxF,KAAK,GAAGwF,IAAI,CAACC,YAAY;MAC9BD,IAAI,CAACrF,WAAW,GAAGqF,IAAI,CAAC3E,kBAAkB;MAC1C2E,IAAI,CAACtE,OAAO,GAAGsE,IAAI,CAACnE,cAAc;MAClCmE,IAAI,CAAClE,QAAQ,GAAGkE,IAAI,CAAC/D,eAAe;MACpC+D,IAAI,CAAChC,QAAQ,GAAG,KAAK;IACvB,CAAC,EACAqC,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EAEAvC,UAAUA,CAACyC,MAAc;IACvB,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MACzD,IAAI,CAACnB,WAAW,CAACvB,UAAU,CAACyC,MAAM,CAAC,CAACV,SAAS,CAC3C,MAAK;QACHM,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxC,IAAI,CAACT,OAAO,EAAE;MAChB,CAAC,EACAU,KAAK,IAAI;QACRF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CACF;;EAEL;EACAI,cAAcA,CAAA;IACZ,IAAI,IAAI,CAAClB,aAAa,IAAI,IAAI,CAACE,gBAAgB,KAAK,KAAK,EAAE;MACzD,IAAI,CAACD,aAAa,GAAG,IAAI,CAACO,IAAI,CAACW,MAAM,CAAEV,IAAU,IAAI;QACnD,MAAMW,YAAY,GAChB,CAAC,IAAI,CAACpB,aAAa,IACnBS,IAAI,CAACxF,KAAK,CAACoG,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACtB,aAAa,CAACqB,WAAW,EAAE,CAAC,IACnEZ,IAAI,CAACrF,WAAW,CAACiG,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACtB,aAAa,CAACqB,WAAW,EAAE,CAAC;QAE3E,MAAME,aAAa,GACjB,IAAI,CAACrB,gBAAgB,KAAK,KAAK,IAC/BO,IAAI,CAAClE,QAAQ,CAAC8E,WAAW,EAAE,KAAK,IAAI,CAACnB,gBAAgB,CAACmB,WAAW,EAAE;QAErE,OAAOD,YAAY,IAAIG,aAAa;MACtC,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACtB,aAAa,GAAG,IAAI,CAACO,IAAI;;EAElC;EAEAzF,eAAeA,CAACyG,IAAY;IAC1B,IAAI,IAAI,CAACxB,aAAa,IAAIwB,IAAI,EAAE;MAC9B,MAAMC,YAAY,GAAG,IAAIC,MAAM,CAAC,IAAI,CAAC1B,aAAa,EAAE,IAAI,CAAC;MACzD,OAAOwB,IAAI,CAACG,OAAO,CAACF,YAAY,EAAEG,KAAK,IAAI,2BAA2BA,KAAK,SAAS,CAAC;;IAEvF,OAAOJ,IAAI;EACb;;SA7GW5B,kBAAkB;;mBAAlBA,MAAkB,EAAAjF,EAAA,CAAAkH,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;;QAAlBnC,MAAkB;EAAAoC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR/B3H,EAAA,CAAAU,cAAA,aAA2B;MAEJV,EAAA,CAAAW,UAAA,2BAAAkH,2DAAAhH,MAAA;QAAA,OAAA+G,GAAA,CAAAvC,aAAA,GAAAxE,MAAA;MAAA,EAA2B,mBAAAiH,mDAAA;QAAA,OAAwCF,GAAA,CAAArB,cAAA,EAAgB;MAAA,EAAxD;MAA9CvG,EAAA,CAAAoB,YAAA,EAAwG;MACxGpB,EAAA,CAAAU,cAAA,gBAAmE;MAA3DV,EAAA,CAAAW,UAAA,2BAAAoH,4DAAAlH,MAAA;QAAA,OAAA+G,GAAA,CAAArC,gBAAA,GAAA1E,MAAA;MAAA,EAA8B,oBAAAmH,qDAAA;QAAA,OAAWJ,GAAA,CAAArB,cAAA,EAAgB;MAAA,EAA3B;MACpCvG,EAAA,CAAAU,cAAA,gBAAoB;MAAAV,EAAA,CAAAqB,MAAA,sBAAe;MAAArB,EAAA,CAAAoB,YAAA,EAAS;MAC5CpB,EAAA,CAAAU,cAAA,gBAAwB;MAAAV,EAAA,CAAAqB,MAAA,cAAO;MAAArB,EAAA,CAAAoB,YAAA,EAAS;MACxCpB,EAAA,CAAAU,cAAA,gBAA0B;MAAAV,EAAA,CAAAqB,MAAA,gBAAS;MAAArB,EAAA,CAAAoB,YAAA,EAAS;MAE1CpB,EAAA,CAAAU,cAAA,iBAAwE;MAAhEV,EAAA,CAAAW,UAAA,mBAAAsH,qDAAA;QAAA,OAASL,GAAA,CAAA5B,aAAA,EAAe;MAAA,EAAC;MAAuChG,EAAA,CAAAqB,MAAA,gBAAQ;MAAArB,EAAA,CAAAoB,YAAA,EAAS;MAS/FpB,EAAA,CAAAU,cAAA,cAA4B;MAC1BV,EAAA,CAAA2C,UAAA,KAAAuF,kCAAA,mBAqCM;MACNlI,EAAA,CAAA2C,UAAA,KAAAwF,kCAAA,mBASQ;MACVnI,EAAA,CAAAoB,YAAA,EAAM;;;MAhEepB,EAAA,CAAAsB,SAAA,GAA2B;MAA3BtB,EAAA,CAAAE,UAAA,YAAA0H,GAAA,CAAAvC,aAAA,CAA2B;MACtCrF,EAAA,CAAAsB,SAAA,GAA8B;MAA9BtB,EAAA,CAAAE,UAAA,YAAA0H,GAAA,CAAArC,gBAAA,CAA8B;MAeHvF,EAAA,CAAAsB,SAAA,IAAgB;MAAhBtB,EAAA,CAAAE,UAAA,YAAA0H,GAAA,CAAAtC,aAAA,CAAgB;MAsCvBtF,EAAA,CAAAsB,SAAA,GAAiB;MAAjBtB,EAAA,CAAAE,UAAA,SAAA0H,GAAA,CAAAxC,WAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}