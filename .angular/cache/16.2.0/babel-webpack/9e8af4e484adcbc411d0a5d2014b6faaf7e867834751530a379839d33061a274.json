{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-bootstrap/datepicker\";\nfunction TaskboardComponent_tr_14_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_tr_14_ng_container_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.Title = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", task_r1.Title);\n  }\n}\nfunction TaskboardComponent_tr_14_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(task_r1.Title);\n  }\n}\nfunction TaskboardComponent_tr_14_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_tr_14_ng_container_6_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.Description = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", task_r1.Description);\n  }\n}\nfunction TaskboardComponent_tr_14_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(task_r1.Description);\n  }\n}\nfunction TaskboardComponent_tr_14_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_tr_14_ng_container_10_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.DueDate = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", task_r1.DueDate)(\"bsConfig\", ctx_r8.bsConfig);\n  }\n}\nfunction TaskboardComponent_tr_14_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(task_r1.DueDate);\n  }\n}\nfunction TaskboardComponent_tr_14_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_tr_14_ng_container_14_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.Priority = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", task_r1.Priority);\n  }\n}\nfunction TaskboardComponent_tr_14_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(task_r1.Priority);\n  }\n}\nfunction TaskboardComponent_tr_14_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_tr_14_ng_container_18_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.saveTask(task_r1));\n    });\n    i0.ɵɵtext(2, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_tr_14_ng_container_18_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.cancelEdit(task_r1));\n    });\n    i0.ɵɵtext(4, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction TaskboardComponent_tr_14_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_tr_14_ng_template_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.editTask(task_r1));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtemplate(2, TaskboardComponent_tr_14_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵtemplate(3, TaskboardComponent_tr_14_ng_template_3_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtemplate(6, TaskboardComponent_tr_14_ng_container_6_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵtemplate(7, TaskboardComponent_tr_14_ng_template_7_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtemplate(10, TaskboardComponent_tr_14_ng_container_10_Template, 2, 2, \"ng-container\", 2);\n    i0.ɵɵtemplate(11, TaskboardComponent_tr_14_ng_template_11_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtemplate(14, TaskboardComponent_tr_14_ng_container_14_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵtemplate(15, TaskboardComponent_tr_14_ng_template_15_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtemplate(18, TaskboardComponent_tr_14_ng_container_18_Template, 5, 0, \"ng-container\", 2);\n    i0.ɵɵtemplate(19, TaskboardComponent_tr_14_ng_template_19_Template, 2, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const _r3 = i0.ɵɵreference(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode)(\"ngIfElse\", _r3);\n  }\n}\nexport class TaskboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.newTask = {};\n    this.bsConfig = Object.assign({}, {\n      containerClass: 'theme-default'\n    });\n  }\n  ngOnInit() {\n    this.getTask();\n    this.data.forEach(task => {\n      task.editMode = false;\n    });\n  }\n  getTask() {\n    this.dataService.getTaskData().subscribe(res => {\n      this.data = res;\n      console.log(res);\n    });\n  }\n  addTask() {\n    const title = prompt('Enter the Title');\n    const description = prompt('Enter the description');\n    const priority = prompt('Enter the Priority');\n    this.newTask = {\n      title: title,\n      description: description,\n      priority: priority,\n      DueDate: this.newTask.dueDate // Use the selected due date\n    };\n\n    this.dataService.addTask(this.newTask).subscribe(() => {\n      console.log('Task added successfully');\n      this.getTask();\n    }, error => {\n      console.error('Error adding task:', error);\n    });\n  }\n  editTask(task) {\n    task.editMode = true;\n  }\n  saveTask(task) {\n    const updatedTask = {\n      Title: task.Title,\n      Description: task.Description,\n      DueDate: task.DueDate,\n      Priority: task.Priority\n    };\n    this.dataService.updateTask(task._id, updatedTask).subscribe(() => {\n      console.log('Task updated successfully');\n      task.editMode = false;\n      this.getTask();\n    }, error => {\n      console.error('Error updating task:', error);\n    });\n  }\n  cancelEdit(task) {\n    task.editMode = false;\n  }\n}\n_class = TaskboardComponent;\n_class.ɵfac = function TaskboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskserviceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskboard\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"task-cards\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfElse\"], [\"viewMode\", \"\"], [3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"bsDatepicker\", \"\", 3, \"ngModel\", \"bsConfig\", \"ngModelChange\"], [3, \"click\"]],\n  template: function TaskboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\")(2, \"thead\")(3, \"th\");\n      i0.ɵɵtext(4, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\");\n      i0.ɵɵtext(6, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Due Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Priority\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Actions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, TaskboardComponent_tr_14_Template, 21, 10, \"tr\", 1);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.BsDatepickerDirective, i4.BsDatepickerInputDirective],\n  styles: [\".task-cards[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 20px;\\n    margin-top: 20px;\\n  }\\n  \\n  .task-card[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    width: calc(33.33% - 20px);\\n    padding: 15px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n    transition: transform 0.2s, box-shadow 0.2s;\\n    cursor: pointer;\\n  }\\n  \\n  .task-card[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-5px);\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    margin: 5px 0;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLFNBQVM7SUFDVCxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQixhQUFhO0lBQ2Isd0NBQXdDO0lBQ3hDLHNCQUFzQjtJQUN0QiwyQ0FBMkM7SUFDM0MsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLDJCQUEyQjtJQUMzQix3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLnRhc2stY2FyZHMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGdhcDogMjBweDtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC50YXNrLWNhcmQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDIwcHgpO1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMsIGJveC1zaGFkb3cgMC4ycztcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLnRhc2stY2FyZDpob3ZlciB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1oZWFkZXIge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtY29udGVudCBwIHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","TaskboardComponent_tr_14_ng_container_2_Template_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r19","task_r1","ɵɵnextContext","$implicit","ɵɵresetView","Title","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ɵɵtext","ɵɵtextInterpolate","TaskboardComponent_tr_14_ng_container_6_Template_input_ngModelChange_1_listener","_r24","Description","TaskboardComponent_tr_14_ng_container_10_Template_input_ngModelChange_1_listener","_r29","DueDate","ctx_r8","bsConfig","TaskboardComponent_tr_14_ng_container_14_Template_input_ngModelChange_1_listener","_r34","Priority","TaskboardComponent_tr_14_ng_container_18_Template_button_click_1_listener","_r39","ctx_r37","saveTask","TaskboardComponent_tr_14_ng_container_18_Template_button_click_3_listener","ctx_r40","cancelEdit","TaskboardComponent_tr_14_ng_template_19_Template_button_click_0_listener","_r44","ctx_r42","editTask","ɵɵtemplate","TaskboardComponent_tr_14_ng_container_2_Template","TaskboardComponent_tr_14_ng_template_3_Template","ɵɵtemplateRefExtractor","TaskboardComponent_tr_14_ng_container_6_Template","TaskboardComponent_tr_14_ng_template_7_Template","TaskboardComponent_tr_14_ng_container_10_Template","TaskboardComponent_tr_14_ng_template_11_Template","TaskboardComponent_tr_14_ng_container_14_Template","TaskboardComponent_tr_14_ng_template_15_Template","TaskboardComponent_tr_14_ng_container_18_Template","TaskboardComponent_tr_14_ng_template_19_Template","editMode","_r3","TaskboardComponent","constructor","dataService","newTask","Object","assign","containerClass","ngOnInit","getTask","data","forEach","task","getTaskData","subscribe","res","console","log","addTask","title","prompt","description","priority","dueDate","error","updatedTask","updateTask","_id","ɵɵdirectiveInject","i1","TaskserviceService","selectors","decls","vars","consts","template","TaskboardComponent_Template","rf","ctx","TaskboardComponent_tr_14_Template"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.ts","F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.css'],\n})\nexport class TaskboardComponent implements OnInit {\n  data: any;\n  newTask: any = {};\n  bsConfig: Partial<BsDatepickerConfig>; // Configuration for date picker\n\n  constructor(private dataService: TaskserviceService) {\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-default' });\n  }\n\n  ngOnInit() {\n    this.getTask();\n    this.data.forEach((task: { editMode: boolean; }) => {\n      task.editMode = false;\n    });\n  }\n \n\n  getTask() {\n    this.dataService.getTaskData().subscribe((res) => {\n      this.data = res;\n      console.log(res);\n    });\n  }\n\n  addTask() {\n    const title = prompt('Enter the Title');\n    const description = prompt('Enter the description');\n    const priority = prompt('Enter the Priority');\n    this.newTask = {\n      title: title,\n      description: description,\n      priority: priority,\n      DueDate: this.newTask.dueDate, // Use the selected due date\n    };\n    this.dataService.addTask(this.newTask).subscribe(\n      () => {\n        console.log('Task added successfully');\n        this.getTask();\n      },\n      (error) => {\n        console.error('Error adding task:', error);\n      }\n    );\n  }\n\n  editTask(task: any): void {\n    task.editMode = true;\n  }\n  \n  saveTask(task: any): void {\n    const updatedTask = {\n      Title: task.Title,\n      Description: task.Description,\n      DueDate: task.DueDate,\n      Priority: task.Priority,\n    };\n  \n    this.dataService.updateTask(task._id, updatedTask).subscribe(\n      () => {\n        console.log('Task updated successfully');\n        task.editMode = false;\n        this.getTask();\n      },\n      (error) => {\n        console.error('Error updating task:', error);\n      }\n    );\n  }\n  \n  cancelEdit(task: any): void {\n    task.editMode = false;\n  }\n  \n}\n","<div class=\"task-cards\">\n    <!-- ... other code ... -->\n    <table>\n      <thead>\n        <th>Title</th>\n        <th>Description</th>\n        <th>Due Date</th>\n        <th>Priority</th>\n        <th>Actions</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let task of data\">\n          <td>\n            <ng-container *ngIf=\"task.editMode; else viewMode\">\n              <input [(ngModel)]=\"task.Title\" />\n            </ng-container>\n            <ng-template #viewMode>{{ task.Title }}</ng-template>\n          </td>\n          <td>\n            <ng-container *ngIf=\"task.editMode; else viewMode\">\n              <input [(ngModel)]=\"task.Description\" />\n            </ng-container>\n            <ng-template #viewMode>{{ task.Description }}</ng-template>\n          </td>\n          <td>\n            <ng-container *ngIf=\"task.editMode; else viewMode\">\n              <input\n                type=\"text\"\n                [(ngModel)]=\"task.DueDate\"\n                bsDatepicker\n                [bsConfig]=\"bsConfig\"\n              />\n            </ng-container>\n            <ng-template #viewMode>{{ task.DueDate }}</ng-template>\n          </td>\n          <td>\n            <ng-container *ngIf=\"task.editMode; else viewMode\">\n              <input [(ngModel)]=\"task.Priority\" />\n            </ng-container>\n            <ng-template #viewMode>{{ task.Priority }}</ng-template>\n          </td>\n          <td>\n            <ng-container *ngIf=\"task.editMode; else viewMode\">\n              <button (click)=\"saveTask(task)\">Save</button>\n              <button (click)=\"cancelEdit(task)\">Cancel</button>\n            </ng-container>\n            <ng-template #viewMode>\n              <button (click)=\"editTask(task)\">Edit</button>\n            </ng-template>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  "],"mappings":";;;;;;;;;ICaYA,EAAA,CAAAC,uBAAA,GAAmD;IACjDD,EAAA,CAAAE,cAAA,eAAkC;IAA3BF,EAAA,CAAAG,UAAA,2BAAAC,gFAAAC,MAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,IAAA;MAAA,MAAAC,OAAA,GAAAR,EAAA,CAAAS,aAAA,GAAAC,SAAA;MAAA,OAAaV,EAAA,CAAAW,WAAA,CAAAH,OAAA,CAAAI,KAAA,GAAAP,MAAA,CAC/B;IAAA,EAD0C;IAA/BL,EAAA,CAAAa,YAAA,EAAkC;IACpCb,EAAA,CAAAc,qBAAA,EAAe;;;;IADNd,EAAA,CAAAe,SAAA,GAAwB;IAAxBf,EAAA,CAAAgB,UAAA,YAAAR,OAAA,CAAAI,KAAA,CAAwB;;;;;IAEVZ,EAAA,CAAAiB,MAAA,GAAgB;;;;IAAhBjB,EAAA,CAAAkB,iBAAA,CAAAV,OAAA,CAAAI,KAAA,CAAgB;;;;;;IAGvCZ,EAAA,CAAAC,uBAAA,GAAmD;IACjDD,EAAA,CAAAE,cAAA,eAAwC;IAAjCF,EAAA,CAAAG,UAAA,2BAAAgB,gFAAAd,MAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAc,IAAA;MAAA,MAAAZ,OAAA,GAAAR,EAAA,CAAAS,aAAA,GAAAC,SAAA;MAAA,OAAaV,EAAA,CAAAW,WAAA,CAAAH,OAAA,CAAAa,WAAA,GAAAhB,MAAA,CAC/B;IAAA,EADgD;IAArCL,EAAA,CAAAa,YAAA,EAAwC;IAC1Cb,EAAA,CAAAc,qBAAA,EAAe;;;;IADNd,EAAA,CAAAe,SAAA,GAA8B;IAA9Bf,EAAA,CAAAgB,UAAA,YAAAR,OAAA,CAAAa,WAAA,CAA8B;;;;;IAEhBrB,EAAA,CAAAiB,MAAA,GAAsB;;;;IAAtBjB,EAAA,CAAAkB,iBAAA,CAAAV,OAAA,CAAAa,WAAA,CAAsB;;;;;;IAG7CrB,EAAA,CAAAC,uBAAA,GAAmD;IACjDD,EAAA,CAAAE,cAAA,eAKE;IAHAF,EAAA,CAAAG,UAAA,2BAAAmB,iFAAAjB,MAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAiB,IAAA;MAAA,MAAAf,OAAA,GAAAR,EAAA,CAAAS,aAAA,GAAAC,SAAA;MAAA,OAAaV,EAAA,CAAAW,WAAA,CAAAH,OAAA,CAAAgB,OAAA,GAAAnB,MAAA,CACvB;IAAA,EADoC;IAF5BL,EAAA,CAAAa,YAAA,EAKE;IACJb,EAAA,CAAAc,qBAAA,EAAe;;;;;IAJXd,EAAA,CAAAe,SAAA,GAA0B;IAA1Bf,EAAA,CAAAgB,UAAA,YAAAR,OAAA,CAAAgB,OAAA,CAA0B,aAAAC,MAAA,CAAAC,QAAA;;;;;IAKP1B,EAAA,CAAAiB,MAAA,GAAkB;;;;IAAlBjB,EAAA,CAAAkB,iBAAA,CAAAV,OAAA,CAAAgB,OAAA,CAAkB;;;;;;IAGzCxB,EAAA,CAAAC,uBAAA,GAAmD;IACjDD,EAAA,CAAAE,cAAA,eAAqC;IAA9BF,EAAA,CAAAG,UAAA,2BAAAwB,iFAAAtB,MAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAsB,IAAA;MAAA,MAAApB,OAAA,GAAAR,EAAA,CAAAS,aAAA,GAAAC,SAAA;MAAA,OAAaV,EAAA,CAAAW,WAAA,CAAAH,OAAA,CAAAqB,QAAA,GAAAxB,MAAA,CAC/B;IAAA,EAD6C;IAAlCL,EAAA,CAAAa,YAAA,EAAqC;IACvCb,EAAA,CAAAc,qBAAA,EAAe;;;;IADNd,EAAA,CAAAe,SAAA,GAA2B;IAA3Bf,EAAA,CAAAgB,UAAA,YAAAR,OAAA,CAAAqB,QAAA,CAA2B;;;;;IAEb7B,EAAA,CAAAiB,MAAA,GAAmB;;;;IAAnBjB,EAAA,CAAAkB,iBAAA,CAAAV,OAAA,CAAAqB,QAAA,CAAmB;;;;;;IAG1C7B,EAAA,CAAAC,uBAAA,GAAmD;IACjDD,EAAA,CAAAE,cAAA,gBAAiC;IAAzBF,EAAA,CAAAG,UAAA,mBAAA2B,0EAAA;MAAA9B,EAAA,CAAAM,aAAA,CAAAyB,IAAA;MAAA,MAAAvB,OAAA,GAAAR,EAAA,CAAAS,aAAA,GAAAC,SAAA;MAAA,MAAAsB,OAAA,GAAAhC,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAW,WAAA,CAAAqB,OAAA,CAAAC,QAAA,CAAAzB,OAAA,CAAc;IAAA,EAAC;IAACR,EAAA,CAAAiB,MAAA,WAAI;IAAAjB,EAAA,CAAAa,YAAA,EAAS;IAC9Cb,EAAA,CAAAE,cAAA,gBAAmC;IAA3BF,EAAA,CAAAG,UAAA,mBAAA+B,0EAAA;MAAAlC,EAAA,CAAAM,aAAA,CAAAyB,IAAA;MAAA,MAAAvB,OAAA,GAAAR,EAAA,CAAAS,aAAA,GAAAC,SAAA;MAAA,MAAAyB,OAAA,GAAAnC,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAW,WAAA,CAAAwB,OAAA,CAAAC,UAAA,CAAA5B,OAAA,CAAgB;IAAA,EAAC;IAACR,EAAA,CAAAiB,MAAA,aAAM;IAAAjB,EAAA,CAAAa,YAAA,EAAS;IACpDb,EAAA,CAAAc,qBAAA,EAAe;;;;;;IAEbd,EAAA,CAAAE,cAAA,gBAAiC;IAAzBF,EAAA,CAAAG,UAAA,mBAAAkC,yEAAA;MAAArC,EAAA,CAAAM,aAAA,CAAAgC,IAAA;MAAA,MAAA9B,OAAA,GAAAR,EAAA,CAAAS,aAAA,GAAAC,SAAA;MAAA,MAAA6B,OAAA,GAAAvC,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAW,WAAA,CAAA4B,OAAA,CAAAC,QAAA,CAAAhC,OAAA,CAAc;IAAA,EAAC;IAACR,EAAA,CAAAiB,MAAA,WAAI;IAAAjB,EAAA,CAAAa,YAAA,EAAS;;;;;IApCpDb,EAAA,CAAAE,cAAA,SAA8B;IAE1BF,EAAA,CAAAyC,UAAA,IAAAC,gDAAA,0BAEe;IACf1C,EAAA,CAAAyC,UAAA,IAAAE,+CAAA,gCAAA3C,EAAA,CAAA4C,sBAAA,CAAqD;IACvD5C,EAAA,CAAAa,YAAA,EAAK;IACLb,EAAA,CAAAE,cAAA,SAAI;IACFF,EAAA,CAAAyC,UAAA,IAAAI,gDAAA,0BAEe;IACf7C,EAAA,CAAAyC,UAAA,IAAAK,+CAAA,gCAAA9C,EAAA,CAAA4C,sBAAA,CAA2D;IAC7D5C,EAAA,CAAAa,YAAA,EAAK;IACLb,EAAA,CAAAE,cAAA,SAAI;IACFF,EAAA,CAAAyC,UAAA,KAAAM,iDAAA,0BAOe;IACf/C,EAAA,CAAAyC,UAAA,KAAAO,gDAAA,gCAAAhD,EAAA,CAAA4C,sBAAA,CAAuD;IACzD5C,EAAA,CAAAa,YAAA,EAAK;IACLb,EAAA,CAAAE,cAAA,UAAI;IACFF,EAAA,CAAAyC,UAAA,KAAAQ,iDAAA,0BAEe;IACfjD,EAAA,CAAAyC,UAAA,KAAAS,gDAAA,gCAAAlD,EAAA,CAAA4C,sBAAA,CAAwD;IAC1D5C,EAAA,CAAAa,YAAA,EAAK;IACLb,EAAA,CAAAE,cAAA,UAAI;IACFF,EAAA,CAAAyC,UAAA,KAAAU,iDAAA,0BAGe;IACfnD,EAAA,CAAAyC,UAAA,KAAAW,gDAAA,gCAAApD,EAAA,CAAA4C,sBAAA,CAEc;IAChB5C,EAAA,CAAAa,YAAA,EAAK;;;;;IApCYb,EAAA,CAAAe,SAAA,GAAqB;IAArBf,EAAA,CAAAgB,UAAA,SAAAR,OAAA,CAAA6C,QAAA,CAAqB,aAAAC,GAAA;IAMrBtD,EAAA,CAAAe,SAAA,GAAqB;IAArBf,EAAA,CAAAgB,UAAA,SAAAR,OAAA,CAAA6C,QAAA,CAAqB,aAAAC,GAAA;IAMrBtD,EAAA,CAAAe,SAAA,GAAqB;IAArBf,EAAA,CAAAgB,UAAA,SAAAR,OAAA,CAAA6C,QAAA,CAAqB,aAAAC,GAAA;IAWrBtD,EAAA,CAAAe,SAAA,GAAqB;IAArBf,EAAA,CAAAgB,UAAA,SAAAR,OAAA,CAAA6C,QAAA,CAAqB,aAAAC,GAAA;IAMrBtD,EAAA,CAAAe,SAAA,GAAqB;IAArBf,EAAA,CAAAgB,UAAA,SAAAR,OAAA,CAAA6C,QAAA,CAAqB,aAAAC,GAAA;;;ADjChD,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,OAAO,GAAQ,EAAE;IAIf,IAAI,CAAChC,QAAQ,GAAGiC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE;MAAEC,cAAc,EAAE;IAAe,CAAE,CAAC;EACxE;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,IAAI,CAACC,OAAO,CAAEC,IAA4B,IAAI;MACjDA,IAAI,CAACb,QAAQ,GAAG,KAAK;IACvB,CAAC,CAAC;EACJ;EAGAU,OAAOA,CAAA;IACL,IAAI,CAACN,WAAW,CAACU,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC/C,IAAI,CAACL,IAAI,GAAGK,GAAG;MACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EAEAG,OAAOA,CAAA;IACL,MAAMC,KAAK,GAAGC,MAAM,CAAC,iBAAiB,CAAC;IACvC,MAAMC,WAAW,GAAGD,MAAM,CAAC,uBAAuB,CAAC;IACnD,MAAME,QAAQ,GAAGF,MAAM,CAAC,oBAAoB,CAAC;IAC7C,IAAI,CAAChB,OAAO,GAAG;MACbe,KAAK,EAAEA,KAAK;MACZE,WAAW,EAAEA,WAAW;MACxBC,QAAQ,EAAEA,QAAQ;MAClBpD,OAAO,EAAE,IAAI,CAACkC,OAAO,CAACmB,OAAO,CAAE;KAChC;;IACD,IAAI,CAACpB,WAAW,CAACe,OAAO,CAAC,IAAI,CAACd,OAAO,CAAC,CAACU,SAAS,CAC9C,MAAK;MACHE,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC,IAAI,CAACR,OAAO,EAAE;IAChB,CAAC,EACAe,KAAK,IAAI;MACRR,OAAO,CAACQ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CACF;EACH;EAEAtC,QAAQA,CAAC0B,IAAS;IAChBA,IAAI,CAACb,QAAQ,GAAG,IAAI;EACtB;EAEApB,QAAQA,CAACiC,IAAS;IAChB,MAAMa,WAAW,GAAG;MAClBnE,KAAK,EAAEsD,IAAI,CAACtD,KAAK;MACjBS,WAAW,EAAE6C,IAAI,CAAC7C,WAAW;MAC7BG,OAAO,EAAE0C,IAAI,CAAC1C,OAAO;MACrBK,QAAQ,EAAEqC,IAAI,CAACrC;KAChB;IAED,IAAI,CAAC4B,WAAW,CAACuB,UAAU,CAACd,IAAI,CAACe,GAAG,EAAEF,WAAW,CAAC,CAACX,SAAS,CAC1D,MAAK;MACHE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCL,IAAI,CAACb,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACU,OAAO,EAAE;IAChB,CAAC,EACAe,KAAK,IAAI;MACRR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EAEA1C,UAAUA,CAAC8B,IAAS;IAClBA,IAAI,CAACb,QAAQ,GAAG,KAAK;EACvB;;SAvEWE,kBAAkB;;mBAAlBA,MAAkB,EAAAvD,EAAA,CAAAkF,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;;QAAlB7B,MAAkB;EAAA8B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT/B3F,EAAA,CAAAE,cAAA,aAAwB;MAIZF,EAAA,CAAAiB,MAAA,YAAK;MAAAjB,EAAA,CAAAa,YAAA,EAAK;MACdb,EAAA,CAAAE,cAAA,SAAI;MAAAF,EAAA,CAAAiB,MAAA,kBAAW;MAAAjB,EAAA,CAAAa,YAAA,EAAK;MACpBb,EAAA,CAAAE,cAAA,SAAI;MAAAF,EAAA,CAAAiB,MAAA,eAAQ;MAAAjB,EAAA,CAAAa,YAAA,EAAK;MACjBb,EAAA,CAAAE,cAAA,SAAI;MAAAF,EAAA,CAAAiB,MAAA,gBAAQ;MAAAjB,EAAA,CAAAa,YAAA,EAAK;MACjBb,EAAA,CAAAE,cAAA,UAAI;MAAAF,EAAA,CAAAiB,MAAA,eAAO;MAAAjB,EAAA,CAAAa,YAAA,EAAK;MAElBb,EAAA,CAAAE,cAAA,aAAO;MACLF,EAAA,CAAAyC,UAAA,KAAAoD,iCAAA,kBAuCK;MACP7F,EAAA,CAAAa,YAAA,EAAQ;;;MAxCeb,EAAA,CAAAe,SAAA,IAAO;MAAPf,EAAA,CAAAgB,UAAA,YAAA4E,GAAA,CAAA5B,IAAA,CAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}