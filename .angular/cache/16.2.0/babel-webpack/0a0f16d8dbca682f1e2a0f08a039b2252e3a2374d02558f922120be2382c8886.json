{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskserviceService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000/tasks';\n  }\n  registerUser(userData) {\n    return this.http.post('http://localhost:3000/register', userData);\n  }\n  getTaskData() {\n    return this.http.get(this.url);\n  }\n  addTask(task) {\n    return this.http.post(`${this.baseUrl}/addTask`, task);\n  }\n}\n_class = TaskserviceService;\n_class.ɵfac = function TaskserviceService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TaskserviceService","constructor","http","url","registerUser","userData","post","getTaskData","get","addTask","task","baseUrl","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\services\\taskservice.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskserviceService {\n private url='http://localhost:3000/tasks'\n  constructor(private http:HttpClient) { }\n\n  registerUser(userData: any): Observable<any> {\n    return this.http.post('http://localhost:3000/register', userData);\n  }\n\n  getTaskData(){\n    return this.http.get(this.url)\n  }\n\n  addTask(task: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}/addTask`, task);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADjB,KAAAC,GAAG,GAAC,6BAA6B;EACD;EAEvCC,YAAYA,CAACC,QAAa;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,gCAAgC,EAAED,QAAQ,CAAC;EACnE;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACL,GAAG,CAAC;EAChC;EAEAM,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACR,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACK,OAAO,UAAU,EAAED,IAAI,CAAC;EACxD;;SAdWV,kBAAkB;;mBAAlBA,MAAkB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBf,MAAkB;EAAAgB,OAAA,EAAlBhB,MAAkB,CAAAiB,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}