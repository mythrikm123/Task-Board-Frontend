{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TaskboardComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r1.Title);\n  }\n}\nfunction TaskboardComponent_div_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_1_ng_template_3_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.updatedTitle = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.updatedTitle);\n  }\n}\nfunction TaskboardComponent_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r1.Description);\n  }\n}\nfunction TaskboardComponent_div_1_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_1_ng_template_7_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.updatedDescription = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.updatedDescription);\n  }\n}\nfunction TaskboardComponent_div_1_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", task_r1.DueDate, \"\");\n  }\n}\nfunction TaskboardComponent_div_1_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_1_ng_template_10_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.updatedDueDate = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.updatedDueDate);\n  }\n}\nfunction TaskboardComponent_div_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Priority: \", task_r1.Priority, \"\");\n  }\n}\nfunction TaskboardComponent_div_1_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_1_ng_template_14_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.updatedPriority = $event);\n    });\n    i0.ɵɵelementStart(1, \"option\", 17);\n    i0.ɵɵtext(2, \"Low\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"option\", 18);\n    i0.ɵɵtext(4, \"Moderate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"option\", 19);\n    i0.ɵɵtext(6, \"High\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.updatedPriority);\n  }\n}\nfunction TaskboardComponent_div_1_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_1_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.toggleEditMode(task_r1));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_1_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_1_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.saveTask(task_r1));\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_1_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_1_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.toggleEditMode(task_r1));\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵtemplate(2, TaskboardComponent_div_1_div_2_Template, 2, 1, \"div\", 4);\n    i0.ɵɵtemplate(3, TaskboardComponent_div_1_ng_template_3_Template, 1, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 6);\n    i0.ɵɵtemplate(6, TaskboardComponent_div_1_div_6_Template, 2, 1, \"div\", 4);\n    i0.ɵɵtemplate(7, TaskboardComponent_div_1_ng_template_7_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(9, TaskboardComponent_div_1_div_9_Template, 3, 1, \"div\", 4);\n    i0.ɵɵtemplate(10, TaskboardComponent_div_1_ng_template_10_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(12, TaskboardComponent_div_1_div_12_Template, 3, 1, \"div\", 4);\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵtemplate(14, TaskboardComponent_div_1_ng_template_14_Template, 7, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 10);\n    i0.ɵɵtemplate(17, TaskboardComponent_div_1_button_17_Template, 2, 0, \"button\", 11);\n    i0.ɵɵtemplate(18, TaskboardComponent_div_1_button_18_Template, 2, 0, \"button\", 11);\n    i0.ɵɵtemplate(19, TaskboardComponent_div_1_button_19_Template, 2, 0, \"button\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const _r3 = i0.ɵɵreference(4);\n    const _r6 = i0.ɵɵreference(8);\n    const _r9 = i0.ɵɵreference(11);\n    const _r12 = i0.ɵɵreference(15);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r9);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r12);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode);\n  }\n}\nexport class TaskboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n  }\n  ngOnInit() {\n    this.getTask();\n  }\n  getTask() {\n    this.dataService.getTaskData().subscribe(res => {\n      this.data = res;\n    });\n  }\n  toggleEditMode(task) {\n    task.editMode = !task.editMode;\n    // Initialize updated fields when entering edit mode\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n  saveTask(task) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(() => {\n      console.log('Task updated successfully');\n      task.Title = task.updatedTitle;\n      task.Description = task.updatedDescription;\n      task.DueDate = task.updatedDueDate;\n      task.Priority = task.updatedPriority;\n      task.editMode = false;\n    }, error => {\n      console.error('Error updating task:', error);\n    });\n  }\n  cancelEdit(task) {\n    task.editMode = false;\n    // Reset the priority back to its original value\n    task.updatedPriority = task.Priority;\n  }\n}\n_class = TaskboardComponent;\n_class.ɵfac = function TaskboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskserviceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskboard\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"card-container\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"card-header\"], [4, \"ngIf\", \"ngIfElse\"], [\"editModeTitle\", \"\"], [1, \"card-body\"], [\"editModeDescription\", \"\"], [\"editModeDueDate\", \"\"], [\"editModePriority\", \"\"], [1, \"card-footer\"], [3, \"click\", 4, \"ngIf\"], [\"placeholder\", \"Title\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [1, \"card-text\"], [\"type\", \"date\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"low\"], [\"value\", \"moderate\"], [\"value\", \"high\"], [3, \"click\"]],\n  template: function TaskboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, TaskboardComponent_div_1_Template, 20, 11, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".card-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 20px;\\n  }\\n  \\n  .card[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    padding: 10px;\\n    width: 300px;\\n    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\\n    background-color: white;\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-content[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    margin-right: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child {\\n    margin-right: 0;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLFNBQVM7RUFDWDs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLFlBQVk7SUFDWiwwQ0FBMEM7SUFDMUMsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgZ2FwOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1oZWFkZXIge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtY29udGVudCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1hY3Rpb25zIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtYWN0aW9ucyBidXR0b246bGFzdC1jaGlsZCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","task_r1","Title","ɵɵlistener","TaskboardComponent_div_1_ng_template_3_Template_input_ngModelChange_0_listener","$event","ɵɵrestoreView","_r20","ɵɵnextContext","$implicit","ɵɵresetView","updatedTitle","ɵɵproperty","Description","TaskboardComponent_div_1_ng_template_7_Template_input_ngModelChange_0_listener","_r25","updatedDescription","ɵɵtextInterpolate1","DueDate","TaskboardComponent_div_1_ng_template_10_Template_input_ngModelChange_0_listener","_r30","updatedDueDate","Priority","TaskboardComponent_div_1_ng_template_14_Template_select_ngModelChange_0_listener","_r35","updatedPriority","TaskboardComponent_div_1_button_17_Template_button_click_0_listener","_r39","ctx_r37","toggleEditMode","TaskboardComponent_div_1_button_18_Template_button_click_0_listener","_r42","ctx_r40","saveTask","TaskboardComponent_div_1_button_19_Template_button_click_0_listener","_r45","ctx_r43","ɵɵtemplate","TaskboardComponent_div_1_div_2_Template","TaskboardComponent_div_1_ng_template_3_Template","ɵɵtemplateRefExtractor","TaskboardComponent_div_1_div_6_Template","TaskboardComponent_div_1_ng_template_7_Template","TaskboardComponent_div_1_div_9_Template","TaskboardComponent_div_1_ng_template_10_Template","TaskboardComponent_div_1_div_12_Template","ɵɵelement","TaskboardComponent_div_1_ng_template_14_Template","TaskboardComponent_div_1_button_17_Template","TaskboardComponent_div_1_button_18_Template","TaskboardComponent_div_1_button_19_Template","editMode","_r3","_r6","_r9","_r12","TaskboardComponent","constructor","dataService","ngOnInit","getTask","getTaskData","subscribe","res","data","task","updateTask","_id","console","log","error","cancelEdit","ɵɵdirectiveInject","i1","TaskserviceService","selectors","decls","vars","consts","template","TaskboardComponent_Template","rf","ctx","TaskboardComponent_div_1_Template"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.ts","F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.html"],"sourcesContent":[" // Import required modules and services\nimport { Component, OnInit } from '@angular/core';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.css']\n})\nexport class TaskboardComponent implements OnInit {\n  data: any;\n\n  constructor(private dataService: TaskserviceService) {}\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  getTask() {\n    this.dataService.getTaskData().subscribe((res) => {\n      this.data = res;\n    });\n  }\n\n  toggleEditMode(task: any) {\n    task.editMode = !task.editMode;\n    // Initialize updated fields when entering edit mode\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n\n  saveTask(task: any) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(\n      () => {\n        console.log('Task updated successfully');\n        task.Title = task.updatedTitle;\n        task.Description = task.updatedDescription;\n        task.DueDate = task.updatedDueDate;\n        task.Priority = task.updatedPriority;\n        task.editMode = false;\n      },\n      (error) => {\n        console.error('Error updating task:', error);\n      }\n    );\n  }\n\n  cancelEdit(task: any) {\n    task.editMode = false;\n    // Reset the priority back to its original value\n    task.updatedPriority = task.Priority;\n  }\n}\n","<div class=\"card-container\">\n    <div class=\"card\" *ngFor=\"let task of data\">\n      <div class=\"card-header\">\n        <div *ngIf=\"!task.editMode; else editModeTitle\">{{ task.Title }}</div>\n        <ng-template #editModeTitle>\n          <input [(ngModel)]=\"task.updatedTitle\" placeholder=\"Title\">\n        </ng-template>\n      </div>\n      <div class=\"card-body\">\n        <div *ngIf=\"!task.editMode; else editModeDescription\">{{ task.Description }}</div>\n        <ng-template #editModeDescription>\n          <input [(ngModel)]=\"task.updatedDescription\" placeholder=\"Description\">\n        </ng-template>\n        <div *ngIf=\"!task.editMode; else editModeDueDate\">\n          <p class=\"card-text\">Due Date: {{ task.DueDate }}</p>\n        </div>\n        <ng-template #editModeDueDate>\n          <input [(ngModel)]=\"task.updatedDueDate\" type=\"date\">\n        </ng-template>\n        <div *ngIf=\"!task.editMode; else editModePriority\">\n          <p class=\"card-text\">Priority: {{ task.Priority }}</p>\n        </div><br>\n        <ng-template #editModePriority>\n          <select [(ngModel)]=\"task.updatedPriority\">\n            <option value=\"low\">Low</option>\n            <option value=\"moderate\">Moderate</option>\n            <option value=\"high\">High</option>\n          </select>\n        </ng-template>\n      </div>\n      <div class=\"card-footer\">\n        <button *ngIf=\"!task.editMode\" (click)=\"toggleEditMode(task)\">Edit</button>\n        <button *ngIf=\"task.editMode\" (click)=\"saveTask(task)\">Save</button>\n        <button *ngIf=\"task.editMode\" (click)=\"toggleEditMode(task)\">Cancel</button>\n      </div>\n    </div>\n  </div>\n  "],"mappings":";;;;;;;ICGQA,EAAA,CAAAC,cAAA,UAAgD;IAAAD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAtBH,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,KAAA,CAAgB;;;;;;IAE9DP,EAAA,CAAAC,cAAA,gBAA2D;IAApDD,EAAA,CAAAQ,UAAA,2BAAAC,+EAAAC,MAAA;MAAAV,EAAA,CAAAW,aAAA,CAAAC,IAAA;MAAA,MAAAN,OAAA,GAAAN,EAAA,CAAAa,aAAA,GAAAC,SAAA;MAAA,OAAad,EAAA,CAAAe,WAAA,CAAAT,OAAA,CAAAU,YAAA,GAAAN,MAAA,CAAyB;IAAA,EAAP;IAAtCV,EAAA,CAAAG,YAAA,EAA2D;;;;IAApDH,EAAA,CAAAiB,UAAA,YAAAX,OAAA,CAAAU,YAAA,CAA+B;;;;;IAIxChB,EAAA,CAAAC,cAAA,UAAsD;IAAAD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAA5BH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAY,WAAA,CAAsB;;;;;;IAE1ElB,EAAA,CAAAC,cAAA,gBAAuE;IAAhED,EAAA,CAAAQ,UAAA,2BAAAW,+EAAAT,MAAA;MAAAV,EAAA,CAAAW,aAAA,CAAAS,IAAA;MAAA,MAAAd,OAAA,GAAAN,EAAA,CAAAa,aAAA,GAAAC,SAAA;MAAA,OAAad,EAAA,CAAAe,WAAA,CAAAT,OAAA,CAAAe,kBAAA,GAAAX,MAAA,CAA+B;IAAA,EAAP;IAA5CV,EAAA,CAAAG,YAAA,EAAuE;;;;IAAhEH,EAAA,CAAAiB,UAAA,YAAAX,OAAA,CAAAe,kBAAA,CAAqC;;;;;IAE9CrB,EAAA,CAAAC,cAAA,UAAkD;IAC3BD,EAAA,CAAAE,MAAA,GAA4B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAhCH,EAAA,CAAAI,SAAA,GAA4B;IAA5BJ,EAAA,CAAAsB,kBAAA,eAAAhB,OAAA,CAAAiB,OAAA,KAA4B;;;;;;IAGjDvB,EAAA,CAAAC,cAAA,gBAAqD;IAA9CD,EAAA,CAAAQ,UAAA,2BAAAgB,gFAAAd,MAAA;MAAAV,EAAA,CAAAW,aAAA,CAAAc,IAAA;MAAA,MAAAnB,OAAA,GAAAN,EAAA,CAAAa,aAAA,GAAAC,SAAA;MAAA,OAAad,EAAA,CAAAe,WAAA,CAAAT,OAAA,CAAAoB,cAAA,GAAAhB,MAAA,CAA2B;IAAA,EAAP;IAAxCV,EAAA,CAAAG,YAAA,EAAqD;;;;IAA9CH,EAAA,CAAAiB,UAAA,YAAAX,OAAA,CAAAoB,cAAA,CAAiC;;;;;IAE1C1B,EAAA,CAAAC,cAAA,UAAmD;IAC5BD,EAAA,CAAAE,MAAA,GAA6B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAjCH,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAsB,kBAAA,eAAAhB,OAAA,CAAAqB,QAAA,KAA6B;;;;;;IAGlD3B,EAAA,CAAAC,cAAA,iBAA2C;IAAnCD,EAAA,CAAAQ,UAAA,2BAAAoB,iFAAAlB,MAAA;MAAAV,EAAA,CAAAW,aAAA,CAAAkB,IAAA;MAAA,MAAAvB,OAAA,GAAAN,EAAA,CAAAa,aAAA,GAAAC,SAAA;MAAA,OAAad,EAAA,CAAAe,WAAA,CAAAT,OAAA,CAAAwB,eAAA,GAAApB,MAAA,CAC1B;IAAA,EAD+C;IACxCV,EAAA,CAAAC,cAAA,iBAAoB;IAAAD,EAAA,CAAAE,MAAA,UAAG;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAChCH,EAAA,CAAAC,cAAA,iBAAyB;IAAAD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAC1CH,EAAA,CAAAC,cAAA,iBAAqB;IAAAD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAH5BH,EAAA,CAAAiB,UAAA,YAAAX,OAAA,CAAAwB,eAAA,CAAkC;;;;;;IAQ5C9B,EAAA,CAAAC,cAAA,iBAA8D;IAA/BD,EAAA,CAAAQ,UAAA,mBAAAuB,oEAAA;MAAA/B,EAAA,CAAAW,aAAA,CAAAqB,IAAA;MAAA,MAAA1B,OAAA,GAAAN,EAAA,CAAAa,aAAA,GAAAC,SAAA;MAAA,MAAAmB,OAAA,GAAAjC,EAAA,CAAAa,aAAA;MAAA,OAASb,EAAA,CAAAe,WAAA,CAAAkB,OAAA,CAAAC,cAAA,CAAA5B,OAAA,CAAoB;IAAA,EAAC;IAACN,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;;IAC3EH,EAAA,CAAAC,cAAA,iBAAuD;IAAzBD,EAAA,CAAAQ,UAAA,mBAAA2B,oEAAA;MAAAnC,EAAA,CAAAW,aAAA,CAAAyB,IAAA;MAAA,MAAA9B,OAAA,GAAAN,EAAA,CAAAa,aAAA,GAAAC,SAAA;MAAA,MAAAuB,OAAA,GAAArC,EAAA,CAAAa,aAAA;MAAA,OAASb,EAAA,CAAAe,WAAA,CAAAsB,OAAA,CAAAC,QAAA,CAAAhC,OAAA,CAAc;IAAA,EAAC;IAACN,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;;IACpEH,EAAA,CAAAC,cAAA,iBAA6D;IAA/BD,EAAA,CAAAQ,UAAA,mBAAA+B,oEAAA;MAAAvC,EAAA,CAAAW,aAAA,CAAA6B,IAAA;MAAA,MAAAlC,OAAA,GAAAN,EAAA,CAAAa,aAAA,GAAAC,SAAA;MAAA,MAAA2B,OAAA,GAAAzC,EAAA,CAAAa,aAAA;MAAA,OAASb,EAAA,CAAAe,WAAA,CAAA0B,OAAA,CAAAP,cAAA,CAAA5B,OAAA,CAAoB;IAAA,EAAC;IAACN,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;IAhChFH,EAAA,CAAAC,cAAA,aAA4C;IAExCD,EAAA,CAAA0C,UAAA,IAAAC,uCAAA,iBAAsE;IACtE3C,EAAA,CAAA0C,UAAA,IAAAE,+CAAA,gCAAA5C,EAAA,CAAA6C,sBAAA,CAEc;IAChB7C,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,aAAuB;IACrBD,EAAA,CAAA0C,UAAA,IAAAI,uCAAA,iBAAkF;IAClF9C,EAAA,CAAA0C,UAAA,IAAAK,+CAAA,gCAAA/C,EAAA,CAAA6C,sBAAA,CAEc;IACd7C,EAAA,CAAA0C,UAAA,IAAAM,uCAAA,iBAEM;IACNhD,EAAA,CAAA0C,UAAA,KAAAO,gDAAA,gCAAAjD,EAAA,CAAA6C,sBAAA,CAEc;IACd7C,EAAA,CAAA0C,UAAA,KAAAQ,wCAAA,iBAEM;IAAAlD,EAAA,CAAAmD,SAAA,UAAI;IACVnD,EAAA,CAAA0C,UAAA,KAAAU,gDAAA,gCAAApD,EAAA,CAAA6C,sBAAA,CAMc;IAChB7C,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,eAAyB;IACvBD,EAAA,CAAA0C,UAAA,KAAAW,2CAAA,qBAA2E;IAC3ErD,EAAA,CAAA0C,UAAA,KAAAY,2CAAA,qBAAoE;IACpEtD,EAAA,CAAA0C,UAAA,KAAAa,2CAAA,qBAA4E;IAC9EvD,EAAA,CAAAG,YAAA,EAAM;;;;;;;;IA/BEH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAiB,UAAA,UAAAX,OAAA,CAAAkD,QAAA,CAAsB,aAAAC,GAAA;IAMtBzD,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAiB,UAAA,UAAAX,OAAA,CAAAkD,QAAA,CAAsB,aAAAE,GAAA;IAItB1D,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAiB,UAAA,UAAAX,OAAA,CAAAkD,QAAA,CAAsB,aAAAG,GAAA;IAMtB3D,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAiB,UAAA,UAAAX,OAAA,CAAAkD,QAAA,CAAsB,aAAAI,IAAA;IAYnB5D,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAiB,UAAA,UAAAX,OAAA,CAAAkD,QAAA,CAAoB;IACpBxD,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAiB,UAAA,SAAAX,OAAA,CAAAkD,QAAA,CAAmB;IACnBxD,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAiB,UAAA,SAAAX,OAAA,CAAAkD,QAAA,CAAmB;;;ADxBpC,OAAM,MAAOK,kBAAkB;EAG7BC,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;EAAuB;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAOA,CAAA;IACL,IAAI,CAACF,WAAW,CAACG,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC/C,IAAI,CAACC,IAAI,GAAGD,GAAG;IACjB,CAAC,CAAC;EACJ;EAEAlC,cAAcA,CAACoC,IAAS;IACtBA,IAAI,CAACd,QAAQ,GAAG,CAACc,IAAI,CAACd,QAAQ;IAC9B;IACA,IAAIc,IAAI,CAACd,QAAQ,EAAE;MACjBc,IAAI,CAACtD,YAAY,GAAGsD,IAAI,CAAC/D,KAAK;MAC9B+D,IAAI,CAACjD,kBAAkB,GAAGiD,IAAI,CAACpD,WAAW;MAC1CoD,IAAI,CAAC5C,cAAc,GAAG4C,IAAI,CAAC/C,OAAO;MAClC+C,IAAI,CAACxC,eAAe,GAAGwC,IAAI,CAAC3C,QAAQ;;EAExC;EAEAW,QAAQA,CAACgC,IAAS;IAChB;IACA,IAAI,CAACP,WAAW,CAACQ,UAAU,CAACD,IAAI,CAACE,GAAG,EAAE;MACpCjE,KAAK,EAAE+D,IAAI,CAACtD,YAAY;MACxBE,WAAW,EAAEoD,IAAI,CAACjD,kBAAkB;MACpCE,OAAO,EAAE+C,IAAI,CAAC5C,cAAc;MAC5BC,QAAQ,EAAE2C,IAAI,CAACxC;KAChB,CAAC,CAACqC,SAAS,CACV,MAAK;MACHM,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCJ,IAAI,CAAC/D,KAAK,GAAG+D,IAAI,CAACtD,YAAY;MAC9BsD,IAAI,CAACpD,WAAW,GAAGoD,IAAI,CAACjD,kBAAkB;MAC1CiD,IAAI,CAAC/C,OAAO,GAAG+C,IAAI,CAAC5C,cAAc;MAClC4C,IAAI,CAAC3C,QAAQ,GAAG2C,IAAI,CAACxC,eAAe;MACpCwC,IAAI,CAACd,QAAQ,GAAG,KAAK;IACvB,CAAC,EACAmB,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EAEAC,UAAUA,CAACN,IAAS;IAClBA,IAAI,CAACd,QAAQ,GAAG,KAAK;IACrB;IACAc,IAAI,CAACxC,eAAe,GAAGwC,IAAI,CAAC3C,QAAQ;EACtC;;SApDWkC,kBAAkB;;mBAAlBA,MAAkB,EAAA7D,EAAA,CAAA6E,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;;QAAlBlB,MAAkB;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT/BtF,EAAA,CAAAC,cAAA,aAA4B;MACxBD,EAAA,CAAA0C,UAAA,IAAA8C,iCAAA,mBAkCM;MACRxF,EAAA,CAAAG,YAAA,EAAM;;;MAnC+BH,EAAA,CAAAI,SAAA,GAAO;MAAPJ,EAAA,CAAAiB,UAAA,YAAAsE,GAAA,CAAAlB,IAAA,CAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}