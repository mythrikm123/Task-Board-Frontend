{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-bootstrap/datepicker\";\nfunction TaskboardComponent_tr_13_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.Title, \" \");\n  }\n}\nfunction TaskboardComponent_tr_13_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_tr_13_ng_template_3_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.Title = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.Title);\n  }\n}\nfunction TaskboardComponent_tr_13_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.Description, \" \");\n  }\n}\nfunction TaskboardComponent_tr_13_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_tr_13_ng_template_7_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.Description = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.Description);\n  }\n}\nfunction TaskboardComponent_tr_13_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.DueDate, \" \");\n  }\n}\nfunction TaskboardComponent_tr_13_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_tr_13_ng_template_11_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.DueDate = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", task_r1.DueDate)(\"bsConfig\", ctx_r10.bsConfig);\n  }\n}\nfunction TaskboardComponent_tr_13_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.Priority, \" \");\n  }\n}\nfunction TaskboardComponent_tr_13_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_tr_13_ng_template_15_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r1.Priority = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r1.Priority);\n  }\n}\nfunction TaskboardComponent_tr_13_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_tr_13_ng_container_18_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.toggleEditMode(task_r1));\n    });\n    i0.ɵɵtext(2, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction TaskboardComponent_tr_13_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_tr_13_ng_template_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.saveTask(task_r1));\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_tr_13_ng_template_19_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.toggleEditMode(task_r1));\n    });\n    i0.ɵɵtext(3, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtemplate(2, TaskboardComponent_tr_13_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵtemplate(3, TaskboardComponent_tr_13_ng_template_3_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtemplate(6, TaskboardComponent_tr_13_ng_container_6_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵtemplate(7, TaskboardComponent_tr_13_ng_template_7_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtemplate(10, TaskboardComponent_tr_13_ng_container_10_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵtemplate(11, TaskboardComponent_tr_13_ng_template_11_Template, 1, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtemplate(14, TaskboardComponent_tr_13_ng_container_14_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵtemplate(15, TaskboardComponent_tr_13_ng_template_15_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtemplate(18, TaskboardComponent_tr_13_ng_container_18_Template, 3, 0, \"ng-container\", 1);\n    i0.ɵɵtemplate(19, TaskboardComponent_tr_13_ng_template_19_Template, 4, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const _r3 = i0.ɵɵreference(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode)(\"ngIfElse\", _r3);\n  }\n}\nexport class TaskboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.newTask = {};\n    this.bsConfig = Object.assign({}, {\n      containerClass: 'theme-default'\n    });\n  }\n  ngOnInit() {\n    this.getTask();\n    this.data.forEach(task => {\n      task.editMode = false;\n    });\n  }\n  getTask() {\n    this.dataService.getTaskData().subscribe(res => {\n      this.data = res;\n      console.log(res);\n    });\n  }\n  addTask() {\n    const title = prompt('Enter the Title');\n    const description = prompt('Enter the description');\n    const priority = prompt('Enter the Priority');\n    this.newTask = {\n      title: title,\n      description: description,\n      priority: priority,\n      DueDate: this.newTask.dueDate // Use the selected due date\n    };\n\n    this.dataService.addTask(this.newTask).subscribe(() => {\n      console.log('Task added successfully');\n      this.getTask();\n    }, error => {\n      console.error('Error adding task:', error);\n    });\n  }\n}\n_class = TaskboardComponent;\n_class.ɵfac = function TaskboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskserviceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskboard\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfElse\"], [\"editMode\", \"\"], [3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"bsDatepicker\", \"\", 3, \"ngModel\", \"bsConfig\", \"ngModelChange\"], [3, \"click\"]],\n  template: function TaskboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"th\");\n      i0.ɵɵtext(3, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"th\");\n      i0.ɵɵtext(5, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Due Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Priority\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Actions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"tbody\");\n      i0.ɵɵtemplate(13, TaskboardComponent_tr_13_Template, 21, 10, \"tr\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.BsDatepickerDirective, i4.BsDatepickerInputDirective],\n  styles: [\".task-cards[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 20px;\\n    margin-top: 20px;\\n  }\\n  \\n  .task-card[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    width: calc(33.33% - 20px);\\n    padding: 15px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n    transition: transform 0.2s, box-shadow 0.2s;\\n    cursor: pointer;\\n  }\\n  \\n  .task-card[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-5px);\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    margin: 5px 0;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLFNBQVM7SUFDVCxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQixhQUFhO0lBQ2Isd0NBQXdDO0lBQ3hDLHNCQUFzQjtJQUN0QiwyQ0FBMkM7SUFDM0MsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLDJCQUEyQjtJQUMzQix3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLnRhc2stY2FyZHMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGdhcDogMjBweDtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC50YXNrLWNhcmQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDIwcHgpO1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMsIGJveC1zaGFkb3cgMC4ycztcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLnRhc2stY2FyZDpob3ZlciB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1oZWFkZXIge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtY29udGVudCBwIHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","task_r1","Title","ɵɵelementStart","ɵɵlistener","TaskboardComponent_tr_13_ng_template_3_Template_input_ngModelChange_0_listener","$event","ɵɵrestoreView","_r20","ɵɵnextContext","$implicit","ɵɵresetView","ɵɵelementEnd","ɵɵproperty","Description","TaskboardComponent_tr_13_ng_template_7_Template_input_ngModelChange_0_listener","_r25","DueDate","TaskboardComponent_tr_13_ng_template_11_Template_input_ngModelChange_0_listener","_r30","ctx_r10","bsConfig","Priority","TaskboardComponent_tr_13_ng_template_15_Template_input_ngModelChange_0_listener","_r35","TaskboardComponent_tr_13_ng_container_18_Template_button_click_1_listener","_r39","ctx_r37","toggleEditMode","TaskboardComponent_tr_13_ng_template_19_Template_button_click_0_listener","_r42","ctx_r40","saveTask","TaskboardComponent_tr_13_ng_template_19_Template_button_click_2_listener","ctx_r43","ɵɵtemplate","TaskboardComponent_tr_13_ng_container_2_Template","TaskboardComponent_tr_13_ng_template_3_Template","ɵɵtemplateRefExtractor","TaskboardComponent_tr_13_ng_container_6_Template","TaskboardComponent_tr_13_ng_template_7_Template","TaskboardComponent_tr_13_ng_container_10_Template","TaskboardComponent_tr_13_ng_template_11_Template","TaskboardComponent_tr_13_ng_container_14_Template","TaskboardComponent_tr_13_ng_template_15_Template","TaskboardComponent_tr_13_ng_container_18_Template","TaskboardComponent_tr_13_ng_template_19_Template","editMode","_r3","TaskboardComponent","constructor","dataService","newTask","Object","assign","containerClass","ngOnInit","getTask","data","forEach","task","getTaskData","subscribe","res","console","log","addTask","title","prompt","description","priority","dueDate","error","ɵɵdirectiveInject","i1","TaskserviceService","selectors","decls","vars","consts","template","TaskboardComponent_Template","rf","ctx","TaskboardComponent_tr_13_Template"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.ts","F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.css'],\n})\nexport class TaskboardComponent implements OnInit {\n  data: any;\n  newTask: any = {};\n  bsConfig: Partial<BsDatepickerConfig>; // Configuration for date picker\n\n  constructor(private dataService: TaskserviceService) {\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-default' });\n  }\n\n  ngOnInit() {\n    this.getTask();\n    this.data.forEach((task: { editMode: boolean; }) => {\n      task.editMode = false;\n    });\n  }\n \n\n  getTask() {\n    this.dataService.getTaskData().subscribe((res) => {\n      this.data = res;\n      console.log(res);\n    });\n  }\n\n  addTask() {\n    const title = prompt('Enter the Title');\n    const description = prompt('Enter the description');\n    const priority = prompt('Enter the Priority');\n    this.newTask = {\n      title: title,\n      description: description,\n      priority: priority,\n      DueDate: this.newTask.dueDate, // Use the selected due date\n    };\n    this.dataService.addTask(this.newTask).subscribe(\n      () => {\n        console.log('Task added successfully');\n        this.getTask();\n      },\n      (error) => {\n        console.error('Error adding task:', error);\n      }\n    );\n  }\n\n  \n  \n}\n","<table>\n    <thead>\n      <th>Title</th>\n      <th>Description</th>\n      <th>Due Date</th>\n      <th>Priority</th>\n      <th>Actions</th>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let task of data\">\n        <td>\n          <ng-container *ngIf=\"!task.editMode; else editMode\">\n            {{ task.Title }}\n          </ng-container>\n          <ng-template #editMode>\n            <input [(ngModel)]=\"task.Title\" />\n          </ng-template>\n        </td>\n        <td>\n          <ng-container *ngIf=\"!task.editMode; else editMode\">\n            {{ task.Description }}\n          </ng-container>\n          <ng-template #editMode>\n            <input [(ngModel)]=\"task.Description\" />\n          </ng-template>\n        </td>\n        <td>\n          <ng-container *ngIf=\"!task.editMode; else editMode\">\n            {{ task.DueDate }}\n          </ng-container>\n          <ng-template #editMode>\n            <input\n              type=\"text\"\n              [(ngModel)]=\"task.DueDate\"\n              bsDatepicker\n              [bsConfig]=\"bsConfig\"\n            />\n          </ng-template>\n        </td>\n        <td>\n          <ng-container *ngIf=\"!task.editMode; else editMode\">\n            {{ task.Priority }}\n          </ng-container>\n          <ng-template #editMode>\n            <input [(ngModel)]=\"task.Priority\" />\n          </ng-template>\n        </td>\n        <td>\n          <ng-container *ngIf=\"!task.editMode; else editMode\">\n            <button (click)=\"toggleEditMode(task)\">Edit</button>\n          </ng-container>\n          <ng-template #editMode>\n            <button (click)=\"saveTask(task)\">Save</button>\n            <button (click)=\"toggleEditMode(task)\">Cancel</button>\n          </ng-template>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}