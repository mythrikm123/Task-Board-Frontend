{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TaskboardComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_12_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.newTask.Title = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"textarea\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_12_Template_textarea_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.newTask.Description = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_12_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.newTask.DueDate = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_12_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.newTask.Priority = $event);\n    });\n    i0.ɵɵelementStart(5, \"option\", 5);\n    i0.ɵɵtext(6, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 6);\n    i0.ɵɵtext(8, \"Completed\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_12_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.addTask());\n    });\n    i0.ɵɵtext(10, \"Add\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newTask.Title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newTask.Description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newTask.DueDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newTask.Priority);\n  }\n}\nfunction TaskboardComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 28);\n  }\n  if (rf & 2) {\n    const task_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r9.highlightSearch(task_r8.Title), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction TaskboardComponent_div_14_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_14_ng_template_3_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const task_r8 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r8.updatedTitle = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r8.updatedTitle);\n  }\n}\nfunction TaskboardComponent_div_14_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 28);\n  }\n  if (rf & 2) {\n    const task_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r12.highlightSearch(task_r8.Description), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction TaskboardComponent_div_14_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_14_ng_template_7_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const task_r8 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r8.updatedDescription = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r8.updatedDescription);\n  }\n}\nfunction TaskboardComponent_div_14_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", task_r8.DueDate, \"\");\n  }\n}\nfunction TaskboardComponent_div_14_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_14_ng_template_10_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const task_r8 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r8.updatedDueDate = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r8.updatedDueDate);\n  }\n}\nfunction TaskboardComponent_div_14_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Priority: \", task_r8.Priority, \"\");\n  }\n}\nfunction TaskboardComponent_div_14_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_div_14_ng_template_13_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const task_r8 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r8.updatedPriority = $event);\n    });\n    i0.ɵɵelementStart(1, \"option\", 5);\n    i0.ɵɵtext(2, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"option\", 6);\n    i0.ɵɵtext(4, \"Completed\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", task_r8.updatedPriority);\n  }\n}\nfunction TaskboardComponent_div_14_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_14_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const task_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.toggleEditMode(task_r8));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_14_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_14_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const task_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.saveTask(task_r8));\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_14_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_14_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const task_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.toggleEditMode(task_r8));\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r54 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    i0.ɵɵtemplate(2, TaskboardComponent_div_14_div_2_Template, 1, 1, \"div\", 19);\n    i0.ɵɵtemplate(3, TaskboardComponent_div_14_ng_template_3_Template, 1, 1, \"ng-template\", null, 20, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 21);\n    i0.ɵɵtemplate(6, TaskboardComponent_div_14_div_6_Template, 1, 1, \"div\", 19);\n    i0.ɵɵtemplate(7, TaskboardComponent_div_14_ng_template_7_Template, 1, 1, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(9, TaskboardComponent_div_14_div_9_Template, 3, 1, \"div\", 23);\n    i0.ɵɵtemplate(10, TaskboardComponent_div_14_ng_template_10_Template, 1, 1, \"ng-template\", null, 24, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(12, TaskboardComponent_div_14_div_12_Template, 3, 1, \"div\", 23);\n    i0.ɵɵtemplate(13, TaskboardComponent_div_14_ng_template_13_Template, 5, 1, \"ng-template\", null, 25, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 26);\n    i0.ɵɵtemplate(16, TaskboardComponent_div_14_button_16_Template, 2, 0, \"button\", 27);\n    i0.ɵɵtemplate(17, TaskboardComponent_div_14_button_17_Template, 2, 0, \"button\", 27);\n    i0.ɵɵtemplate(18, TaskboardComponent_div_14_button_18_Template, 2, 0, \"button\", 27);\n    i0.ɵɵelementStart(19, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_14_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r54);\n      const task_r8 = restoredCtx.$implicit;\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.deleteTask(task_r8._id));\n    });\n    i0.ɵɵtext(20, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r8 = ctx.$implicit;\n    const _r10 = i0.ɵɵreference(4);\n    const _r13 = i0.ɵɵreference(8);\n    const _r16 = i0.ɵɵreference(11);\n    const _r19 = i0.ɵɵreference(14);\n    i0.ɵɵproperty(\"ngClass\", task_r8.Priority);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r8.editMode)(\"ngIfElse\", _r10);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r8.editMode)(\"ngIfElse\", _r13);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !task_r8.editMode)(\"ngIfElse\", _r16);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !task_r8.editMode)(\"ngIfElse\", _r19);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !task_r8.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r8.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r8.editMode);\n  }\n}\nexport class TaskboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.newTask = {}; // New task data object\n    this.showAddForm = false; // Flag to toggle add task form\n    this.searchKeyword = ''; // Add this line\n    this.filteredTasks = [];\n    this.selectedPriority = 'all';\n  }\n  ngOnInit() {\n    this.getTask();\n  }\n  getTask() {\n    this.dataService.getTaskData().subscribe(res => {\n      this.data = res;\n      this.filteredTasks = this.data; // Initialize filteredTasks with all tasks initially\n    });\n  }\n\n  toggleEditMode(task) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n  toggleAddForm() {\n    this.showAddForm = !this.showAddForm;\n  }\n  addTask() {\n    this.dataService.addTask(this.newTask).subscribe(() => {\n      console.log('Task added successfully');\n      this.getTask();\n      this.newTask = {}; // Clear new task data\n      this.showAddForm = false; // Hide add task form\n    }, error => {\n      console.error('Error adding task:', error);\n    });\n  }\n  saveTask(task) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(() => {\n      console.log('Task updated successfully');\n      task.Title = task.updatedTitle;\n      task.Description = task.updatedDescription;\n      task.DueDate = task.updatedDueDate;\n      task.Priority = task.updatedPriority;\n      task.editMode = false;\n    }, error => {\n      console.error('Error updating task:', error);\n    });\n  }\n  deleteTask(taskId) {\n    if (confirm('Are you sure you want to delete this task?')) {\n      this.dataService.deleteTask(taskId).subscribe(() => {\n        console.log('Task deleted successfully');\n        this.getTask();\n      }, error => {\n        console.error('Error deleting task:', error);\n      });\n    }\n  }\n  onSearchChange() {\n    if (this.searchKeyword || this.selectedPriority !== 'all') {\n      this.filteredTasks = this.data.filter(task => {\n        const keywordMatch = !this.searchKeyword || task.Title.toLowerCase().includes(this.searchKeyword.toLowerCase()) || task.Description.toLowerCase().includes(this.searchKeyword.toLowerCase());\n        const priorityMatch = this.selectedPriority === 'all' || task.Priority.toLowerCase() === this.selectedPriority.toLowerCase();\n        return keywordMatch && priorityMatch;\n      });\n    } else {\n      this.filteredTasks = this.data;\n    }\n  }\n  highlightSearch(text) {\n    if (this.searchKeyword && text) {\n      const searchRegExp = new RegExp(this.searchKeyword, 'gi');\n      return text.replace(searchRegExp, match => `<span class=\"highlight\">${match}</span>`);\n    }\n    return text;\n  }\n}\n_class = TaskboardComponent;\n_class.ɵfac = function TaskboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskserviceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskboard\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[1, \"fullcontainer\"], [1, \"search\"], [\"type\", \"text\", \"placeholder\", \"Search tasks...\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"all\"], [\"value\", \"pending\"], [\"value\", \"completed\"], [\"id\", \"add-task\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"add-task-form\", 4, \"ngIf\"], [1, \"card-container\"], [\"class\", \"card\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"add-task-form\"], [\"placeholder\", \"Title\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"placeholder\", \"Due Date\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"card\", 3, \"ngClass\"], [1, \"card-header\"], [3, \"innerHTML\", 4, \"ngIf\", \"ngIfElse\"], [\"editModeTitle\", \"\"], [1, \"card-content\"], [\"editModeDescription\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"editModeDueDate\", \"\"], [\"editModePriority\", \"\"], [1, \"card-footer\"], [3, \"click\", 4, \"ngIf\"], [3, \"innerHTML\"], [1, \"card-text\"], [\"type\", \"date\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function TaskboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.searchKeyword = $event;\n      })(\"input\", function TaskboardComponent_Template_input_input_2_listener() {\n        return ctx.onSearchChange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskboardComponent_Template_select_ngModelChange_3_listener($event) {\n        return ctx.selectedPriority = $event;\n      })(\"change\", function TaskboardComponent_Template_select_change_3_listener() {\n        return ctx.onSearchChange();\n      });\n      i0.ɵɵelementStart(4, \"option\", 4);\n      i0.ɵɵtext(5, \"All Priorities\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"option\", 5);\n      i0.ɵɵtext(7, \"Pending\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"option\", 6);\n      i0.ɵɵtext(9, \"Completed\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function TaskboardComponent_Template_button_click_10_listener() {\n        return ctx.toggleAddForm();\n      });\n      i0.ɵɵtext(11, \"Add Task\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, TaskboardComponent_div_12_Template, 11, 4, \"div\", 8);\n      i0.ɵɵelementStart(13, \"div\", 9);\n      i0.ɵɵtemplate(14, TaskboardComponent_div_14_Template, 21, 12, \"div\", 10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchKeyword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPriority);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAddForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredTasks);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".fullcontainer[_ngcontent-%COMP%] {\\n    background-color: #f5f1f1e5;\\n    height: 100vh;\\n  }\\n  \\n  .search[_ngcontent-%COMP%]{\\n    height: 50px;\\n  }\\n  .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n    height: 50px;\\n    \\n\\n    width: 900px;\\n    border-radius: 5px;\\n    border: 1px solid rgb(225, 221, 221);\\n    \\n\\n  }\\n  .search[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{\\n    border-radius: 5px;\\n    height: 50px;\\n    width: 300px;\\n  }\\n .card-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: 20px;\\n  gap: 20px;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  padding: 10px;\\n  width: 300px;\\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\\n  background-color: white;\\n  margin-top: 20px;\\n}\\n\\n.card.pending[_ngcontent-%COMP%] {\\n  background-color: #FFCC80; \\n\\n  color: #E65100; \\n\\n}\\n\\n.card.completed[_ngcontent-%COMP%] {\\n  background-color: #C8E6C9; \\n\\n  color: #2E7D32; \\n\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n  margin-bottom: 10px;\\n}\\n\\n.card-content[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n\\n.card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin-right: 5px;\\n  cursor: pointer;\\n}\\n\\n.card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child {\\n  margin-right: 0;\\n}\\n\\n\\n\\n.highlight[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n}\\n#add-task[_ngcontent-%COMP%]{\\n    float: right;\\n    height: 50px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7SUFDM0IsYUFBYTtFQUNmOztFQUVBO0lBQ0UsWUFBWTtFQUNkO0VBQ0E7SUFDRSxZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsb0NBQW9DO0lBQ3BDLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixZQUFZO0VBQ2Q7Q0FDRDtFQUNDLGFBQWE7RUFDYixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFNBQVM7QUFDWDs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWiwwQ0FBMEM7RUFDMUMsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHlCQUF5QixFQUFFLGlCQUFpQjtFQUM1QyxjQUFjLEVBQUUsa0JBQWtCO0FBQ3BDOztBQUVBO0VBQ0UseUJBQXlCLEVBQUUsZ0JBQWdCO0VBQzNDLGNBQWMsRUFBRSxpQkFBaUI7QUFDbkM7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBLDhDQUE4QztBQUM5QztFQUNFLHdCQUF3QjtBQUMxQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbGNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmMWYxZTU7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gIH1cclxuICBcclxuICAuc2VhcmNoe1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gIH1cclxuICAuc2VhcmNoIGlucHV0e1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgLyogbWFyZ2luLWxlZnQ6IDIwcHg7ICovXHJcbiAgICB3aWR0aDogOTAwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjI1LCAyMjEsIDIyMSk7XHJcbiAgICAvKiBtYXJnaW4tdG9wOiAyMHB4OyAqL1xyXG4gIH1cclxuICAuc2VhcmNoIHNlbGVjdHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICB9XHJcbiAuY2FyZC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgZ2FwOiAyMHB4O1xyXG59XHJcblxyXG4uY2FyZCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICB3aWR0aDogMzAwcHg7XHJcbiAgYm94LXNoYWRvdzogMHB4IDJweCA1cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuXHJcbi5jYXJkLnBlbmRpbmcge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkNDODA7IC8qIExpZ2h0IE9yYW5nZSAqL1xyXG4gIGNvbG9yOiAjRTY1MTAwOyAvKiBEYXJrZXIgT3JhbmdlICovXHJcbn1cclxuXHJcbi5jYXJkLmNvbXBsZXRlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0M4RTZDOTsgLyogTGlnaHQgR3JlZW4gKi9cclxuICBjb2xvcjogIzJFN0QzMjsgLyogRGFya2VyIEdyZWVuICovXHJcbn1cclxuXHJcbi5jYXJkLWhlYWRlciB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5jYXJkLWNvbnRlbnQge1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5jYXJkLWFjdGlvbnMgYnV0dG9uIHtcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5jYXJkLWFjdGlvbnMgYnV0dG9uOmxhc3QtY2hpbGQge1xyXG4gIG1hcmdpbi1yaWdodDogMDtcclxufVxyXG5cclxuLyogQWRkIHN0eWxlcyBmb3IgaGlnaGxpZ2h0ZWQgc2VhcmNoIHJlc3VsdHMgKi9cclxuLmhpZ2hsaWdodCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xyXG59XHJcbiNhZGQtdGFza3tcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGhlaWdodDogNTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TaskboardComponent_div_12_Template_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","newTask","Title","ɵɵelementEnd","TaskboardComponent_div_12_Template_textarea_ngModelChange_2_listener","ctx_r4","Description","TaskboardComponent_div_12_Template_input_ngModelChange_3_listener","ctx_r5","DueDate","TaskboardComponent_div_12_Template_select_ngModelChange_4_listener","ctx_r6","Priority","ɵɵtext","TaskboardComponent_div_12_Template_button_click_9_listener","ctx_r7","addTask","ɵɵadvance","ɵɵproperty","ctx_r0","ɵɵelement","ctx_r9","highlightSearch","task_r8","ɵɵsanitizeHtml","TaskboardComponent_div_14_ng_template_3_Template_input_ngModelChange_0_listener","_r27","$implicit","updatedTitle","ctx_r12","TaskboardComponent_div_14_ng_template_7_Template_input_ngModelChange_0_listener","_r32","updatedDescription","ɵɵtextInterpolate1","TaskboardComponent_div_14_ng_template_10_Template_input_ngModelChange_0_listener","_r37","updatedDueDate","TaskboardComponent_div_14_ng_template_13_Template_select_ngModelChange_0_listener","_r42","updatedPriority","TaskboardComponent_div_14_button_16_Template_button_click_0_listener","_r46","ctx_r44","toggleEditMode","TaskboardComponent_div_14_button_17_Template_button_click_0_listener","_r49","ctx_r47","saveTask","TaskboardComponent_div_14_button_18_Template_button_click_0_listener","_r52","ctx_r50","ɵɵtemplate","TaskboardComponent_div_14_div_2_Template","TaskboardComponent_div_14_ng_template_3_Template","ɵɵtemplateRefExtractor","TaskboardComponent_div_14_div_6_Template","TaskboardComponent_div_14_ng_template_7_Template","TaskboardComponent_div_14_div_9_Template","TaskboardComponent_div_14_ng_template_10_Template","TaskboardComponent_div_14_div_12_Template","TaskboardComponent_div_14_ng_template_13_Template","TaskboardComponent_div_14_button_16_Template","TaskboardComponent_div_14_button_17_Template","TaskboardComponent_div_14_button_18_Template","TaskboardComponent_div_14_Template_button_click_19_listener","restoredCtx","_r54","ctx_r53","deleteTask","_id","editMode","_r10","_r13","_r16","_r19","TaskboardComponent","constructor","dataService","showAddForm","searchKeyword","filteredTasks","selectedPriority","ngOnInit","getTask","getTaskData","subscribe","res","data","task","toggleAddForm","console","log","error","updateTask","taskId","confirm","onSearchChange","filter","keywordMatch","toLowerCase","includes","priorityMatch","text","searchRegExp","RegExp","replace","match","ɵɵdirectiveInject","i1","TaskserviceService","selectors","decls","vars","consts","template","TaskboardComponent_Template","rf","ctx","TaskboardComponent_Template_input_ngModelChange_2_listener","TaskboardComponent_Template_input_input_2_listener","TaskboardComponent_Template_select_ngModelChange_3_listener","TaskboardComponent_Template_select_change_3_listener","TaskboardComponent_Template_button_click_10_listener","TaskboardComponent_div_12_Template","TaskboardComponent_div_14_Template"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.ts","F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.css']\n})\nexport class TaskboardComponent implements OnInit {\n  data: any;\n  newTask: any = {}; // New task data object\n  showAddForm: boolean = false; // Flag to toggle add task form\n  searchKeyword: string = ''; // Add this line\n  filteredTasks: any[] = [];\n  selectedPriority: string = 'all';\n\n  constructor(private dataService: TaskserviceService) {}\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  getTask() {\n    this.dataService.getTaskData().subscribe((res) => {\n      this.data = res;\n      this.filteredTasks = this.data; // Initialize filteredTasks with all tasks initially\n    });\n  }\n\n  toggleEditMode(task: any) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n\n  toggleAddForm() {\n    this.showAddForm = !this.showAddForm;\n  }\n\n  addTask() {\n    this.dataService.addTask(this.newTask).subscribe(\n      () => {\n        console.log('Task added successfully');\n        this.getTask();\n        this.newTask = {}; // Clear new task data\n        this.showAddForm = false; // Hide add task form\n      },\n      (error) => {\n        console.error('Error adding task:', error);\n      }\n    );\n  }\n\n  saveTask(task: any) {\n    // Call the service to update the task data\n    this.dataService.updateTask(task._id, {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    }).subscribe(\n      () => {\n        console.log('Task updated successfully');\n        task.Title = task.updatedTitle;\n        task.Description = task.updatedDescription;\n        task.DueDate = task.updatedDueDate;\n        task.Priority = task.updatedPriority;\n        task.editMode = false;\n      },\n      (error) => {\n        console.error('Error updating task:', error);\n      }\n    );\n  }\n\n  deleteTask(taskId: string) {\n    if (confirm('Are you sure you want to delete this task?')) {\n      this.dataService.deleteTask(taskId).subscribe(\n        () => {\n          console.log('Task deleted successfully');\n          this.getTask();\n        },\n        (error) => {\n          console.error('Error deleting task:', error);\n        }\n      );\n    }\n  }\n  onSearchChange() {\n    if (this.searchKeyword || this.selectedPriority !== 'all') {\n      this.filteredTasks = this.data.filter((task: Task) => {\n        const keywordMatch =\n          !this.searchKeyword ||\n          task.Title.toLowerCase().includes(this.searchKeyword.toLowerCase()) ||\n          task.Description.toLowerCase().includes(this.searchKeyword.toLowerCase());\n\n        const priorityMatch =\n          this.selectedPriority === 'all' ||\n          task.Priority.toLowerCase() === this.selectedPriority.toLowerCase();\n\n        return keywordMatch && priorityMatch;\n      });\n    } else {\n      this.filteredTasks = this.data;\n    }\n  }\n\n  highlightSearch(text: string): string {\n    if (this.searchKeyword && text) {\n      const searchRegExp = new RegExp(this.searchKeyword, 'gi');\n      return text.replace(searchRegExp, match => `<span class=\"highlight\">${match}</span>`);\n    }\n    return text;\n  }\n  \n  \n}\n// task.interface.ts\n\nexport interface Task {\n  _id: string;\n  Title: string;\n  Description: string;\n  DueDate: string;\n  Priority: string;\n  // Add other properties as needed\n}\n","<div class=\"fullcontainer\">\n   <div class=\"search\">\n    <input type=\"text\" [(ngModel)]=\"searchKeyword\" placeholder=\"Search tasks...\" (input)=\"onSearchChange()\">\n    <select [(ngModel)]=\"selectedPriority\" (change)=\"onSearchChange()\">\n      <option value=\"all\">All Priorities</option>\n      <option value=\"pending\">Pending</option>\n      <option value=\"completed\">Completed</option>\n    </select>\n\n        <button (click)=\"toggleAddForm()\" class=\"btn btn-primary\" id=\"add-task\">Add Task</button>\n        </div>\n        <div class=\"add-task-form\" *ngIf=\"showAddForm\">\n            <input [(ngModel)]=\"newTask.Title\" placeholder=\"Title\">\n            <textarea [(ngModel)]=\"newTask.Description\" placeholder=\"Description\"></textarea>\n            <input [(ngModel)]=\"newTask.DueDate\" type=\"date\" placeholder=\"Due Date\">\n            <select [(ngModel)]=\"newTask.Priority\">\n              <option value=\"pending\">Pending</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n            <button (click)=\"addTask()\">Add</button>\n          </div>\n   \n  \n  \n  \n  \n  \n  <div class=\"card-container\">\n    <div class=\"card\" *ngFor=\"let task of filteredTasks\" [ngClass]=\"task.Priority\">\n      <div class=\"card-header\">\n        <div *ngIf=\"!task.editMode; else editModeTitle\" [innerHTML]=\"highlightSearch(task.Title)\"></div>\n        <ng-template #editModeTitle>\n          <input [(ngModel)]=\"task.updatedTitle\" placeholder=\"Title\">\n        </ng-template>\n      </div>\n      <div class=\"card-content\">\n        <div *ngIf=\"!task.editMode; else editModeDescription\" [innerHTML]=\"highlightSearch(task.Description)\"></div>\n        <ng-template #editModeDescription>\n          <input [(ngModel)]=\"task.updatedDescription\" placeholder=\"Description\">\n        </ng-template>\n        <div *ngIf=\"!task.editMode; else editModeDueDate\">\n          <p class=\"card-text\">Due Date: {{ task.DueDate }}</p>\n        </div>\n        <ng-template #editModeDueDate>\n          <input [(ngModel)]=\"task.updatedDueDate\" type=\"date\">\n        </ng-template>\n        <div *ngIf=\"!task.editMode; else editModePriority\">\n          <p class=\"card-text\">Priority: {{ task.Priority }}</p>\n        </div>\n        <ng-template #editModePriority>\n          <select [(ngModel)]=\"task.updatedPriority\">\n            <option value=\"pending\">Pending</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </ng-template>\n      </div>\n      <div class=\"card-footer\">\n        <button *ngIf=\"!task.editMode\" (click)=\"toggleEditMode(task)\">Edit</button>\n        <button *ngIf=\"task.editMode\" (click)=\"saveTask(task)\">Save</button>\n        <button *ngIf=\"task.editMode\" (click)=\"toggleEditMode(task)\">Cancel</button>\n        <button (click)=\"deleteTask(task._id)\">Delete</button>\n      </div>\n    </div>\n  </div>\n  \n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}