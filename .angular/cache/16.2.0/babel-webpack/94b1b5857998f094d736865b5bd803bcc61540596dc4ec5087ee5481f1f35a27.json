{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskserviceService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000';\n  }\n  registerUser(userData) {\n    return this.http.post(`${this.url}/register`, userData);\n  }\n  login(email, password) {\n    const loginData = {\n      email,\n      password\n    };\n    // Replace with your actual backend API endpoint\n    const apiUrl = 'http://your-backend-api-url/login';\n    return this.http.post(apiUrl, loginData);\n  }\n  getTaskData() {\n    return this.http.get(`${this.url}/tasks`);\n  }\n  addTask(task) {\n    return this.http.post(`${this.url}/tasks`, task);\n  }\n  updateTask(taskId, updatedTask) {\n    const url = `${this.url}/tasks/${taskId}`;\n    return this.http.put(url, updatedTask);\n  }\n  deleteTask(taskId) {\n    const url = `${this.url}/tasks/${taskId}`;\n    return this.http.delete(url);\n  }\n}\n_class = TaskserviceService;\n_class.ɵfac = function TaskserviceService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TaskserviceService","constructor","http","url","registerUser","userData","post","login","email","password","loginData","apiUrl","getTaskData","get","addTask","task","updateTask","taskId","updatedTask","put","deleteTask","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\services\\taskservice.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskserviceService {\n  private url = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) {}\n\n  registerUser(userData: any): Observable<any> {\n    return this.http.post(`${this.url}/register`, userData);\n  }\n\n  login(email: string, password: string): Observable<any> {\n    const loginData = { email, password };\n    // Replace with your actual backend API endpoint\n    const apiUrl = 'http://your-backend-api-url/login';\n    return this.http.post(apiUrl, loginData);\n  }\n  getTaskData(): Observable<any> {\n    return this.http.get(`${this.url}/tasks`);\n  }\n\n  addTask(task: any): Observable<any> {\n    return this.http.post(`${this.url}/tasks`, task);\n  }\n\n  updateTask(taskId: string, updatedTask: any): Observable<any> {\n    const url = `${this.url}/tasks/${taskId}`;\n    return this.http.put(url, updatedTask);\n  }\n\n  deleteTask(taskId: string): Observable<any> {\n    const url = `${this.url}/tasks/${taskId}`;\n    return this.http.delete(url);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAG,uBAAuB;EAEE;EAEvCC,YAAYA,CAACC,QAAa;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,GAAG,WAAW,EAAEE,QAAQ,CAAC;EACzD;EAEAE,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,SAAS,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IACrC;IACA,MAAME,MAAM,GAAG,mCAAmC;IAClD,OAAO,IAAI,CAACT,IAAI,CAACI,IAAI,CAACK,MAAM,EAAED,SAAS,CAAC;EAC1C;EACAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,GAAG,QAAQ,CAAC;EAC3C;EAEAW,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACb,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,GAAG,QAAQ,EAAEY,IAAI,CAAC;EAClD;EAEAC,UAAUA,CAACC,MAAc,EAAEC,WAAgB;IACzC,MAAMf,GAAG,GAAG,GAAG,IAAI,CAACA,GAAG,UAAUc,MAAM,EAAE;IACzC,OAAO,IAAI,CAACf,IAAI,CAACiB,GAAG,CAAChB,GAAG,EAAEe,WAAW,CAAC;EACxC;EAEAE,UAAUA,CAACH,MAAc;IACvB,MAAMd,GAAG,GAAG,GAAG,IAAI,CAACA,GAAG,UAAUc,MAAM,EAAE;IACzC,OAAO,IAAI,CAACf,IAAI,CAACmB,MAAM,CAAClB,GAAG,CAAC;EAC9B;;SA/BWH,kBAAkB;;mBAAlBA,MAAkB,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBzB,MAAkB;EAAA0B,OAAA,EAAlB1B,MAAkB,CAAA2B,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}