{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  login() {\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    this.authService.login(email, password).subscribe(response => {\n      if (response.success) {\n        alert('Login Successful');\n        this.router.navigate(['/dashboard']);\n      } else {\n        alert('Invalid credentials');\n      }\n    }, error => {\n      console.error('Error during login:', error);\n      alert('An error occurred during login');\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","router","authService","login","email","document","getElementById","value","password","subscribe","response","success","alert","navigate","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private router: Router,private authService:) {}\n  login() {\n    const email = (document.getElementById('email') as HTMLInputElement).value;\n    const password = (document.getElementById('password') as HTMLInputElement).value;\n\n    this.authService.login(email, password).subscribe(\n      (response: any) => {\n        if (response.success) {\n          alert('Login Successful');\n          this.router.navigate(['/dashboard']);\n        } else {\n          alert('Invalid credentials');\n        }\n      },\n      error => {\n        console.error('Error during login:', error);\n        alert('An error occurred during login');\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EACzBC,YAAoBC,MAAc,EAASC,WAAY;IAAnC,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,WAAW,GAAXA,WAAW;EAAI;EAC1DC,KAAKA,CAAA;IACH,MAAMC,KAAK,GAAIC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAsB,CAACC,KAAK;IAC1E,MAAMC,QAAQ,GAAIH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAsB,CAACC,KAAK;IAEhF,IAAI,CAACL,WAAW,CAACC,KAAK,CAACC,KAAK,EAAEI,QAAQ,CAAC,CAACC,SAAS,CAC9CC,QAAa,IAAI;MAChB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpBC,KAAK,CAAC,kBAAkB,CAAC;QACzB,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;OACrC,MAAM;QACLD,KAAK,CAAC,qBAAqB,CAAC;;IAEhC,CAAC,EACDE,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CF,KAAK,CAAC,gCAAgC,CAAC;IACzC,CAAC,CACF;EACH;CACD;AArBYb,cAAc,GAAAiB,UAAA,EAL1BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWpB,cAAc,CAqB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}