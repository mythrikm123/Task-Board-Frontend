{"ast":null,"code":"var _class, _class2, _class3, _class4, _class5;\nimport * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction _class4_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class4_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function _class4_td_7_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.changeMinutes(ctx_r18.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r1.canIncrementMinutes || !ctx_r1.isEditable);\n  }\n}\nfunction _class4_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class4_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function _class4_td_9_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.changeSeconds(ctx_r20.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r3.canIncrementSeconds || !ctx_r3.isEditable);\n  }\n}\nfunction _class4_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class4_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\nfunction _class4_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class4_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function _class4_td_16_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      ctx_r22.prevDef($event);\n      return i0.ɵɵresetView(ctx_r22.changeMinutes(ctx_r22.minuteStep * ctx_r22.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function _class4_td_16_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.changeMinutes(ctx_r24.minuteStep, \"key\"));\n    })(\"keydown.ArrowDown\", function _class4_td_16_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.changeMinutes(-ctx_r25.minuteStep, \"key\"));\n    })(\"change\", function _class4_td_16_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.updateMinutes($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r7.invalidMinutes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r7.invalidMinutes);\n    i0.ɵɵproperty(\"placeholder\", ctx_r7.minutesPlaceholder)(\"readonly\", ctx_r7.readonlyInput)(\"disabled\", ctx_r7.disabled)(\"value\", ctx_r7.minutes);\n    i0.ɵɵattribute(\"aria-label\", ctx_r7.labelMinutes);\n  }\n}\nfunction _class4_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class4_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function _class4_td_18_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      ctx_r27.prevDef($event);\n      return i0.ɵɵresetView(ctx_r27.changeSeconds(ctx_r27.secondsStep * ctx_r27.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function _class4_td_18_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.changeSeconds(ctx_r29.secondsStep, \"key\"));\n    })(\"keydown.ArrowDown\", function _class4_td_18_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.changeSeconds(-ctx_r30.secondsStep, \"key\"));\n    })(\"change\", function _class4_td_18_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.updateSeconds($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r9.invalidSeconds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r9.invalidSeconds);\n    i0.ɵɵproperty(\"placeholder\", ctx_r9.secondsPlaceholder)(\"readonly\", ctx_r9.readonlyInput)(\"disabled\", ctx_r9.disabled)(\"value\", ctx_r9.seconds);\n    i0.ɵɵattribute(\"aria-label\", ctx_r9.labelSeconds);\n  }\n}\nfunction _class4_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class4_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function _class4_td_20_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.toggleMeridian());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵproperty(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r11.meridian, \" \");\n  }\n}\nfunction _class4_td_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class4_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function _class4_td_26_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.changeMinutes(-ctx_r34.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r13.canDecrementMinutes || !ctx_r13.isEditable);\n  }\n}\nfunction _class4_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class4_td_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function _class4_td_28_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.changeSeconds(-ctx_r36.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r15.canDecrementSeconds || !ctx_r15.isEditable);\n  }\n}\nfunction _class4_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class4_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\nclass TimepickerActions {\n  writeValue(value) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n  changeHours(event) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n  changeMinutes(event) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n  changeSeconds(event) {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n  setTime(value) {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n  updateControls(value) {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\n}\n_class = TimepickerActions;\n_class.WRITE_VALUE = '[timepicker] write value from ng model';\n_class.CHANGE_HOURS = '[timepicker] change hours';\n_class.CHANGE_MINUTES = '[timepicker] change minutes';\n_class.CHANGE_SECONDS = '[timepicker] change seconds';\n_class.SET_TIME_UNIT = '[timepicker] set time unit';\n_class.UPDATE_CONTROLS = '[timepicker] update controls';\n_class.ɵfac = function _class_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'platform'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerActions, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], null, null);\n})();\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\nfunction isValidDate(value) {\n  if (!value) {\n    return false;\n  }\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n  return true;\n}\nfunction isValidLimit(controls, newDate) {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n  return true;\n}\nfunction toNumber(value) {\n  if (typeof value === 'undefined') {\n    return NaN;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return parseInt(value, dex);\n}\nfunction isNumber(value) {\n  return !isNaN(toNumber(value));\n}\nfunction parseHours(value, isPM = false) {\n  const hour = toNumber(value);\n  if (isNaN(hour) || hour < 0 || hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n    return NaN;\n  }\n  return hour;\n}\nfunction parseMinutes(value) {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n  return minute;\n}\nfunction parseSeconds(value) {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n  return seconds;\n}\nfunction parseTime(value) {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n  return value;\n}\nfunction changeTime(value, diff) {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n  if (!diff) {\n    return value;\n  }\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n  if (diff.hour) {\n    hour = hour + toNumber(diff.hour);\n  }\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n  return createDate(value, hour, minutes, seconds);\n}\nfunction setTime(value, opts) {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n    return value;\n  }\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n  return createDate(value, hour, minute, seconds);\n}\nfunction createDate(value, hours, minutes, seconds) {\n  const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n  // #3139 ensure date part remains unchanged\n  newValue.setFullYear(value.getFullYear());\n  newValue.setMonth(value.getMonth());\n  newValue.setDate(value.getDate());\n  return newValue;\n}\nfunction padNumber(value) {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n  return `0${_value}`;\n}\nfunction isHourInputValid(hours, isPM) {\n  return !isNaN(parseHours(hours, isPM));\n}\nfunction isMinuteInputValid(minutes) {\n  return !isNaN(parseMinutes(minutes));\n}\nfunction isSecondInputValid(seconds) {\n  return !isNaN(parseSeconds(seconds));\n}\nfunction isInputLimitValid(diff, max, min) {\n  const newDate = setTime(new Date(), diff);\n  if (!newDate) {\n    return false;\n  }\n  if (max && newDate > max) {\n    return false;\n  }\n  if (min && newDate < min) {\n    return false;\n  }\n  return true;\n}\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n  return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n  return isHourInputValid(hours, isPM) && isMinuteInputValid(minutes) && isSecondInputValid(seconds);\n}\nfunction canChangeValue(state, event) {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction canChangeHours(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n  return true;\n}\nfunction canChangeMinutes(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n  return true;\n}\nfunction canChangeSeconds(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n  return true;\n}\nfunction getControlsValue(state) {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\nfunction timepickerControls(value, state) {\n  const hoursPerDay = 24;\n  const hoursPerDayHalf = 12;\n  const {\n    min,\n    max,\n    hourStep,\n    minuteStep,\n    secondsStep,\n    showSeconds\n  } = state;\n  const res = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  };\n  if (!value) {\n    return res;\n  }\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, {\n      hour: hourStep\n    });\n    res.canIncrementHours = max > _newHour && value.getHours() + hourStep < hoursPerDay;\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: minuteStep\n      });\n      res.canIncrementMinutes = showSeconds ? max > _newMinutes : max >= _newMinutes;\n    }\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: secondsStep\n      });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: hoursPerDayHalf\n      }) < max;\n    }\n  }\n  if (min) {\n    const _newHour = changeTime(value, {\n      hour: -hourStep\n    });\n    res.canDecrementHours = min < _newHour;\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: -minuteStep\n      });\n      res.canDecrementMinutes = showSeconds ? min < _newMinutes : min <= _newMinutes;\n    }\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: -secondsStep\n      });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: -hoursPerDayHalf\n      }) > min;\n    }\n  }\n  return res;\n}\n\n/** Provides default configuration values for timepicker */\nclass TimepickerConfig {\n  constructor() {\n    /** hours change step */\n    this.hourStep = 1;\n    /** minutes change step */\n    this.minuteStep = 5;\n    /** seconds changes step */\n    this.secondsStep = 10;\n    /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n    this.showMeridian = true;\n    /** meridian labels based on locale */\n    this.meridians = ['AM', 'PM'];\n    /** if true hours and minutes fields will be readonly */\n    this.readonlyInput = false;\n    /** if true hours and minutes fields will be disabled */\n    this.disabled = false;\n    /** if true emptyTime is not marked as invalid */\n    this.allowEmptyTime = false;\n    /** if true scroll inside hours and minutes inputs will change time */\n    this.mousewheel = true;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n    this.arrowkeys = true;\n    /** if true spinner arrows above and below the inputs will be shown */\n    this.showSpinners = true;\n    /** show seconds in timepicker */\n    this.showSeconds = false;\n    /** show minutes in timepicker */\n    this.showMinutes = true;\n    /** placeholder for hours field in timepicker */\n    this.hoursPlaceholder = 'HH';\n    /** placeholder for minutes field in timepicker */\n    this.minutesPlaceholder = 'MM';\n    /** placeholder for seconds field in timepicker */\n    this.secondsPlaceholder = 'SS';\n    /** hours aria label */\n    this.ariaLabelHours = 'hours';\n    /** minutes aria label */\n    this.ariaLabelMinutes = 'minutes';\n    /** seconds aria label */\n    this.ariaLabelSeconds = 'seconds';\n  }\n}\n_class2 = TimepickerConfig;\n_class2.ɵfac = function _class2_Factory(t) {\n  return new (t || _class2)();\n};\n_class2.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: _class2,\n  factory: _class2.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst initialState = {\n  value: void 0,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  }\n};\nfunction timepickerReducer(state = initialState, action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE:\n      {\n        return Object.assign({}, state, {\n          value: action.payload\n        });\n      }\n    case TimepickerActions.CHANGE_HOURS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeHours(action.payload, state.controls)) {\n          return state;\n        }\n        const _newTime = changeTime(state.value, {\n          hour: action.payload.step\n        });\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.CHANGE_MINUTES:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeMinutes(action.payload, state.controls)) {\n          return state;\n        }\n        const _newTime = changeTime(state.value, {\n          minute: action.payload.step\n        });\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.CHANGE_SECONDS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeSeconds(action.payload, state.controls)) {\n          return state;\n        }\n        const _newTime = changeTime(state.value, {\n          seconds: action.payload.step\n        });\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.SET_TIME_UNIT:\n      {\n        if (!canChangeValue(state.config)) {\n          return state;\n        }\n        const _newTime = setTime(state.value, action.payload);\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.UPDATE_CONTROLS:\n      {\n        const _newControlsState = timepickerControls(state.value, action.payload);\n        const _newState = {\n          value: state.value,\n          config: action.payload,\n          controls: _newControlsState\n        };\n        if (state.config.showMeridian !== _newState.config.showMeridian) {\n          if (state.value) {\n            _newState.value = new Date(state.value);\n          }\n        }\n        return Object.assign({}, state, _newState);\n      }\n    default:\n      return state;\n  }\n}\nclass TimepickerStore extends MiniStore {\n  constructor() {\n    const _dispatcher = new BehaviorSubject({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n    super(_dispatcher, timepickerReducer, state);\n  }\n}\n_class3 = TimepickerStore;\n_class3.ɵfac = function _class3_Factory(t) {\n  return new (t || _class3)();\n};\n_class3.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: _class3,\n  factory: _class3.ɵfac,\n  providedIn: 'platform'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerStore, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\nclass TimepickerComponent {\n  constructor(_config, _cd, _store, _timepickerActions) {\n    this._cd = _cd;\n    this._store = _store;\n    this._timepickerActions = _timepickerActions;\n    /** hours change step */\n    this.hourStep = 1;\n    /** minutes change step */\n    this.minuteStep = 5;\n    /** seconds change step */\n    this.secondsStep = 10;\n    /** if true hours and minutes fields will be readonly */\n    this.readonlyInput = false;\n    /** if true hours and minutes fields will be disabled */\n    this.disabled = false;\n    /** if true scroll inside hours and minutes inputs will change time */\n    this.mousewheel = true;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n    this.arrowkeys = true;\n    /** if true spinner arrows above and below the inputs will be shown */\n    this.showSpinners = true;\n    /** if true meridian button will be shown */\n    this.showMeridian = true;\n    /** show minutes in timepicker */\n    this.showMinutes = true;\n    /** show seconds in timepicker */\n    this.showSeconds = false;\n    /** meridian labels based on locale */\n    this.meridians = ['AM', 'PM'];\n    /** placeholder for hours field in timepicker */\n    this.hoursPlaceholder = 'HH';\n    /** placeholder for minutes field in timepicker */\n    this.minutesPlaceholder = 'MM';\n    /** placeholder for seconds field in timepicker */\n    this.secondsPlaceholder = 'SS';\n    /** emits true if value is a valid date */\n    this.isValid = new EventEmitter();\n    /** emits value of meridian*/\n    this.meridianChange = new EventEmitter();\n    // ui variables\n    this.hours = '';\n    this.minutes = '';\n    this.seconds = '';\n    this.meridian = '';\n    // min\\max validation for input fields\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n    // aria-label variables\n    this.labelHours = 'hours';\n    this.labelMinutes = 'minutes';\n    this.labelSeconds = 'seconds';\n    // time picker controls state\n    this.canIncrementHours = true;\n    this.canIncrementMinutes = true;\n    this.canIncrementSeconds = true;\n    this.canDecrementHours = true;\n    this.canDecrementMinutes = true;\n    this.canDecrementSeconds = true;\n    this.canToggleMeridian = true;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.onChange = Function.prototype;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.onTouched = Function.prototype;\n    this.config = _config;\n    Object.assign(this, this.config);\n    this.timepickerSub = _store.select(state => state.value).subscribe(value => {\n      // update UI values if date changed\n      this._renderTime(value);\n      this.onChange(value);\n      this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    });\n    _store.select(state => state.controls).subscribe(controlsState => {\n      const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n      const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n      this.isValid.emit(isValid);\n      Object.assign(this, controlsState);\n      _cd.markForCheck();\n    });\n  }\n  /** @deprecated - please use `isEditable` instead */\n  get isSpinnersVisible() {\n    return this.showSpinners && !this.readonlyInput;\n  }\n  get isEditable() {\n    return !(this.readonlyInput || this.disabled);\n  }\n  resetValidation() {\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n  }\n  isPM() {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n  prevDef($event) {\n    $event.preventDefault();\n  }\n  wheelSign($event) {\n    return Math.sign($event.deltaY || 0) * -1;\n  }\n  ngOnChanges() {\n    this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n  }\n  changeHours(step, source = '') {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeHours({\n      step,\n      source\n    }));\n  }\n  changeMinutes(step, source = '') {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeMinutes({\n      step,\n      source\n    }));\n  }\n  changeSeconds(step, source = '') {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeSeconds({\n      step,\n      source\n    }));\n  }\n  updateHours(target) {\n    this.resetValidation();\n    this.hours = target.value;\n    const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.invalidHours = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._updateTime();\n  }\n  updateMinutes(target) {\n    this.resetValidation();\n    this.minutes = target.value;\n    const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.invalidMinutes = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._updateTime();\n  }\n  updateSeconds(target) {\n    this.resetValidation();\n    this.seconds = target.value;\n    const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.invalidSeconds = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._updateTime();\n  }\n  isValidLimit() {\n    return isInputLimitValid({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }, this.max, this.min);\n  }\n  isOneOfDatesIsEmpty() {\n    return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n  }\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n    const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._store.dispatch(this._timepickerActions.setTime({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }));\n  }\n  toggleMeridian() {\n    if (!this.showMeridian || !this.isEditable) {\n      return;\n    }\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(this._timepickerActions.changeHours({\n      step: _hoursPerDayHalf,\n      source: ''\n    }));\n  }\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj) {\n    if (isValidDate(obj)) {\n      this.resetValidation();\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue());\n    }\n  }\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * This function is called when the control status changes to or from \"disabled\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._cd.markForCheck();\n  }\n  ngOnDestroy() {\n    this.timepickerSub?.unsubscribe();\n  }\n  _renderTime(value) {\n    if (!value || !isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n      this.meridianChange.emit(this.meridian);\n      return;\n    }\n    const _value = parseTime(value);\n    if (!_value) {\n      return;\n    }\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      this.meridianChange.emit(this.meridian);\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\n}\n_class4 = TimepickerComponent;\n_class4.ɵfac = function _class4_Factory(t) {\n  return new (t || _class4)(i0.ɵɵdirectiveInject(TimepickerConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TimepickerStore), i0.ɵɵdirectiveInject(TimepickerActions));\n};\n_class4.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class4,\n  selectors: [[\"timepicker\"]],\n  inputs: {\n    hourStep: \"hourStep\",\n    minuteStep: \"minuteStep\",\n    secondsStep: \"secondsStep\",\n    readonlyInput: \"readonlyInput\",\n    disabled: \"disabled\",\n    mousewheel: \"mousewheel\",\n    arrowkeys: \"arrowkeys\",\n    showSpinners: \"showSpinners\",\n    showMeridian: \"showMeridian\",\n    showMinutes: \"showMinutes\",\n    showSeconds: \"showSeconds\",\n    meridians: \"meridians\",\n    min: \"min\",\n    max: \"max\",\n    hoursPlaceholder: \"hoursPlaceholder\",\n    minutesPlaceholder: \"minutesPlaceholder\",\n    secondsPlaceholder: \"secondsPlaceholder\"\n  },\n  outputs: {\n    isValid: \"isValid\",\n    meridianChange: \"meridianChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore]), i0.ɵɵNgOnChangesFeature],\n  decls: 31,\n  vars: 33,\n  consts: [[1, \"text-center\", 3, \"hidden\"], [\"href\", \"javascript:void(0);\", 1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"bs-chevron\", \"bs-chevron-up\"], [4, \"ngIf\"], [1, \"form-group\", \"mb-3\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"form-control\", \"text-center\", \"bs-timepicker-field\", 3, \"placeholder\", \"readonly\", \"disabled\", \"value\", \"wheel\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"change\"], [\"class\", \"form-group mb-3\", 3, \"has-error\", 4, \"ngIf\"], [1, \"bs-chevron\", \"bs-chevron-down\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"text-center\", 3, \"disabled\", \"click\"]],\n  template: function _class4_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"tbody\")(2, \"tr\", 0)(3, \"td\")(4, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function _class4_Template_a_click_4_listener() {\n        return ctx.changeHours(ctx.hourStep);\n      });\n      i0.ɵɵelement(5, \"span\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, _class4_td_6_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(7, _class4_td_7_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(8, _class4_td_8_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(9, _class4_td_9_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(10, _class4_td_10_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(11, _class4_td_11_Template, 1, 0, \"td\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"tr\")(13, \"td\", 4)(14, \"input\", 5);\n      i0.ɵɵlistener(\"wheel\", function _class4_Template_input_wheel_14_listener($event) {\n        ctx.prevDef($event);\n        return ctx.changeHours(ctx.hourStep * ctx.wheelSign($event), \"wheel\");\n      })(\"keydown.ArrowUp\", function _class4_Template_input_keydown_ArrowUp_14_listener() {\n        return ctx.changeHours(ctx.hourStep, \"key\");\n      })(\"keydown.ArrowDown\", function _class4_Template_input_keydown_ArrowDown_14_listener() {\n        return ctx.changeHours(-ctx.hourStep, \"key\");\n      })(\"change\", function _class4_Template_input_change_14_listener($event) {\n        return ctx.updateHours($event.target);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, _class4_td_15_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(16, _class4_td_16_Template, 2, 9, \"td\", 6);\n      i0.ɵɵtemplate(17, _class4_td_17_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(18, _class4_td_18_Template, 2, 9, \"td\", 6);\n      i0.ɵɵtemplate(19, _class4_td_19_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(20, _class4_td_20_Template, 3, 4, \"td\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"tr\", 0)(22, \"td\")(23, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function _class4_Template_a_click_23_listener() {\n        return ctx.changeHours(-ctx.hourStep);\n      });\n      i0.ɵɵelement(24, \"span\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(25, _class4_td_25_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(26, _class4_td_26_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(27, _class4_td_27_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(28, _class4_td_28_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(29, _class4_td_29_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(30, _class4_td_30_Template, 1, 0, \"td\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"disabled\", !ctx.canIncrementHours || !ctx.isEditable);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"has-error\", ctx.invalidHours);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.invalidHours);\n      i0.ɵɵproperty(\"placeholder\", ctx.hoursPlaceholder)(\"readonly\", ctx.readonlyInput)(\"disabled\", ctx.disabled)(\"value\", ctx.hours);\n      i0.ɵɵattribute(\"aria-label\", ctx.labelHours);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"disabled\", !ctx.canDecrementHours || !ctx.isEditable);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n    }\n  },\n  dependencies: [i4.NgIf],\n  styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'timepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n      encapsulation: ViewEncapsulation.None,\n      template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\",\n      styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: TimepickerConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: TimepickerStore\n    }, {\n      type: TimepickerActions\n    }];\n  }, {\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondsStep: [{\n      type: Input\n    }],\n    readonlyInput: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    mousewheel: [{\n      type: Input\n    }],\n    arrowkeys: [{\n      type: Input\n    }],\n    showSpinners: [{\n      type: Input\n    }],\n    showMeridian: [{\n      type: Input\n    }],\n    showMinutes: [{\n      type: Input\n    }],\n    showSeconds: [{\n      type: Input\n    }],\n    meridians: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    hoursPlaceholder: [{\n      type: Input\n    }],\n    minutesPlaceholder: [{\n      type: Input\n    }],\n    secondsPlaceholder: [{\n      type: Input\n    }],\n    isValid: [{\n      type: Output\n    }],\n    meridianChange: [{\n      type: Output\n    }]\n  });\n})();\nclass TimepickerModule {\n  static forRoot() {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerActions, TimepickerStore]\n    };\n  }\n}\n_class5 = TimepickerModule;\n_class5.ɵfac = function _class5_Factory(t) {\n  return new (t || _class5)();\n};\n_class5.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _class5\n});\n_class5.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [TimepickerStore],\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TimepickerComponent],\n      exports: [TimepickerComponent],\n      providers: [TimepickerStore]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };","map":{"version":3,"names":["i0","Injectable","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","NG_VALUE_ACCESSOR","BehaviorSubject","MiniStore","MiniState","i4","CommonModule","_class4_td_6_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","_class4_td_7_Template","_r19","ɵɵgetCurrentView","ɵɵlistener","_class4_td_7_Template_a_click_1_listener","ɵɵrestoreView","ctx_r18","ɵɵnextContext","ɵɵresetView","changeMinutes","minuteStep","ɵɵelement","ctx_r1","ɵɵadvance","ɵɵclassProp","canIncrementMinutes","isEditable","_class4_td_8_Template","_class4_td_9_Template","_r21","_class4_td_9_Template_a_click_1_listener","ctx_r20","changeSeconds","secondsStep","ctx_r3","canIncrementSeconds","_class4_td_10_Template","_class4_td_11_Template","_class4_td_15_Template","_class4_td_16_Template","_r23","_class4_td_16_Template_input_wheel_1_listener","$event","ctx_r22","prevDef","wheelSign","_class4_td_16_Template_input_keydown_ArrowUp_1_listener","ctx_r24","_class4_td_16_Template_input_keydown_ArrowDown_1_listener","ctx_r25","_class4_td_16_Template_input_change_1_listener","ctx_r26","updateMinutes","target","ctx_r7","invalidMinutes","ɵɵproperty","minutesPlaceholder","readonlyInput","disabled","minutes","ɵɵattribute","labelMinutes","_class4_td_17_Template","_class4_td_18_Template","_r28","_class4_td_18_Template_input_wheel_1_listener","ctx_r27","_class4_td_18_Template_input_keydown_ArrowUp_1_listener","ctx_r29","_class4_td_18_Template_input_keydown_ArrowDown_1_listener","ctx_r30","_class4_td_18_Template_input_change_1_listener","ctx_r31","updateSeconds","ctx_r9","invalidSeconds","secondsPlaceholder","seconds","labelSeconds","_class4_td_19_Template","_class4_td_20_Template","_r33","_class4_td_20_Template_button_click_1_listener","ctx_r32","toggleMeridian","ctx_r11","canToggleMeridian","ɵɵtextInterpolate1","meridian","_class4_td_25_Template","_class4_td_26_Template","_r35","_class4_td_26_Template_a_click_1_listener","ctx_r34","ctx_r13","canDecrementMinutes","_class4_td_27_Template","_class4_td_28_Template","_r37","_class4_td_28_Template_a_click_1_listener","ctx_r36","ctx_r15","canDecrementSeconds","_class4_td_29_Template","_class4_td_30_Template","TimepickerActions","writeValue","value","type","WRITE_VALUE","payload","changeHours","event","CHANGE_HOURS","CHANGE_MINUTES","CHANGE_SECONDS","setTime","SET_TIME_UNIT","updateControls","UPDATE_CONTROLS","_class","ɵfac","_class_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","dex","hoursPerDay","hoursPerDayHalf","minutesPerHour","secondsPerMinute","isValidDate","Date","isNaN","getHours","isValidLimit","controls","newDate","min","max","toNumber","NaN","parseInt","isNumber","parseHours","isPM","hour","parseMinutes","minute","parseSeconds","parseTime","changeTime","diff","createDate","getMinutes","getSeconds","opts","hours","newValue","getFullYear","getMonth","getDate","getMilliseconds","setFullYear","setMonth","setDate","padNumber","_value","toString","length","isHourInputValid","isMinuteInputValid","isSecondInputValid","isInputLimitValid","isOneOfDatesEmpty","isInputValid","canChangeValue","state","source","mousewheel","arrowkeys","canChangeHours","step","canIncrementHours","canDecrementHours","canChangeMinutes","canChangeSeconds","getControlsValue","hourStep","showSpinners","showMeridian","showSeconds","meridians","timepickerControls","res","_newHour","_newMinutes","_newSeconds","TimepickerConfig","constructor","allowEmptyTime","showMinutes","hoursPlaceholder","ariaLabelHours","ariaLabelMinutes","ariaLabelSeconds","_class2","_class2_Factory","initialState","config","timepickerReducer","action","Object","assign","_newTime","_newControlsState","_newState","TimepickerStore","_dispatcher","_class3","_class3_Factory","TIMEPICKER_CONTROL_VALUE_ACCESSOR","provide","useExisting","TimepickerComponent","multi","_config","_cd","_store","_timepickerActions","isValid","meridianChange","invalidHours","labelHours","onChange","Function","prototype","onTouched","timepickerSub","select","subscribe","_renderTime","dispatch","controlsState","isTimepickerInputValid","isOneOfDatesIsEmpty","emit","markForCheck","isSpinnersVisible","resetValidation","preventDefault","Math","sign","deltaY","ngOnChanges","updateHours","_updateTime","_seconds","_minutes","_hoursPerDayHalf","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ngOnDestroy","unsubscribe","_hours","getUTCSeconds","_class4","_class4_Factory","ɵɵdirectiveInject","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","features","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","decls","vars","consts","template","_class4_Template","_class4_Template_a_click_4_listener","ɵɵtemplate","_class4_Template_input_wheel_14_listener","_class4_Template_input_keydown_ArrowUp_14_listener","_class4_Template_input_keydown_ArrowDown_14_listener","_class4_Template_input_change_14_listener","_class4_Template_a_click_23_listener","dependencies","NgIf","styles","encapsulation","changeDetection","selector","OnPush","providers","None","TimepickerModule","forRoot","ngModule","_class5","_class5_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["F:/Angular/Projects/Intern-task/frontend-taskcreation/node_modules/ngx-bootstrap/timepicker/fesm2022/ngx-bootstrap-timepicker.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass TimepickerActions {\n    static { this.WRITE_VALUE = '[timepicker] write value from ng model'; }\n    static { this.CHANGE_HOURS = '[timepicker] change hours'; }\n    static { this.CHANGE_MINUTES = '[timepicker] change minutes'; }\n    static { this.CHANGE_SECONDS = '[timepicker] change seconds'; }\n    static { this.SET_TIME_UNIT = '[timepicker] set time unit'; }\n    static { this.UPDATE_CONTROLS = '[timepicker] update controls'; }\n    writeValue(value) {\n        return {\n            type: TimepickerActions.WRITE_VALUE,\n            payload: value\n        };\n    }\n    changeHours(event) {\n        return {\n            type: TimepickerActions.CHANGE_HOURS,\n            payload: event\n        };\n    }\n    changeMinutes(event) {\n        return {\n            type: TimepickerActions.CHANGE_MINUTES,\n            payload: event\n        };\n    }\n    changeSeconds(event) {\n        return {\n            type: TimepickerActions.CHANGE_SECONDS,\n            payload: event\n        };\n    }\n    setTime(value) {\n        return {\n            type: TimepickerActions.SET_TIME_UNIT,\n            payload: value\n        };\n    }\n    updateControls(value) {\n        return {\n            type: TimepickerActions.UPDATE_CONTROLS,\n            payload: value\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerActions, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerActions, providedIn: 'platform' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerActions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }] });\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\nfunction isValidDate(value) {\n    if (!value) {\n        return false;\n    }\n    if (value instanceof Date && isNaN(value.getHours())) {\n        return false;\n    }\n    if (typeof value === 'string') {\n        return isValidDate(new Date(value));\n    }\n    return true;\n}\nfunction isValidLimit(controls, newDate) {\n    if (controls.min && newDate < controls.min) {\n        return false;\n    }\n    if (controls.max && newDate > controls.max) {\n        return false;\n    }\n    return true;\n}\nfunction toNumber(value) {\n    if (typeof value === 'undefined') {\n        return NaN;\n    }\n    if (typeof value === 'number') {\n        return value;\n    }\n    return parseInt(value, dex);\n}\nfunction isNumber(value) {\n    return !isNaN(toNumber(value));\n}\nfunction parseHours(value, isPM = false) {\n    const hour = toNumber(value);\n    if (isNaN(hour) ||\n        hour < 0 ||\n        hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n        return NaN;\n    }\n    return hour;\n}\nfunction parseMinutes(value) {\n    const minute = toNumber(value);\n    if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n        return NaN;\n    }\n    return minute;\n}\nfunction parseSeconds(value) {\n    const seconds = toNumber(value);\n    if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n        return NaN;\n    }\n    return seconds;\n}\nfunction parseTime(value) {\n    if (typeof value === 'string') {\n        return new Date(value);\n    }\n    return value;\n}\nfunction changeTime(value, diff) {\n    if (!value) {\n        return changeTime(createDate(new Date(), 0, 0, 0), diff);\n    }\n    if (!diff) {\n        return value;\n    }\n    let hour = value.getHours();\n    let minutes = value.getMinutes();\n    let seconds = value.getSeconds();\n    if (diff.hour) {\n        hour = hour + toNumber(diff.hour);\n    }\n    if (diff.minute) {\n        minutes = minutes + toNumber(diff.minute);\n    }\n    if (diff.seconds) {\n        seconds = seconds + toNumber(diff.seconds);\n    }\n    return createDate(value, hour, minutes, seconds);\n}\nfunction setTime(value, opts) {\n    let hour = parseHours(opts.hour);\n    const minute = parseMinutes(opts.minute);\n    const seconds = parseSeconds(opts.seconds) || 0;\n    if (opts.isPM && hour !== 12) {\n        hour += hoursPerDayHalf;\n    }\n    if (!value) {\n        if (!isNaN(hour) && !isNaN(minute)) {\n            return createDate(new Date(), hour, minute, seconds);\n        }\n        return value;\n    }\n    if (isNaN(hour) || isNaN(minute)) {\n        return value;\n    }\n    return createDate(value, hour, minute, seconds);\n}\nfunction createDate(value, hours, minutes, seconds) {\n    const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n    // #3139 ensure date part remains unchanged\n    newValue.setFullYear(value.getFullYear());\n    newValue.setMonth(value.getMonth());\n    newValue.setDate(value.getDate());\n    return newValue;\n}\nfunction padNumber(value) {\n    const _value = value.toString();\n    if (_value.length > 1) {\n        return _value;\n    }\n    return `0${_value}`;\n}\nfunction isHourInputValid(hours, isPM) {\n    return !isNaN(parseHours(hours, isPM));\n}\nfunction isMinuteInputValid(minutes) {\n    return !isNaN(parseMinutes(minutes));\n}\nfunction isSecondInputValid(seconds) {\n    return !isNaN(parseSeconds(seconds));\n}\nfunction isInputLimitValid(diff, max, min) {\n    const newDate = setTime(new Date(), diff);\n    if (!newDate) {\n        return false;\n    }\n    if (max && newDate > max) {\n        return false;\n    }\n    if (min && newDate < min) {\n        return false;\n    }\n    return true;\n}\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n    return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n    return isHourInputValid(hours, isPM)\n        && isMinuteInputValid(minutes)\n        && isSecondInputValid(seconds);\n}\n\nfunction canChangeValue(state, event) {\n    if (state.readonlyInput || state.disabled) {\n        return false;\n    }\n    if (event) {\n        if (event.source === 'wheel' && !state.mousewheel) {\n            return false;\n        }\n        if (event.source === 'key' && !state.arrowkeys) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction canChangeHours(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementHours) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementHours) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeMinutes(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementMinutes) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementMinutes) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeSeconds(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementSeconds) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementSeconds) {\n        return false;\n    }\n    return true;\n}\nfunction getControlsValue(state) {\n    const { hourStep, minuteStep, secondsStep, readonlyInput, disabled, mousewheel, arrowkeys, showSpinners, showMeridian, showSeconds, meridians, min, max } = state;\n    return {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowkeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    };\n}\nfunction timepickerControls(value, state) {\n    const hoursPerDay = 24;\n    const hoursPerDayHalf = 12;\n    const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n    const res = {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    };\n    if (!value) {\n        return res;\n    }\n    // compare dates\n    if (max) {\n        const _newHour = changeTime(value, { hour: hourStep });\n        res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\n        if (!res.canIncrementHours) {\n            const _newMinutes = changeTime(value, { minute: minuteStep });\n            res.canIncrementMinutes = showSeconds\n                ? max > _newMinutes\n                : max >= _newMinutes;\n        }\n        if (!res.canIncrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: secondsStep });\n            res.canIncrementSeconds = max >= _newSeconds;\n        }\n        if (value.getHours() < hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n        }\n    }\n    if (min) {\n        const _newHour = changeTime(value, { hour: -hourStep });\n        res.canDecrementHours = min < _newHour;\n        if (!res.canDecrementHours) {\n            const _newMinutes = changeTime(value, { minute: -minuteStep });\n            res.canDecrementMinutes = showSeconds\n                ? min < _newMinutes\n                : min <= _newMinutes;\n        }\n        if (!res.canDecrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: -secondsStep });\n            res.canDecrementSeconds = min <= _newSeconds;\n        }\n        if (value.getHours() >= hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n        }\n    }\n    return res;\n}\n\n/** Provides default configuration values for timepicker */\nclass TimepickerConfig {\n    constructor() {\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds changes step */\n        this.secondsStep = 10;\n        /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n        this.showMeridian = true;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true emptyTime is not marked as invalid */\n        this.allowEmptyTime = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** hours aria label */\n        this.ariaLabelHours = 'hours';\n        /** minutes aria label */\n        this.ariaLabelMinutes = 'minutes';\n        /** seconds aria label */\n        this.ariaLabelSeconds = 'seconds';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst initialState = {\n    value: void 0,\n    config: new TimepickerConfig(),\n    controls: {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    }\n};\nfunction timepickerReducer(state = initialState, action) {\n    switch (action.type) {\n        case TimepickerActions.WRITE_VALUE: {\n            return Object.assign({}, state, { value: action.payload });\n        }\n        case TimepickerActions.CHANGE_HOURS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeHours(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { hour: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_MINUTES: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeMinutes(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { minute: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_SECONDS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeSeconds(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, {\n                seconds: action.payload.step\n            });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.SET_TIME_UNIT: {\n            if (!canChangeValue(state.config)) {\n                return state;\n            }\n            const _newTime = setTime(state.value, action.payload);\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.UPDATE_CONTROLS: {\n            const _newControlsState = timepickerControls(state.value, action.payload);\n            const _newState = {\n                value: state.value,\n                config: action.payload,\n                controls: _newControlsState\n            };\n            if (state.config.showMeridian !== _newState.config.showMeridian) {\n                if (state.value) {\n                    _newState.value = new Date(state.value);\n                }\n            }\n            return Object.assign({}, state, _newState);\n        }\n        default:\n            return state;\n    }\n}\n\nclass TimepickerStore extends MiniStore {\n    constructor() {\n        const _dispatcher = new BehaviorSubject({\n            type: '[mini-ngrx] dispatcher init'\n        });\n        const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n        super(_dispatcher, timepickerReducer, state);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerStore, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerStore, providedIn: 'platform' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerStore, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: function () { return []; } });\n\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimepickerComponent),\n    multi: true\n};\nclass TimepickerComponent {\n    constructor(_config, _cd, _store, _timepickerActions) {\n        this._cd = _cd;\n        this._store = _store;\n        this._timepickerActions = _timepickerActions;\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds change step */\n        this.secondsStep = 10;\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** if true meridian button will be shown */\n        this.showMeridian = true;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** emits true if value is a valid date */\n        this.isValid = new EventEmitter();\n        /** emits value of meridian*/\n        this.meridianChange = new EventEmitter();\n        // ui variables\n        this.hours = '';\n        this.minutes = '';\n        this.seconds = '';\n        this.meridian = '';\n        // min\\max validation for input fields\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n        // aria-label variables\n        this.labelHours = 'hours';\n        this.labelMinutes = 'minutes';\n        this.labelSeconds = 'seconds';\n        // time picker controls state\n        this.canIncrementHours = true;\n        this.canIncrementMinutes = true;\n        this.canIncrementSeconds = true;\n        this.canDecrementHours = true;\n        this.canDecrementMinutes = true;\n        this.canDecrementSeconds = true;\n        this.canToggleMeridian = true;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onChange = Function.prototype;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onTouched = Function.prototype;\n        this.config = _config;\n        Object.assign(this, this.config);\n        this.timepickerSub = _store.select(state => state.value)\n            .subscribe((value) => {\n            // update UI values if date changed\n            this._renderTime(value);\n            this.onChange(value);\n            this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n        });\n        _store.select(state => state.controls)\n            .subscribe((controlsState) => {\n            const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n            const isValid = this.config.allowEmptyTime ?\n                this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n                : isTimepickerInputValid;\n            this.isValid.emit(isValid);\n            Object.assign(this, controlsState);\n            _cd.markForCheck();\n        });\n    }\n    /** @deprecated - please use `isEditable` instead */\n    get isSpinnersVisible() {\n        return this.showSpinners && !this.readonlyInput;\n    }\n    get isEditable() {\n        return !(this.readonlyInput || this.disabled);\n    }\n    resetValidation() {\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n    }\n    isPM() {\n        return this.showMeridian && this.meridian === this.meridians[1];\n    }\n    prevDef($event) {\n        $event.preventDefault();\n    }\n    wheelSign($event) {\n        return Math.sign($event.deltaY || 0) * -1;\n    }\n    ngOnChanges() {\n        this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    }\n    changeHours(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n    }\n    changeMinutes(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeMinutes({ step, source }));\n    }\n    changeSeconds(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeSeconds({ step, source }));\n    }\n    updateHours(target) {\n        this.resetValidation();\n        this.hours = target.value;\n        const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidHours = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateMinutes(target) {\n        this.resetValidation();\n        this.minutes = target.value;\n        const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidMinutes = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateSeconds(target) {\n        this.resetValidation();\n        this.seconds = target.value;\n        const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidSeconds = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    isValidLimit() {\n        return isInputLimitValid({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }, this.max, this.min);\n    }\n    isOneOfDatesIsEmpty() {\n        return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n    }\n    _updateTime() {\n        const _seconds = this.showSeconds ? this.seconds : void 0;\n        const _minutes = this.showMinutes ? this.minutes : void 0;\n        const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._store.dispatch(this._timepickerActions.setTime({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }));\n    }\n    toggleMeridian() {\n        if (!this.showMeridian || !this.isEditable) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        this._store.dispatch(this._timepickerActions.changeHours({\n            step: _hoursPerDayHalf,\n            source: ''\n        }));\n    }\n    /**\n     * Write a new value to the element.\n     */\n    writeValue(obj) {\n        if (isValidDate(obj)) {\n            this.resetValidation();\n            this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n        }\n        else if (obj == null) {\n            this._store.dispatch(this._timepickerActions.writeValue());\n        }\n    }\n    /**\n     * Set the function to be called when the control receives a change event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Set the function to be called when the control receives a touch event.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * This function is called when the control status changes to or from \"disabled\".\n     * Depending on the value, it will enable or disable the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._cd.markForCheck();\n    }\n    ngOnDestroy() {\n        this.timepickerSub?.unsubscribe();\n    }\n    _renderTime(value) {\n        if (!value || !isValidDate(value)) {\n            this.hours = '';\n            this.minutes = '';\n            this.seconds = '';\n            this.meridian = this.meridians[0];\n            this.meridianChange.emit(this.meridian);\n            return;\n        }\n        const _value = parseTime(value);\n        if (!_value) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        let _hours = _value.getHours();\n        if (this.showMeridian) {\n            this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n            this.meridianChange.emit(this.meridian);\n            _hours = _hours % _hoursPerDayHalf;\n            // should be 12 PM, not 00 PM\n            if (_hours === 0) {\n                _hours = _hoursPerDayHalf;\n            }\n        }\n        this.hours = padNumber(_hours);\n        this.minutes = padNumber(_value.getMinutes());\n        this.seconds = padNumber(_value.getUTCSeconds());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerComponent, deps: [{ token: TimepickerConfig }, { token: i0.ChangeDetectorRef }, { token: TimepickerStore }, { token: TimepickerActions }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.4\", type: TimepickerComponent, selector: \"timepicker\", inputs: { hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondsStep: \"secondsStep\", readonlyInput: \"readonlyInput\", disabled: \"disabled\", mousewheel: \"mousewheel\", arrowkeys: \"arrowkeys\", showSpinners: \"showSpinners\", showMeridian: \"showMeridian\", showMinutes: \"showMinutes\", showSeconds: \"showSeconds\", meridians: \"meridians\", min: \"min\", max: \"max\", hoursPlaceholder: \"hoursPlaceholder\", minutesPlaceholder: \"minutesPlaceholder\", secondsPlaceholder: \"secondsPlaceholder\" }, outputs: { isValid: \"isValid\", meridianChange: \"meridianChange\" }, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], usesOnChanges: true, ngImport: i0, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"], dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'timepicker', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], encapsulation: ViewEncapsulation.None, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: TimepickerConfig }, { type: i0.ChangeDetectorRef }, { type: TimepickerStore }, { type: TimepickerActions }]; }, propDecorators: { hourStep: [{\n                type: Input\n            }], minuteStep: [{\n                type: Input\n            }], secondsStep: [{\n                type: Input\n            }], readonlyInput: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], mousewheel: [{\n                type: Input\n            }], arrowkeys: [{\n                type: Input\n            }], showSpinners: [{\n                type: Input\n            }], showMeridian: [{\n                type: Input\n            }], showMinutes: [{\n                type: Input\n            }], showSeconds: [{\n                type: Input\n            }], meridians: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], hoursPlaceholder: [{\n                type: Input\n            }], minutesPlaceholder: [{\n                type: Input\n            }], secondsPlaceholder: [{\n                type: Input\n            }], isValid: [{\n                type: Output\n            }], meridianChange: [{\n                type: Output\n            }] } });\n\nclass TimepickerModule {\n    static forRoot() {\n        return {\n            ngModule: TimepickerModule,\n            providers: [TimepickerActions, TimepickerStore]\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerModule, declarations: [TimepickerComponent], imports: [CommonModule], exports: [TimepickerComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerModule, providers: [TimepickerStore], imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: TimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TimepickerComponent],\n                    exports: [TimepickerComponent],\n                    providers: [TimepickerStore]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}