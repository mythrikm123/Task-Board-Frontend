{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nexport class TaskboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n  }\n  ngOnInit() {\n    this.getTask();\n  }\n  getTask() {\n    this.dataService.getTaskData().subscribe(res => {\n      this.data = res;\n    });\n  }\n  toggleEditMode(task) {\n    task.editMode = !task.editMode;\n  }\n  saveTask(task) {\n    const updatedTask = {\n      Title: task.Title,\n      Description: task.Description,\n      DueDate: task.DueDate,\n      Priority: task.Priority\n    };\n    this.dataService.updateTask(task._id, updatedTask).subscribe(() => {\n      console.log('Task updated successfully');\n      task.editMode = false;\n      this.getTask();\n    }, error => {\n      console.error('Error updating task:', error);\n    });\n  }\n}\n_class = TaskboardComponent;\n_class.ɵfac = function TaskboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskserviceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskboard\"]],\n  decls: 0,\n  vars: 0,\n  template: function TaskboardComponent_Template(rf, ctx) {},\n  styles: [\".task-cards[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 20px;\\n    margin-top: 20px;\\n  }\\n  \\n  .task-card[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    width: calc(33.33% - 20px);\\n    padding: 15px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n    transition: transform 0.2s, box-shadow 0.2s;\\n    cursor: pointer;\\n  }\\n  \\n  .task-card[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-5px);\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    margin: 5px 0;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLFNBQVM7SUFDVCxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQixhQUFhO0lBQ2Isd0NBQXdDO0lBQ3hDLHNCQUFzQjtJQUN0QiwyQ0FBMkM7SUFDM0MsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLDJCQUEyQjtJQUMzQix3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLnRhc2stY2FyZHMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGdhcDogMjBweDtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC50YXNrLWNhcmQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDIwcHgpO1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMsIGJveC1zaGFkb3cgMC4ycztcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLnRhc2stY2FyZDpob3ZlciB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1oZWFkZXIge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtY29udGVudCBwIHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["TaskboardComponent","constructor","dataService","ngOnInit","getTask","getTaskData","subscribe","res","data","toggleEditMode","task","editMode","saveTask","updatedTask","Title","Description","DueDate","Priority","updateTask","_id","console","log","error","i0","ɵɵdirectiveInject","i1","TaskserviceService","selectors","decls","vars","template","TaskboardComponent_Template","rf","ctx","styles"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.css']\n})\nexport class TaskboardComponent implements OnInit {\n  data: any;\n\n  constructor(private dataService: TaskserviceService) {}\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  getTask() {\n    this.dataService.getTaskData().subscribe((res) => {\n      this.data = res;\n    });\n  }\n\n  toggleEditMode(task: any): void {\n    task.editMode = !task.editMode;\n  }\n\n  saveTask(task: any): void {\n    const updatedTask = {\n      Title: task.Title,\n      Description: task.Description,\n      DueDate: task.DueDate,\n      Priority: task.Priority,\n    };\n\n    this.dataService.updateTask(task._id, updatedTask).subscribe(\n      () => {\n        console.log('Task updated successfully');\n        task.editMode = false;\n        this.getTask();\n      },\n      (error) => {\n        console.error('Error updating task:', error);\n      }\n    );\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;EAAuB;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAOA,CAAA;IACL,IAAI,CAACF,WAAW,CAACG,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC/C,IAAI,CAACC,IAAI,GAAGD,GAAG;IACjB,CAAC,CAAC;EACJ;EAEAE,cAAcA,CAACC,IAAS;IACtBA,IAAI,CAACC,QAAQ,GAAG,CAACD,IAAI,CAACC,QAAQ;EAChC;EAEAC,QAAQA,CAACF,IAAS;IAChB,MAAMG,WAAW,GAAG;MAClBC,KAAK,EAAEJ,IAAI,CAACI,KAAK;MACjBC,WAAW,EAAEL,IAAI,CAACK,WAAW;MAC7BC,OAAO,EAAEN,IAAI,CAACM,OAAO;MACrBC,QAAQ,EAAEP,IAAI,CAACO;KAChB;IAED,IAAI,CAACf,WAAW,CAACgB,UAAU,CAACR,IAAI,CAACS,GAAG,EAAEN,WAAW,CAAC,CAACP,SAAS,CAC1D,MAAK;MACHc,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCX,IAAI,CAACC,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACP,OAAO,EAAE;IAChB,CAAC,EACAkB,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;;SArCWtB,kBAAkB;;mBAAlBA,MAAkB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;;QAAlB1B,MAAkB;EAAA2B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}