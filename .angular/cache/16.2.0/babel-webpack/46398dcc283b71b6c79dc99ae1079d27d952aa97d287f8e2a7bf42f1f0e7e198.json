{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskservice.service\";\nimport * as i2 from \"@angular/common\";\nfunction TaskboardComponent_div_1_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_1_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.toggleEditMode(task_r1));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_1_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_1_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.saveTask(task_r1));\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_1_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function TaskboardComponent_div_1_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const task_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.cancelEdit(task_r1));\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskboardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 4)(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 5);\n    i0.ɵɵtemplate(12, TaskboardComponent_div_1_button_12_Template, 2, 0, \"button\", 6);\n    i0.ɵɵtemplate(13, TaskboardComponent_div_1_button_13_Template, 2, 0, \"button\", 6);\n    i0.ɵɵtemplate(14, TaskboardComponent_div_1_button_14_Template, 2, 0, \"button\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.Title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.Description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", task_r1.DueDate, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Priority: \", task_r1.Priority, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r1.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r1.editMode);\n  }\n}\nexport class TaskboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n  }\n  ngOnInit() {\n    this.getTask();\n  }\n  getTask() {\n    this.dataService.getTaskData().subscribe(res => {\n      this.data = res;\n    });\n  }\n  toggleEditMode(task) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n  selectPriority(task, priority) {\n    task.updatedPriority = priority;\n  }\n  toggleEditMode(task) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n  saveTask(task) {\n    const updatedTask = {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    };\n    this.dataService.updateTask(task._id, updatedTask).subscribe(() => {\n      console.log('Task updated successfully');\n      task.Title = task.updatedTitle;\n      task.Description = task.updatedDescription;\n      task.DueDate = task.updatedDueDate;\n      task.Priority = task.updatedPriority;\n      task.editMode = false;\n    }, error => {\n      console.error('Error updating task:', error);\n    });\n  }\n}\n_class = TaskboardComponent;\n_class.ɵfac = function TaskboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskserviceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskboard\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"card-container\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-content\"], [1, \"card-actions\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n  template: function TaskboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, TaskboardComponent_div_1_Template, 15, 7, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\".card-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 20px;\\n  }\\n  \\n  .card[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    padding: 10px;\\n    width: 300px;\\n    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\\n    background-color: white;\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-content[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n  \\n  .card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    margin-right: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child {\\n    margin-right: 0;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLFNBQVM7RUFDWDs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLFlBQVk7SUFDWiwwQ0FBMEM7SUFDMUMsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgZ2FwOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1oZWFkZXIge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtY29udGVudCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1hY3Rpb25zIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtYWN0aW9ucyBidXR0b246bGFzdC1jaGlsZCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TaskboardComponent_div_1_button_12_Template_button_click_0_listener","ɵɵrestoreView","_r7","task_r1","ɵɵnextContext","$implicit","ctx_r5","ɵɵresetView","toggleEditMode","ɵɵtext","ɵɵelementEnd","TaskboardComponent_div_1_button_13_Template_button_click_0_listener","_r10","ctx_r8","saveTask","TaskboardComponent_div_1_button_14_Template_button_click_0_listener","_r13","ctx_r11","cancelEdit","ɵɵtemplate","TaskboardComponent_div_1_button_12_Template","TaskboardComponent_div_1_button_13_Template","TaskboardComponent_div_1_button_14_Template","ɵɵadvance","ɵɵtextInterpolate","Title","Description","ɵɵtextInterpolate1","DueDate","Priority","ɵɵproperty","editMode","TaskboardComponent","constructor","dataService","ngOnInit","getTask","getTaskData","subscribe","res","data","task","updatedTitle","updatedDescription","updatedDueDate","updatedPriority","selectPriority","priority","updatedTask","updateTask","_id","console","log","error","ɵɵdirectiveInject","i1","TaskserviceService","selectors","decls","vars","consts","template","TaskboardComponent_Template","rf","ctx","TaskboardComponent_div_1_Template"],"sources":["F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.ts","F:\\Angular\\Projects\\Intern-task\\frontend-taskcreation\\src\\app\\components\\taskboard\\taskboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskserviceService } from 'src/app/services/taskservice.service';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.css']\n})\nexport class TaskboardComponent implements OnInit {\n  data: any;\n\n  constructor(private dataService: TaskserviceService) {}\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  getTask() {\n    this.dataService.getTaskData().subscribe((res) => {\n      this.data = res;\n    });\n  }\n\n  toggleEditMode(task: any) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n\n  selectPriority(task: any, priority: string) {\n    task.updatedPriority = priority;\n  }\n\n  toggleEditMode(task: any) {\n    task.editMode = !task.editMode;\n    if (task.editMode) {\n      task.updatedTitle = task.Title;\n      task.updatedDescription = task.Description;\n      task.updatedDueDate = task.DueDate;\n      task.updatedPriority = task.Priority;\n    }\n  }\n  \n  saveTask(task: any) {\n    const updatedTask = {\n      Title: task.updatedTitle,\n      Description: task.updatedDescription,\n      DueDate: task.updatedDueDate,\n      Priority: task.updatedPriority\n    };\n  \n    this.dataService.updateTask(task._id, updatedTask).subscribe(\n      () => {\n        console.log('Task updated successfully');\n        task.Title = task.updatedTitle;\n        task.Description = task.updatedDescription;\n        task.DueDate = task.updatedDueDate;\n        task.Priority = task.updatedPriority;\n        task.editMode = false;\n      },\n      (error) => {\n        console.error('Error updating task:', error);\n      }\n    );\n  }\n  \n}\n","<div class=\"card-container\">\n    <div class=\"card\" *ngFor=\"let task of data\">\n      <div class=\"card-header\">\n        <h3>{{ task.Title }}</h3>\n      </div>\n      <div class=\"card-content\">\n        <p>{{ task.Description }}</p>\n        <p>Due Date: {{ task.DueDate }}</p>\n        <p>Priority: {{ task.Priority }}</p>\n      </div>\n      <div class=\"card-actions\">\n        <button *ngIf=\"!task.editMode\" (click)=\"toggleEditMode(task)\">Edit</button>\n        <button *ngIf=\"task.editMode\" (click)=\"saveTask(task)\">Save</button>\n        <button *ngIf=\"task.editMode\" (click)=\"cancelEdit(task)\">Cancel</button>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}